---
# Source: gloo-platform-crds/templates/admin.gloo.solo.io_crds.yaml
# Code generated by skv2. DO NOT EDIT.


apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 5163fa9e049cdf2b
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: dashboards.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: Dashboard
    listKind: DashboardList
    plural: dashboards
    singular: dashboard
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.State
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: Specifications for the resource.
            properties:
              authn:
                description: Configuration used to authenticate incoming requests.
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - oidc
                - required:
                  - oidc
                properties:
                  oidc:
                    description: |-
                      Configuration for an OpenID Connect (OIDC) identity provider
                      to secure the Gloo UI with.
                    properties:
                      appUrl:
                        description: |-
                          The URL that the Gloo UI is exposed at, such as 'https://localhost:8090',
                          to redirect to after successful authentication.
                        type: string
                      authEndpointQueryParams:
                        additionalProperties:
                          type: string
                        description: |-
                          Extra query parameters to apply to authorization requests to the
                          identity provider. For example, you might use the
                          [PKCE flow](https://www.oauth.com/oauth2-servers/pkce/authorization-request/)
                          by setting `code_challenge` and `code_challenge_method`.
                        type: object
                      caCertConfigmapName:
                        description: |-
                          A name of a config map that contains the root certificate to use
                          when connecting to the OIDC provider. The config map must contain
                          a key named "ca.crt" with the PEM-encoded CA.
                          To change this name such as to rotate the config map, you must restart the gloo-mesh-ui pod after the upgrade.
                        type: string
                      callbackPath:
                        description: Path to handle the OIDC callback.
                        type: string
                      clientId:
                        description: The client ID from the OIDC provider.
                        type: string
                      clientSecretName:
                        description: |-
                          The client secret from the OIDC identity provider.
                          Stored in a secret that you created in advance in the same namespace as the Gloo UI.
                          To change this name such as to rotate the secret, you must restart the gloo-mesh-ui pod after the upgrade.
                        type: string
                      discoveryOverride:
                        description: |-
                          Ensure that certain values are set regardless of what the OIDC
                          provider returns.
                        properties:
                          authEndpoint:
                            description: URL of the provider authorization endpoint.
                            type: string
                          authMethods:
                            description: |-
                              List of client authentication methods supported by the provider
                              token endpoint.
                            items:
                              type: string
                            type: array
                          claims:
                            description: List of claim types that the provider supports.
                            items:
                              type: string
                            type: array
                          idTokenAlgs:
                            description: |-
                              List of JSON web signature signing algorithms that the provider
                              supports for encoding claims in a JWT.
                            items:
                              type: string
                            type: array
                          jwksUri:
                            description: URL of the provider JSON web key set.
                            type: string
                          responseTypes:
                            description: List of response types that the provider supports.
                            items:
                              type: string
                            type: array
                          scopes:
                            description: List of scope values that the provider supports.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: List of subject identifier types that the provider
                              supports.
                            items:
                              type: string
                            type: array
                          tokenEndpoint:
                            description: URL of the provider token endpoint.
                            type: string
                        type: object
                      discoveryPollInterval:
                        description: |-
                          How often to poll the OIDC issuer for new configuration.
                          For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#duration).
                        type: string
                      issuerUrl:
                        description: |-
                          The URL to connect to the OIDC identity provider,
                          often in the format `https://<domain>.<provider_url>/`.
                          Gloo looks for OIDC information in `{{ issuerURL }}/.well-known/openid-configuration`.
                        type: string
                      jwksCacheRefreshPolicy:
                        description: |-
                          If a user sends a request with a key that is not found in the
                          JWKS, the keys might have rotated on the remote source,
                          but not yet in the local cache. Use this policy to configure
                          how to refresh the local cache when handling a request that
                          provides an invalid key.
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - never
                            - required:
                              - always
                            - required:
                              - maxIdpReqPerPollingInterval
                        - required:
                          - never
                        - required:
                          - always
                        - required:
                          - maxIdpReqPerPollingInterval
                        properties:
                          always:
                            description: |-
                              If a key is not in the cache, fetch the most recent keys from
                              the IdP and update the cache. NOTE: Use this setting only
                              in trusted environments, because each missing key triggers
                              a request to the IdP. When used in an environment that is exposed
                              to the internet, malicious agents can execute a DDoS
                              attack by spamming protected endpoints with tokens signed by
                              invalid keys.
                              For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#empty).
                            maxProperties: 0
                            type: object
                          maxIdpReqPerPollingInterval:
                            description: |-
                              If a key is not in the cache, fetch the most recent keys from
                              the IdP and update the cache. This value sets the number of
                              requests to the IdP per polling interval. If that limit is
                              exceeded, fetching from the IdP stops for the
                              remainder of the polling interval.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          never:
                            description: |-
                              Never refresh the local JWKS cache on demand. If a key is not
                              in the local cache, it is assumed to be malicious. This is the
                              default policy, because IdPs typically publish keys before
                              they rotate them, and frequent polling finds the newest keys.
                              For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#empty).
                            maxProperties: 0
                            type: object
                        type: object
                      logoutPath:
                        description: |-
                          Path used to logout.
                          If unset or empty, logout is disabled.
                        type: string
                      scopes:
                        description: Scopes to request in addition to 'openid'.
                        items:
                          type: string
                        type: array
                      session:
                        description: Configuration for session storage.
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - cookie
                            - required:
                              - redis
                        - required:
                          - cookie
                        - required:
                          - redis
                        properties:
                          cookie:
                            description: Store the session data in the session cookie.
                            type: object
                          cookieOptions:
                            description: Configuration for storing the session data in
                              the session cookie.
                            properties:
                              domain:
                                description: Domain of the cookie.
                                type: string
                              maxAge:
                                description: |-
                                  Max age of the cookie. If unset, defaults to 30.
                                  To disable expiration, set this field to 0.
                                maximum: 4294967295
                                minimum: 0
                                nullable: true
                                type: integer
                              notSecure:
                                description: |-
                                  Use an insecure cookie.
                                  Only set this field to true when testing in trusted environments.
                                type: boolean
                              path:
                                description: |-
                                  Path of the cookie. Defaults to "/".
                                  To disable this option, set this field to "".
                                nullable: true
                                type: string
                            type: object
                          redis:
                            description: Store the session data in a Redis instance.
                            properties:
                              allowRefreshing:
                                description: |-
                                  Refresh expired ID tokens by using the refresh token. Defaults to true.
                                  To disable refreshing, set this field to false.
                                nullable: true
                                type: boolean
                              cookieName:
                                description: |-
                                  The name of the cookie header to set and store the session ID.
                                  If unset, defaults to `"__session”`.
                                type: string
                              db:
                                description: |-
                                  The Redis database to use, indexed to start at `0`.
                                  If unset, defaults to `0`.
                                format: int32
                                type: integer
                              host:
                                description: The address of the Redis instance to use,
                                  in the format `address:port` or `unix://path-to-unix.sock`.
                                type: string
                              keyPrefix:
                                description: Redis key prefix.
                                type: string
                              poolSize:
                                description: |-
                                  The maximum number of connections to establish at once.
                                  If unset, defaults to 10 connections per CPU.
                                format: int32
                                type: integer
                            type: object
                        type: object
                      tokenEndpointQueryParams:
                        additionalProperties:
                          type: string
                        description: |-
                          Extra query parameters to apply to token requests to the identity
                          provider. For example, you might use the
                          [PKCE flow](https://www.oauth.com/oauth2-servers/pkce/authorization-request/)
                          by setting `code_challenge` and `code_challenge_method`.
                        type: object
                      userMapping:
                        description: |-
                          If set, the ID token is used to infer user identity,
                          which can be used to make authorization decisions.
                          If unset or empty, no authorization is made.
                        properties:
                          groupsClaim:
                            description: |-
                              Configure the OIDCAuthenticator to try to populate the user's
                              groups with an ID Token field.
                              If the GroupsClaim field is present in an ID Token, the value
                              must be a string or list of strings.
                            type: string
                          groupsPrefix:
                            description: |-
                              Add a prefix to each mapped group name.
                              For example, the value `oidc:` results in group names such as `oidc:engineering`.
                            type: string
                          usernameClaim:
                            description: The JWT field to use as the user's username.
                            type: string
                          usernamePrefix:
                            description: |-
                              Add a prefix to each mapped username.
                              For example, the value `oidc:` results in usernames such as `oidc:john`.
                            type: string
                        type: object
                    type: object
                type: object
              authz:
                description: Configuration used to authorize incoming requests.
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - multiClusterRbac
                - required:
                  - multiClusterRbac
                properties:
                  multiClusterRbac:
                    description: |-
                      Enable multicluster RBAC so that RBAC resources in workload clusters
                      are used to determine whether users can view resources in the Gloo UI.
                      To use multicluster RBAC, the Gloo UI and the workload clusters must
                      use the same identity source, such as an OIDC provider with the same
                      user and group claims. When using OIDC, make sure to configure the
                      `userMapping` field.
                    type: object
                type: object
            type: object
          status:
            properties:
              errors:
                description: Any errors encountered while translating the Dashboard resource.
                items:
                  type: string
                type: array
              observedGeneration:
                description: |-
                  The most recent generation observed in the Dashboard metadata.
                  If the `observedGeneration` does not match `metadata.generation`,
                  Gloo has not processed the most recent version of this resource.
                format: int64
                type: integer
              state:
                description: Whether the resource has been accepted as valid and processed
                  in the Gloo config translation.
                enum:
                - PENDING
                - ACCEPTED
                - INVALID
                - WARNING
                - FAILED
                - UNLICENSED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/admin.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 5ec7a394807dfada
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: extauthservers.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ExtAuthServer
    listKind: ExtAuthServerList
    plural: extauthservers
    shortNames:
    - ess
    - eas
    singular: extauthserver
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              ExtAuthServer is used configure the backend server used to enforce ExtAuthPolicies.
              All ExtAuthPolicies in a workspace require an ExtAuthServer to in order to function.
              If no ExtAuthServer is provided, a default configuration will be used.
              Currently Gloo Mesh only supports a single ExtAuthServer per workspace.
            properties:
              clearRouteCache:
                description: |-
                  Clear the route cache to force the external auth service to recalculate the routing decision.
                  All cached routes are cleared if one of the following conditions is met.
    
                  1. The field is set to *true*.
    
                  2. The external auth service returns a HTTP 200 or gRPC 0 response code.
    
                  3. At least one *authorization response header* is added to the client request, or is used to
                  alter another client request header.
    
                  The default value is **false**.
                type: boolean
              destinationServer:
                description: |-
                  Select the destination that Gloo uses to externally authenticate traffic.
                  The destination can be a Kubernetes service, such as the Gloo external auth service or your own external auth service, or a VirtualDestination.
                  The destination cannot be an ExternalService.
                  <ul><li>Kubernetes service: Make sure to select the correct cluster and namespace of the external auth destination.
                  For example, although you create this ExtAuthServer resource in the management cluster in most cases, remember that the Gloo external auth service runs in each workload cluster.</li>
                  <li>Virtual destination: Group up to one external auth service for each registered cluster.
                  The external auth service names and namespaces must match on all clusters. Also, the namespaces must be enabled for Istio-injection
                  so that the external auth pods have sidecars.</li></ul>
                  If this field is omitted, Gloo looks for the default `ext-auth-service` Kubernetes service in the `gloo-mesh` namespace in all
                  workload clusters where an `ExtAuthPolicy` that uses this `ExtAuthServer` must be applied.
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - ref
                    - required:
                      - awsLambda
                - required:
                  - ref
                - required:
                  - awsLambda
                properties:
                  awsLambda:
                    description: Reference an AWS Lambda function.
                    properties:
                      cloudProvider:
                        description: Reference to the AWS Cloud Provider.
                        properties:
                          cluster:
                            description: the cluster of the object. If omitted, Gloo Mesh
                              will use the same cluster as the parent object containing
                              this reference.
                            type: string
                          name:
                            description: the name of the object
                            type: string
                          namespace:
                            description: the namespace of the object. If omitted, Gloo
                              Mesh will use the same namespace as the parent object containing
                              this reference.
                            type: string
                        type: object
                      function:
                        description: Name of the function to reference.
                        type: string
                      options:
                        description: |-
                          Specify how the destinations should be configured, for configuring lambda functions.
                          If the destination config is required for the destination and not provided by the user, Gloo will invalidate the
                          destination and its parent resources.
                        properties:
                          invocationStyle:
                            description: |-
                              Can be either Sync or Async. See [AWS Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html)
                              for more details.
                            enum:
                            - SYNC
                            - ASYNC
                            type: string
                          requestTransformation:
                            enum:
                            - REQUEST_DEFAULT
                            - REQUEST_DISABLE
                            type: string
                          responseTransformation:
                            enum:
                            - RESPONSE_DEFAULT
                            - RESPONSE_DISABLE
                            type: string
                        type: object
                      qualifier:
                        description: Qualifier of the function to reference. Defaults
                          to $LATEST
                        type: string
                    type: object
                  kind:
                    description: |-
                      the kind of Kubernetes destination being referenced. defaults to Service.
                      Only applicable for Kubernetes destinations. For non Kubernetes destinations, this field is ignored.
                    enum:
                    - SERVICE
                    - VIRTUAL_DESTINATION
                    - EXTERNAL_SERVICE
                    type: string
                  port:
                    description: the port on the destination object being targeted. required
                      if the object provides more than one port.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - number
                        - required:
                          - name
                    - required:
                      - number
                    - required:
                      - name
                    properties:
                      name:
                        description: the name of the port on the destination objects being
                          targeted.
                        type: string
                      number:
                        description: the number of the port on the destination objects
                          being targeted.
                        maximum: 65535
                        minimum: 1
                        type: integer
                    type: object
                  ref:
                    description: reference to a Kubernetes destination object by its metadata
                    properties:
                      cluster:
                        description: the cluster of the object. If omitted, Gloo Mesh
                          will use the same cluster as the parent object containing this
                          reference.
                        type: string
                      name:
                        description: the name of the object
                        type: string
                      namespace:
                        description: the namespace of the object. If omitted, Gloo Mesh
                          will use the same namespace as the parent object containing
                          this reference.
                        type: string
                    type: object
                  subset:
                    additionalProperties:
                      type: string
                    description: |-
                      select a subset of the destination's endpoints for routing based on their labels.
                      Only applicable for Kubernetes destinations.
                    type: object
                  weight:
                    description: |-
                      Specify the proportion of traffic to be forwarded to this destination.
                      Weights across all of the `destinations` must sum to 100.
                      Weight is only relevant when used in the context of a route with multiple destinations.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
              failureModeAllow:
                description: |-
                  In case of a failure or timeout querying the auth server, normally a request is denied.
                  if this is set to true, the request will be allowed.
                type: boolean
              httpService:
                description: If this is set, communication to the upstream will be via
                  HTTP and not GRPC.
                properties:
                  pathPrefix:
                    description: Sets a prefix to the value of authorization request header
                      *Path*.
                    type: string
                  request:
                    properties:
                      allowedHeaders:
                        description: |-
                          These headers will be copied from the incoming request to the request going
                          to the auth server. Note that in addition to the user's supplied matchers:
    
                          1. *Host*, *Method*, *Path* and *Content-Length* are automatically included to the list.
    
                          2. *Content-Length* will be set to 0 and the request to the authorization service will not have
                          a message body.
                        items:
                          type: string
                        type: array
                      headersToAdd:
                        additionalProperties:
                          type: string
                        description: |-
                          These headers that will be included to the request to authorization service. Note that
                          client request of the same key will be overridden.
                        type: object
                    type: object
                  response:
                    properties:
                      allowedClientHeaders:
                        description: |-
                          When this. is set, authorization response headers that will be added to the client's response when auth request is denied.
                          Note that when this list is *not* set, all the authorization response headers, except *Authority
                          (Host)* will be in the response to the client. When a header is included in this list, *Path*,
                          *Status*, *Content-Length*, *WWW-Authenticate* and *Location* are automatically added.
                        items:
                          type: string
                        type: array
                      allowedUpstreamHeaders:
                        description: |-
                          When this is set, authorization response headers that have a will be added to the original client request and sent to the upstream.
                          Note that coexistent headers will be overridden.
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              requestBody:
                description: Set this if you also want to send the body of the request,
                  and not just the headers.
                properties:
                  allowPartialMessage:
                    description: |-
                      When this field is true, Envoy will buffer the message until *max_request_bytes* is reached.
                      The authorization request will be dispatched and no 413 HTTP error will be returned by the
                      filter.
                    type: boolean
                  maxRequestBytes:
                    description: |-
                      Sets the maximum size of a message body that the filter will hold in memory. Envoy will return
                      *HTTP 413* and will *not* initiate the authorization process when buffer reaches the number
                      set in this field. Note that this setting will have precedence over failure_mode_allow.
                      Defaults to 4KB.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  packAsBytes:
                    description: When this field is true, Envoy will send the body sent
                      to the external authorization service with raw bytes.
                    type: boolean
                type: object
              requestTimeout:
                description: |-
                  Timeout for the ext auth service to respond. Defaults to 2s.
                  For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#duration).
                type: string
              statPrefix:
                description: |-
                  Optional additional prefix to use when emitting statistics.
                  This allows to distinguish emitted statistics between configured ext_authz filters in an HTTP filter chain.
                type: string
              statusOnError:
                description: |-
                  Sets the HTTP status that is returned to the client when there is a network error between the
                  filter and the authorization server. The default status is HTTP 403 Forbidden.
                  If set, this must be one of the following:
                  - 100
                  - 200 201 202 203 204 205 206 207 208 226
                  - 300 301 302 303 304 305 307 308
                  - 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 421 422 423 424 426 428 429 431
                  - 500 501 502 503 504 505 506 507 508 510 511
                maximum: 4294967295
                minimum: 0
                type: integer
              transportApiVersion:
                description: |-
                  Determines the API version for the `ext_authz` transport protocol that will be used by Envoy
                  to communicate with the auth server. Defaults to `V3`. For more info, see the `transport_api_version` field
                  [here](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/http/ext_authz/v3/ext_authz.proto#extensions-filters-http-ext-authz-v3-extauthz).
                enum:
                - GLOO_MESH_AUTO
                - ENVOY_AUTO
                - V3
                type: string
            type: object
          status:
            description: The status of the resource after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numAppliedPolicies:
                description: The count of ExtAuthPolicies that reference this ExtAuthServer.
                maximum: 4294967295
                minimum: 0
                type: integer
              numSelectedBackingServices:
                description: |-
                  The count of backing services that this ExtAuthServer selects. In the case of a VirtualDestination,
                  this will be the count of backing services that the VirtualDestination selects. Otherwise, this will be
                  the count of backing kube services that the ExtAuthServer selects.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/admin.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 35c2eead31db4d7f
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: gatewaylifecyclemanagers.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: GatewayLifecycleManager
    listKind: GatewayLifecycleManagerList
    plural: gatewaylifecyclemanagers
    shortNames:
    - glm
    singular: gatewaylifecyclemanager
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: Specifications for the `GatewayLifecycleManager` resource.
            properties:
              helmGlobal:
                description: Optional default configuration applicable to all installations
                properties:
                  repo:
                    description: |-
                      The base URL to the Helm repository that stores the Istio charts.
                      Currently, only OCI registries are supported. Because of that, the base URL must begin with `oci://`.
                      This base URL is used to construct the URLs for specific charts. For example, if you specify `oci://gcr.io/istio/charts` as the base URL, it is used to construct the URL to a specific chart, such as `oci://gcr.io/istio/charts/istiod`.
    
                      If no base URL is specified, the IstioLifecycleManager attempts to pull the Istio charts from a set of known repositories,
                      including the official Istio upstream repository (`oci://gcr.io/istio-release/charts`).
                    type: string
                  repoSecrets:
                    description: |-
                      Optional. If present, the Gloo agent uses the credentials in the given secrets to log in to the OCI
                      registry to access Istio charts.
                      Similar to ImagePullSecrets, the secrets that you specify in this section must be of type `kubernetes.io/dockerconfigjson` and
                      must exist on all the clusters where you want the Gloo agent to install Istio.
                    items:
                      description: |-
                        ObjectReference contains enough information to let you inspect or modify the referred object.
                        ---
                        New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                         1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                         2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                            restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                            Those cannot be well described when embedded.
                         3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                         4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                            during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                            and the version of the actual struct is irrelevant.
                         5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                            will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.
                        Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                        For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                        +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
                        +structType=atomic
                      properties:
                        apiVersion:
                          description: |-
                            API version of the referent.
                            +optional
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                            TODO: this design is not final and this field is subject to change in the future.
                            +optional
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                            +optional
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            +optional
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            +optional
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                            +optional
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                            +optional
                          type: string
                      type: object
                    type: array
                  repoSkipTlsVerify:
                    description: |-
                      Optional. If true, skip TLS verification when pulling Helm charts from a given OCI repository.
                      Use this setting for testing, quick demos, and exploration purposes only. In production setup, make sure that each
                      node is configured to trust the certificate that is presented by the chart OCI registry.
                    type: boolean
                type: object
              installations:
                description: List of Istio gateway installations.
                items:
                  description: |-
                    List of Istio gateway installations.
                    Any components that are not related to the gateway are ignored.
                    You can provide only one type of gateway installation per revision in a cluster.
                    For example, in a workload cluster `cluster2`, you can install only one east-west
                    gateway that runs revision `1-19-5`.
                  properties:
                    clusters:
                      description: Clusters to install the Istio gateways in.
                      items:
                        description: Clusters to install the Istio gateways in.
                        properties:
                          activeGateway:
                            description: |-
                              Optional: Defaults to false.
                              When set to true, the gateway installation for this revision is applied as the active gateway through which primary service traffic is routed in the cluster.
                              If the `istioOperatorSpec` defines a service, this field switches the service selectors to the revision specified in the `gatewayRevsion`.
                              You might change this setting for gateway installations during a canary upgrade.
                              For more info, see the [upgrade docs](https://docs.solo.io/gloo-mesh-enterprise/latest/istio/ilm-upgrade/).
                            type: boolean
                          name:
                            description: |-
                              Name of the cluster to install the gateway into.
                              Must match the name of the cluster that you used when you registered the cluster with Gloo.
                            type: string
                          trustDomain:
                            description: |-
                              Optional: By default, the `trustDomain` value in the `meshConfig` section of the operator spec is automatically set by the Gloo to the name of each workload cluster.
                              To override the `trustDomain` for each cluster, you can instead specify the override value by using this `trustDomain` field,
                              and include the value in the list of cluster names. For example, if you specify `meshConfig.trustDomain: cluster1-trust-override` in your operator spec,
                              you then specify both the cluster name (`name: cluster1`) and the trust domain (`trustDomain: cluster1-trust-override`) in this `installations.clusters` section.
                              Additionally, because Gloo requires multiple trust domains for east-west routing, the `PILOT_SKIP_VALIDATE_TRUST_DOMAIN` field is set to `"true"` by default.
                              For more info, see the [Istio documentation](https://istio.io/latest/docs/reference/config/istio.mesh.v1alpha1).
                            type: string
                        type: object
                      type: array
                    controlPlaneRevision:
                      description: |-
                        Optional: The revision of an Istio control plane in the cluster that this gateway should also use.
                        If a control plane installation of this revision is not found, no gateway is created.
                      type: string
                    gatewayRevision:
                      description: |-
                        Istio revision for this gateway installation.
                        When set to `auto`, Gloo installs the gateway with the default supported version of the Solo distribution of Istio.
                      type: string
                    istioOperatorSpec:
                      description: |-
                        IstioOperator specification for the gateway.
                        For more info, see the [Istio documentation](https://istio.io/latest/docs/reference/config/istio.operator.v1alpha1/).
                      properties:
                        addonComponents:
                          additionalProperties:
                            properties:
                              chartPath:
                                description: Chart path for addon components.
                                type: string
                              enabled:
                                description: Selects whether this component is installed.
                                nullable: true
                                type: boolean
                              k8s:
                                description: Kubernetes resource spec.
                                properties:
                                  affinity:
                                    description: |-
                                      k8s affinity.
                                      [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  env:
                                    description: |-
                                      Deployment environment variables.
                                      [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                    items:
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                  hpaSpec:
                                    description: |-
                                      k8s HorizontalPodAutoscaler settings.
                                      [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  imagePullPolicy:
                                    description: |-
                                      k8s imagePullPolicy.
                                      [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                    type: string
                                  nodeSelector:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      k8s nodeSelector.
                                      [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                    type: object
                                  overlays:
                                    description: Overlays for k8s resources in rendered
                                      manifests.
                                    items:
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                  podAnnotations:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      k8s pod annotations.
                                      [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                    type: object
                                  podDisruptionBudget:
                                    description: |-
                                      k8s PodDisruptionBudget settings.
                                      [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  priorityClassName:
                                    description: |-
                                      k8s priority_class_name. Default for all resources unless overridden.
                                      [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                    type: string
                                  readinessProbe:
                                    description: |-
                                      k8s readinessProbe settings.
                                      [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                      k8s.io.api.core.v1.Probe readiness_probe = 9;
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  replicaCount:
                                    description: |-
                                      k8s Deployment replicas setting.
                                      [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                  resources:
                                    description: |-
                                      k8s resources settings.
                                      [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  securityContext:
                                    description: |-
                                      k8s pod security context
                                      [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  service:
                                    description: |-
                                      k8s Service settings.
                                      [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  serviceAnnotations:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      k8s service annotations.
                                      [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                    type: object
                                  strategy:
                                    description: |-
                                      k8s deployment strategy.
                                      [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  tolerations:
                                    description: |-
                                      k8s toleration
                                      [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                    items:
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                  volumeMounts:
                                    description: |-
                                      k8s volumeMounts
                                      VolumeMounts defines the collection of VolumeMount to inject into containers.
                                    items:
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                  volumes:
                                    description: |-
                                      k8s volume
                                      [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                      Volumes defines the collection of Volume to inject into the pod.
                                    items:
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                type: object
                              namespace:
                                description: Namespace for the component.
                                type: string
                              schema:
                                description: |-
                                  Optional schema to validate spec against.
                                  For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#any).
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              spec:
                                description: |-
                                  Arbitrary install time configuration for the component.
                                  For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          description: |-
                            Deprecated.
                            Users should manage the installation of addon components on their own.
                            Refer to samples/addons for demo installation of addon components.
                          type: object
                        components:
                          description: |-
                            Kubernetes resource settings, enablement and component-specific settings that are not internal to the
                            component.
                          properties:
                            base:
                              properties:
                                enabled:
                                  description: Selects whether this component is installed.
                                  nullable: true
                                  type: boolean
                                k8s:
                                  description: Kubernetes resource spec.
                                  properties:
                                    affinity:
                                      description: |-
                                        k8s affinity.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    env:
                                      description: |-
                                        Deployment environment variables.
                                        [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    hpaSpec:
                                      description: |-
                                        k8s HorizontalPodAutoscaler settings.
                                        [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    imagePullPolicy:
                                      description: |-
                                        k8s imagePullPolicy.
                                        [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                      type: string
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s nodeSelector.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                      type: object
                                    overlays:
                                      description: Overlays for k8s resources in rendered
                                        manifests.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    podAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s pod annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    podDisruptionBudget:
                                      description: |-
                                        k8s PodDisruptionBudget settings.
                                        [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    priorityClassName:
                                      description: |-
                                        k8s priority_class_name. Default for all resources unless overridden.
                                        [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                      type: string
                                    readinessProbe:
                                      description: |-
                                        k8s readinessProbe settings.
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                        k8s.io.api.core.v1.Probe readiness_probe = 9;
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    replicaCount:
                                      description: |-
                                        k8s Deployment replicas setting.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    resources:
                                      description: |-
                                        k8s resources settings.
                                        [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    securityContext:
                                      description: |-
                                        k8s pod security context
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    service:
                                      description: |-
                                        k8s Service settings.
                                        [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    serviceAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s service annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    strategy:
                                      description: |-
                                        k8s deployment strategy.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    tolerations:
                                      description: |-
                                        k8s toleration
                                        [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumeMounts:
                                      description: |-
                                        k8s volumeMounts
                                        VolumeMounts defines the collection of VolumeMount to inject into containers.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumes:
                                      description: |-
                                        k8s volume
                                        [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                        Volumes defines the collection of Volume to inject into the pod.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                  type: object
                              type: object
                            cni:
                              properties:
                                enabled:
                                  description: Selects whether this component is installed.
                                  nullable: true
                                  type: boolean
                                hub:
                                  description: Hub for the component (overrides top level
                                    hub setting).
                                  type: string
                                k8s:
                                  description: Kubernetes resource spec.
                                  properties:
                                    affinity:
                                      description: |-
                                        k8s affinity.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    env:
                                      description: |-
                                        Deployment environment variables.
                                        [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    hpaSpec:
                                      description: |-
                                        k8s HorizontalPodAutoscaler settings.
                                        [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    imagePullPolicy:
                                      description: |-
                                        k8s imagePullPolicy.
                                        [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                      type: string
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s nodeSelector.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                      type: object
                                    overlays:
                                      description: Overlays for k8s resources in rendered
                                        manifests.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    podAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s pod annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    podDisruptionBudget:
                                      description: |-
                                        k8s PodDisruptionBudget settings.
                                        [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    priorityClassName:
                                      description: |-
                                        k8s priority_class_name. Default for all resources unless overridden.
                                        [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                      type: string
                                    readinessProbe:
                                      description: |-
                                        k8s readinessProbe settings.
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                        k8s.io.api.core.v1.Probe readiness_probe = 9;
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    replicaCount:
                                      description: |-
                                        k8s Deployment replicas setting.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    resources:
                                      description: |-
                                        k8s resources settings.
                                        [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    securityContext:
                                      description: |-
                                        k8s pod security context
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    service:
                                      description: |-
                                        k8s Service settings.
                                        [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    serviceAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s service annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    strategy:
                                      description: |-
                                        k8s deployment strategy.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    tolerations:
                                      description: |-
                                        k8s toleration
                                        [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumeMounts:
                                      description: |-
                                        k8s volumeMounts
                                        VolumeMounts defines the collection of VolumeMount to inject into containers.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumes:
                                      description: |-
                                        k8s volume
                                        [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                        Volumes defines the collection of Volume to inject into the pod.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                  type: object
                                namespace:
                                  description: Namespace for the component.
                                  type: string
                                spec:
                                  description: |-
                                    Arbitrary install time configuration for the component.
                                    For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                tag:
                                  description: Tag for the component (overrides top level
                                    tag setting).
                                  type: string
                              type: object
                            egressGateways:
                              items:
                                description: Configuration for gateways.
                                properties:
                                  enabled:
                                    description: Selects whether this gateway is installed.
                                    nullable: true
                                    type: boolean
                                  hub:
                                    description: Hub for the component (overrides top
                                      level hub setting).
                                    type: string
                                  k8s:
                                    description: Kubernetes resource spec.
                                    properties:
                                      affinity:
                                        description: |-
                                          k8s affinity.
                                          [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      env:
                                        description: |-
                                          Deployment environment variables.
                                          [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      hpaSpec:
                                        description: |-
                                          k8s HorizontalPodAutoscaler settings.
                                          [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      imagePullPolicy:
                                        description: |-
                                          k8s imagePullPolicy.
                                          [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                        type: string
                                      nodeSelector:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s nodeSelector.
                                          [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                        type: object
                                      overlays:
                                        description: Overlays for k8s resources in rendered
                                          manifests.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      podAnnotations:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s pod annotations.
                                          [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                        type: object
                                      podDisruptionBudget:
                                        description: |-
                                          k8s PodDisruptionBudget settings.
                                          [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      priorityClassName:
                                        description: |-
                                          k8s priority_class_name. Default for all resources unless overridden.
                                          [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                        type: string
                                      readinessProbe:
                                        description: |-
                                          k8s readinessProbe settings.
                                          [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                          k8s.io.api.core.v1.Probe readiness_probe = 9;
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      replicaCount:
                                        description: |-
                                          k8s Deployment replicas setting.
                                          [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                        maximum: 4294967295
                                        minimum: 0
                                        type: integer
                                      resources:
                                        description: |-
                                          k8s resources settings.
                                          [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      securityContext:
                                        description: |-
                                          k8s pod security context
                                          [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      service:
                                        description: |-
                                          k8s Service settings.
                                          [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      serviceAnnotations:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s service annotations.
                                          [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                        type: object
                                      strategy:
                                        description: |-
                                          k8s deployment strategy.
                                          [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      tolerations:
                                        description: |-
                                          k8s toleration
                                          [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      volumeMounts:
                                        description: |-
                                          k8s volumeMounts
                                          VolumeMounts defines the collection of VolumeMount to inject into containers.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      volumes:
                                        description: |-
                                          k8s volume
                                          [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                          Volumes defines the collection of Volume to inject into the pod.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                    type: object
                                  label:
                                    additionalProperties:
                                      type: string
                                    description: Labels for the gateway.
                                    type: object
                                  name:
                                    description: Name for the gateway.
                                    type: string
                                  namespace:
                                    description: Namespace for the gateway.
                                    type: string
                                  tag:
                                    description: Tag for the component (overrides top
                                      level tag setting).
                                    type: string
                                type: object
                              type: array
                            ingressGateways:
                              items:
                                description: Configuration for gateways.
                                properties:
                                  enabled:
                                    description: Selects whether this gateway is installed.
                                    nullable: true
                                    type: boolean
                                  hub:
                                    description: Hub for the component (overrides top
                                      level hub setting).
                                    type: string
                                  k8s:
                                    description: Kubernetes resource spec.
                                    properties:
                                      affinity:
                                        description: |-
                                          k8s affinity.
                                          [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      env:
                                        description: |-
                                          Deployment environment variables.
                                          [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      hpaSpec:
                                        description: |-
                                          k8s HorizontalPodAutoscaler settings.
                                          [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      imagePullPolicy:
                                        description: |-
                                          k8s imagePullPolicy.
                                          [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                        type: string
                                      nodeSelector:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s nodeSelector.
                                          [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                        type: object
                                      overlays:
                                        description: Overlays for k8s resources in rendered
                                          manifests.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      podAnnotations:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s pod annotations.
                                          [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                        type: object
                                      podDisruptionBudget:
                                        description: |-
                                          k8s PodDisruptionBudget settings.
                                          [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      priorityClassName:
                                        description: |-
                                          k8s priority_class_name. Default for all resources unless overridden.
                                          [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                        type: string
                                      readinessProbe:
                                        description: |-
                                          k8s readinessProbe settings.
                                          [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                          k8s.io.api.core.v1.Probe readiness_probe = 9;
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      replicaCount:
                                        description: |-
                                          k8s Deployment replicas setting.
                                          [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                        maximum: 4294967295
                                        minimum: 0
                                        type: integer
                                      resources:
                                        description: |-
                                          k8s resources settings.
                                          [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      securityContext:
                                        description: |-
                                          k8s pod security context
                                          [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      service:
                                        description: |-
                                          k8s Service settings.
                                          [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      serviceAnnotations:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s service annotations.
                                          [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                        type: object
                                      strategy:
                                        description: |-
                                          k8s deployment strategy.
                                          [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      tolerations:
                                        description: |-
                                          k8s toleration
                                          [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      volumeMounts:
                                        description: |-
                                          k8s volumeMounts
                                          VolumeMounts defines the collection of VolumeMount to inject into containers.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      volumes:
                                        description: |-
                                          k8s volume
                                          [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                          Volumes defines the collection of Volume to inject into the pod.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                    type: object
                                  label:
                                    additionalProperties:
                                      type: string
                                    description: Labels for the gateway.
                                    type: object
                                  name:
                                    description: Name for the gateway.
                                    type: string
                                  namespace:
                                    description: Namespace for the gateway.
                                    type: string
                                  tag:
                                    description: Tag for the component (overrides top
                                      level tag setting).
                                    type: string
                                type: object
                              type: array
                            istiodRemote:
                              description: Remote cluster using an external control plane.
                              properties:
                                enabled:
                                  description: Selects whether this component is installed.
                                  nullable: true
                                  type: boolean
                                hub:
                                  description: Hub for the component (overrides top level
                                    hub setting).
                                  type: string
                                k8s:
                                  description: Kubernetes resource spec.
                                  properties:
                                    affinity:
                                      description: |-
                                        k8s affinity.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    env:
                                      description: |-
                                        Deployment environment variables.
                                        [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    hpaSpec:
                                      description: |-
                                        k8s HorizontalPodAutoscaler settings.
                                        [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    imagePullPolicy:
                                      description: |-
                                        k8s imagePullPolicy.
                                        [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                      type: string
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s nodeSelector.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                      type: object
                                    overlays:
                                      description: Overlays for k8s resources in rendered
                                        manifests.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    podAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s pod annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    podDisruptionBudget:
                                      description: |-
                                        k8s PodDisruptionBudget settings.
                                        [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    priorityClassName:
                                      description: |-
                                        k8s priority_class_name. Default for all resources unless overridden.
                                        [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                      type: string
                                    readinessProbe:
                                      description: |-
                                        k8s readinessProbe settings.
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                        k8s.io.api.core.v1.Probe readiness_probe = 9;
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    replicaCount:
                                      description: |-
                                        k8s Deployment replicas setting.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    resources:
                                      description: |-
                                        k8s resources settings.
                                        [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    securityContext:
                                      description: |-
                                        k8s pod security context
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    service:
                                      description: |-
                                        k8s Service settings.
                                        [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    serviceAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s service annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    strategy:
                                      description: |-
                                        k8s deployment strategy.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    tolerations:
                                      description: |-
                                        k8s toleration
                                        [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumeMounts:
                                      description: |-
                                        k8s volumeMounts
                                        VolumeMounts defines the collection of VolumeMount to inject into containers.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumes:
                                      description: |-
                                        k8s volume
                                        [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                        Volumes defines the collection of Volume to inject into the pod.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                  type: object
                                namespace:
                                  description: Namespace for the component.
                                  type: string
                                spec:
                                  description: |-
                                    Arbitrary install time configuration for the component.
                                    For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                tag:
                                  description: Tag for the component (overrides top level
                                    tag setting).
                                  type: string
                              type: object
                            pilot:
                              properties:
                                enabled:
                                  description: Selects whether this component is installed.
                                  nullable: true
                                  type: boolean
                                hub:
                                  description: Hub for the component (overrides top level
                                    hub setting).
                                  type: string
                                k8s:
                                  description: Kubernetes resource spec.
                                  properties:
                                    affinity:
                                      description: |-
                                        k8s affinity.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    env:
                                      description: |-
                                        Deployment environment variables.
                                        [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    hpaSpec:
                                      description: |-
                                        k8s HorizontalPodAutoscaler settings.
                                        [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    imagePullPolicy:
                                      description: |-
                                        k8s imagePullPolicy.
                                        [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                      type: string
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s nodeSelector.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                      type: object
                                    overlays:
                                      description: Overlays for k8s resources in rendered
                                        manifests.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    podAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s pod annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    podDisruptionBudget:
                                      description: |-
                                        k8s PodDisruptionBudget settings.
                                        [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    priorityClassName:
                                      description: |-
                                        k8s priority_class_name. Default for all resources unless overridden.
                                        [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                      type: string
                                    readinessProbe:
                                      description: |-
                                        k8s readinessProbe settings.
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                        k8s.io.api.core.v1.Probe readiness_probe = 9;
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    replicaCount:
                                      description: |-
                                        k8s Deployment replicas setting.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    resources:
                                      description: |-
                                        k8s resources settings.
                                        [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    securityContext:
                                      description: |-
                                        k8s pod security context
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    service:
                                      description: |-
                                        k8s Service settings.
                                        [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    serviceAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s service annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    strategy:
                                      description: |-
                                        k8s deployment strategy.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    tolerations:
                                      description: |-
                                        k8s toleration
                                        [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumeMounts:
                                      description: |-
                                        k8s volumeMounts
                                        VolumeMounts defines the collection of VolumeMount to inject into containers.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumes:
                                      description: |-
                                        k8s volume
                                        [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                        Volumes defines the collection of Volume to inject into the pod.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                  type: object
                                namespace:
                                  description: Namespace for the component.
                                  type: string
                                spec:
                                  description: |-
                                    Arbitrary install time configuration for the component.
                                    For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                tag:
                                  description: Tag for the component (overrides top level
                                    tag setting).
                                  type: string
                              type: object
                            ztunnel:
                              properties:
                                enabled:
                                  description: Selects whether this component is installed.
                                  nullable: true
                                  type: boolean
                                hub:
                                  description: Hub for the component (overrides top level
                                    hub setting).
                                  type: string
                                k8s:
                                  description: Kubernetes resource spec.
                                  properties:
                                    affinity:
                                      description: |-
                                        k8s affinity.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    env:
                                      description: |-
                                        Deployment environment variables.
                                        [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    hpaSpec:
                                      description: |-
                                        k8s HorizontalPodAutoscaler settings.
                                        [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    imagePullPolicy:
                                      description: |-
                                        k8s imagePullPolicy.
                                        [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                      type: string
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s nodeSelector.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                      type: object
                                    overlays:
                                      description: Overlays for k8s resources in rendered
                                        manifests.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    podAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s pod annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    podDisruptionBudget:
                                      description: |-
                                        k8s PodDisruptionBudget settings.
                                        [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    priorityClassName:
                                      description: |-
                                        k8s priority_class_name. Default for all resources unless overridden.
                                        [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                      type: string
                                    readinessProbe:
                                      description: |-
                                        k8s readinessProbe settings.
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                        k8s.io.api.core.v1.Probe readiness_probe = 9;
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    replicaCount:
                                      description: |-
                                        k8s Deployment replicas setting.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    resources:
                                      description: |-
                                        k8s resources settings.
                                        [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    securityContext:
                                      description: |-
                                        k8s pod security context
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    service:
                                      description: |-
                                        k8s Service settings.
                                        [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    serviceAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s service annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    strategy:
                                      description: |-
                                        k8s deployment strategy.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    tolerations:
                                      description: |-
                                        k8s toleration
                                        [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumeMounts:
                                      description: |-
                                        k8s volumeMounts
                                        VolumeMounts defines the collection of VolumeMount to inject into containers.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumes:
                                      description: |-
                                        k8s volume
                                        [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                        Volumes defines the collection of Volume to inject into the pod.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                  type: object
                                namespace:
                                  description: Namespace for the component.
                                  type: string
                                spec:
                                  description: |-
                                    Arbitrary install time configuration for the component.
                                    For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                tag:
                                  description: Tag for the component (overrides top level
                                    tag setting).
                                  type: string
                              type: object
                          type: object
                        defaultRevision:
                          description: |-
                            Identify whether this revision is the default revision for the cluster
                            This option is currently experimental.
                          type: boolean
                        hub:
                          description: Root for docker image paths e.g. `docker.io/istio`
                          type: string
                        installPackagePath:
                          description: |-
                            Path for the install package. e.g.
    
                            * /tmp/istio-installer/nightly (local file path)
                          type: string
                        meshConfig:
                          description: |-
                            Config used by control plane components internally.
                            For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        namespace:
                          description: |-
                            Namespace to install control plane resources into. If unset, Istio will be installed into the same namespace
                            as the `IstioOperator` CR. You must also set `values.global.istioNamespace` if you wish to install Istio in
                            a custom namespace.
                            If you have enabled CNI, you must  exclude this namespace by adding it to the list `values.cni.excludeNamespaces`.
                          type: string
                        profile:
                          description: |-
                            Path or name for the profile e.g.
    
                            * minimal (looks in profiles dir for a file called minimal.yaml)
                            * /tmp/istio/install/values/custom/custom-install.yaml (local file path)
    
                            default profile is used if this field is unset.
                          type: string
                        resourceSuffix:
                          type: string
                        revision:
                          description: |-
                            Identify the revision this installation is associated with.
                            This option is currently experimental.
                          type: string
                        tag:
                          description: Version tag for docker images e.g. `1.7.2`
                          type: string
                        unvalidatedValues:
                          description: |-
                            Unvalidated overrides for default `values.yaml`. Used for custom templates where new parameters are added.
                            For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        values:
                          description: |-
                            Overrides for default `values.yaml`. This is a validated pass-through to Helm templates.
                            See the [Helm installation options](https://istio.io/v1.5/docs/reference/config/installation-options/) for schema details.
                            Anything that is available in `IstioOperatorSpec` should be set above rather than using the passthrough. This
                            includes Kubernetes resource settings for components in `KubernetesResourcesSpec`.
                            For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                    skipUpgradeValidation:
                      description: |-
                        When set to true, the lifecycle manager allows you to perform
                        in-place upgrades by skipping checks that are required for canary upgrades.
                        In production environments, canary upgrades are recommended for
                        updating the minor version. To update the patch version or make
                        configuration changes within the same version, you can use in-place upgrades.
                        Be sure to test in-place upgrades in development or staging environments first.
                      type: boolean
                  type: object
                type: array
            type: object
          status:
            description: The status of the `GatewayLifecycleManager` resource after you
              apply it to your Gloo environment.
            properties:
              clusters:
                additionalProperties:
                  properties:
                    installations:
                      additionalProperties:
                        properties:
                          message:
                            description: A human-readable message about the current state
                              of the installation.
                            type: string
                          observedOperator:
                            description: The IstioOperator spec that is currently deployed
                              for this revision.
                            properties:
                              addonComponents:
                                additionalProperties:
                                  properties:
                                    chartPath:
                                      description: Chart path for addon components.
                                      type: string
                                    enabled:
                                      description: Selects whether this component is installed.
                                      nullable: true
                                      type: boolean
                                    k8s:
                                      description: Kubernetes resource spec.
                                      properties:
                                        affinity:
                                          description: |-
                                            k8s affinity.
                                            [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        env:
                                          description: |-
                                            Deployment environment variables.
                                            [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                          items:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: array
                                        hpaSpec:
                                          description: |-
                                            k8s HorizontalPodAutoscaler settings.
                                            [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        imagePullPolicy:
                                          description: |-
                                            k8s imagePullPolicy.
                                            [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                          type: string
                                        nodeSelector:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            k8s nodeSelector.
                                            [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                          type: object
                                        overlays:
                                          description: Overlays for k8s resources in rendered
                                            manifests.
                                          items:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: array
                                        podAnnotations:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            k8s pod annotations.
                                            [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                          type: object
                                        podDisruptionBudget:
                                          description: |-
                                            k8s PodDisruptionBudget settings.
                                            [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        priorityClassName:
                                          description: |-
                                            k8s priority_class_name. Default for all resources unless overridden.
                                            [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                          type: string
                                        readinessProbe:
                                          description: |-
                                            k8s readinessProbe settings.
                                            [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                            k8s.io.api.core.v1.Probe readiness_probe = 9;
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        replicaCount:
                                          description: |-
                                            k8s Deployment replicas setting.
                                            [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                          maximum: 4294967295
                                          minimum: 0
                                          type: integer
                                        resources:
                                          description: |-
                                            k8s resources settings.
                                            [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        securityContext:
                                          description: |-
                                            k8s pod security context
                                            [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        service:
                                          description: |-
                                            k8s Service settings.
                                            [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        serviceAnnotations:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            k8s service annotations.
                                            [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                          type: object
                                        strategy:
                                          description: |-
                                            k8s deployment strategy.
                                            [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        tolerations:
                                          description: |-
                                            k8s toleration
                                            [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                          items:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: array
                                        volumeMounts:
                                          description: |-
                                            k8s volumeMounts
                                            VolumeMounts defines the collection of VolumeMount to inject into containers.
                                          items:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: array
                                        volumes:
                                          description: |-
                                            k8s volume
                                            [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                            Volumes defines the collection of Volume to inject into the pod.
                                          items:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: array
                                      type: object
                                    namespace:
                                      description: Namespace for the component.
                                      type: string
                                    schema:
                                      description: |-
                                        Optional schema to validate spec against.
                                        For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#any).
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    spec:
                                      description: |-
                                        Arbitrary install time configuration for the component.
                                        For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                description: |-
                                  Deprecated.
                                  Users should manage the installation of addon components on their own.
                                  Refer to samples/addons for demo installation of addon components.
                                type: object
                              components:
                                description: |-
                                  Kubernetes resource settings, enablement and component-specific settings that are not internal to the
                                  component.
                                properties:
                                  base:
                                    properties:
                                      enabled:
                                        description: Selects whether this component is
                                          installed.
                                        nullable: true
                                        type: boolean
                                      k8s:
                                        description: Kubernetes resource spec.
                                        properties:
                                          affinity:
                                            description: |-
                                              k8s affinity.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          env:
                                            description: |-
                                              Deployment environment variables.
                                              [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          hpaSpec:
                                            description: |-
                                              k8s HorizontalPodAutoscaler settings.
                                              [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          imagePullPolicy:
                                            description: |-
                                              k8s imagePullPolicy.
                                              [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                            type: string
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s nodeSelector.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                            type: object
                                          overlays:
                                            description: Overlays for k8s resources in
                                              rendered manifests.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          podAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s pod annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          podDisruptionBudget:
                                            description: |-
                                              k8s PodDisruptionBudget settings.
                                              [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          priorityClassName:
                                            description: |-
                                              k8s priority_class_name. Default for all resources unless overridden.
                                              [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                            type: string
                                          readinessProbe:
                                            description: |-
                                              k8s readinessProbe settings.
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                              k8s.io.api.core.v1.Probe readiness_probe = 9;
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          replicaCount:
                                            description: |-
                                              k8s Deployment replicas setting.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          resources:
                                            description: |-
                                              k8s resources settings.
                                              [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          securityContext:
                                            description: |-
                                              k8s pod security context
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          service:
                                            description: |-
                                              k8s Service settings.
                                              [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          serviceAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s service annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          strategy:
                                            description: |-
                                              k8s deployment strategy.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          tolerations:
                                            description: |-
                                              k8s toleration
                                              [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumeMounts:
                                            description: |-
                                              k8s volumeMounts
                                              VolumeMounts defines the collection of VolumeMount to inject into containers.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumes:
                                            description: |-
                                              k8s volume
                                              [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                              Volumes defines the collection of Volume to inject into the pod.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                        type: object
                                    type: object
                                  cni:
                                    properties:
                                      enabled:
                                        description: Selects whether this component is
                                          installed.
                                        nullable: true
                                        type: boolean
                                      hub:
                                        description: Hub for the component (overrides
                                          top level hub setting).
                                        type: string
                                      k8s:
                                        description: Kubernetes resource spec.
                                        properties:
                                          affinity:
                                            description: |-
                                              k8s affinity.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          env:
                                            description: |-
                                              Deployment environment variables.
                                              [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          hpaSpec:
                                            description: |-
                                              k8s HorizontalPodAutoscaler settings.
                                              [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          imagePullPolicy:
                                            description: |-
                                              k8s imagePullPolicy.
                                              [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                            type: string
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s nodeSelector.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                            type: object
                                          overlays:
                                            description: Overlays for k8s resources in
                                              rendered manifests.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          podAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s pod annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          podDisruptionBudget:
                                            description: |-
                                              k8s PodDisruptionBudget settings.
                                              [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          priorityClassName:
                                            description: |-
                                              k8s priority_class_name. Default for all resources unless overridden.
                                              [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                            type: string
                                          readinessProbe:
                                            description: |-
                                              k8s readinessProbe settings.
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                              k8s.io.api.core.v1.Probe readiness_probe = 9;
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          replicaCount:
                                            description: |-
                                              k8s Deployment replicas setting.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          resources:
                                            description: |-
                                              k8s resources settings.
                                              [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          securityContext:
                                            description: |-
                                              k8s pod security context
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          service:
                                            description: |-
                                              k8s Service settings.
                                              [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          serviceAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s service annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          strategy:
                                            description: |-
                                              k8s deployment strategy.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          tolerations:
                                            description: |-
                                              k8s toleration
                                              [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumeMounts:
                                            description: |-
                                              k8s volumeMounts
                                              VolumeMounts defines the collection of VolumeMount to inject into containers.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumes:
                                            description: |-
                                              k8s volume
                                              [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                              Volumes defines the collection of Volume to inject into the pod.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                        type: object
                                      namespace:
                                        description: Namespace for the component.
                                        type: string
                                      spec:
                                        description: |-
                                          Arbitrary install time configuration for the component.
                                          For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      tag:
                                        description: Tag for the component (overrides
                                          top level tag setting).
                                        type: string
                                    type: object
                                  egressGateways:
                                    items:
                                      description: Configuration for gateways.
                                      properties:
                                        enabled:
                                          description: Selects whether this gateway is
                                            installed.
                                          nullable: true
                                          type: boolean
                                        hub:
                                          description: Hub for the component (overrides
                                            top level hub setting).
                                          type: string
                                        k8s:
                                          description: Kubernetes resource spec.
                                          properties:
                                            affinity:
                                              description: |-
                                                k8s affinity.
                                                [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            env:
                                              description: |-
                                                Deployment environment variables.
                                                [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            hpaSpec:
                                              description: |-
                                                k8s HorizontalPodAutoscaler settings.
                                                [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            imagePullPolicy:
                                              description: |-
                                                k8s imagePullPolicy.
                                                [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                              type: string
                                            nodeSelector:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s nodeSelector.
                                                [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                              type: object
                                            overlays:
                                              description: Overlays for k8s resources
                                                in rendered manifests.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            podAnnotations:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s pod annotations.
                                                [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                              type: object
                                            podDisruptionBudget:
                                              description: |-
                                                k8s PodDisruptionBudget settings.
                                                [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            priorityClassName:
                                              description: |-
                                                k8s priority_class_name. Default for all resources unless overridden.
                                                [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                              type: string
                                            readinessProbe:
                                              description: |-
                                                k8s readinessProbe settings.
                                                [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                                k8s.io.api.core.v1.Probe readiness_probe = 9;
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            replicaCount:
                                              description: |-
                                                k8s Deployment replicas setting.
                                                [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                              maximum: 4294967295
                                              minimum: 0
                                              type: integer
                                            resources:
                                              description: |-
                                                k8s resources settings.
                                                [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            securityContext:
                                              description: |-
                                                k8s pod security context
                                                [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            service:
                                              description: |-
                                                k8s Service settings.
                                                [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            serviceAnnotations:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s service annotations.
                                                [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                              type: object
                                            strategy:
                                              description: |-
                                                k8s deployment strategy.
                                                [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            tolerations:
                                              description: |-
                                                k8s toleration
                                                [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            volumeMounts:
                                              description: |-
                                                k8s volumeMounts
                                                VolumeMounts defines the collection of VolumeMount to inject into containers.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            volumes:
                                              description: |-
                                                k8s volume
                                                [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                                Volumes defines the collection of Volume to inject into the pod.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                          type: object
                                        label:
                                          additionalProperties:
                                            type: string
                                          description: Labels for the gateway.
                                          type: object
                                        name:
                                          description: Name for the gateway.
                                          type: string
                                        namespace:
                                          description: Namespace for the gateway.
                                          type: string
                                        tag:
                                          description: Tag for the component (overrides
                                            top level tag setting).
                                          type: string
                                      type: object
                                    type: array
                                  ingressGateways:
                                    items:
                                      description: Configuration for gateways.
                                      properties:
                                        enabled:
                                          description: Selects whether this gateway is
                                            installed.
                                          nullable: true
                                          type: boolean
                                        hub:
                                          description: Hub for the component (overrides
                                            top level hub setting).
                                          type: string
                                        k8s:
                                          description: Kubernetes resource spec.
                                          properties:
                                            affinity:
                                              description: |-
                                                k8s affinity.
                                                [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            env:
                                              description: |-
                                                Deployment environment variables.
                                                [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            hpaSpec:
                                              description: |-
                                                k8s HorizontalPodAutoscaler settings.
                                                [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            imagePullPolicy:
                                              description: |-
                                                k8s imagePullPolicy.
                                                [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                              type: string
                                            nodeSelector:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s nodeSelector.
                                                [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                              type: object
                                            overlays:
                                              description: Overlays for k8s resources
                                                in rendered manifests.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            podAnnotations:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s pod annotations.
                                                [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                              type: object
                                            podDisruptionBudget:
                                              description: |-
                                                k8s PodDisruptionBudget settings.
                                                [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            priorityClassName:
                                              description: |-
                                                k8s priority_class_name. Default for all resources unless overridden.
                                                [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                              type: string
                                            readinessProbe:
                                              description: |-
                                                k8s readinessProbe settings.
                                                [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                                k8s.io.api.core.v1.Probe readiness_probe = 9;
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            replicaCount:
                                              description: |-
                                                k8s Deployment replicas setting.
                                                [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                              maximum: 4294967295
                                              minimum: 0
                                              type: integer
                                            resources:
                                              description: |-
                                                k8s resources settings.
                                                [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            securityContext:
                                              description: |-
                                                k8s pod security context
                                                [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            service:
                                              description: |-
                                                k8s Service settings.
                                                [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            serviceAnnotations:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s service annotations.
                                                [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                              type: object
                                            strategy:
                                              description: |-
                                                k8s deployment strategy.
                                                [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            tolerations:
                                              description: |-
                                                k8s toleration
                                                [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            volumeMounts:
                                              description: |-
                                                k8s volumeMounts
                                                VolumeMounts defines the collection of VolumeMount to inject into containers.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            volumes:
                                              description: |-
                                                k8s volume
                                                [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                                Volumes defines the collection of Volume to inject into the pod.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                          type: object
                                        label:
                                          additionalProperties:
                                            type: string
                                          description: Labels for the gateway.
                                          type: object
                                        name:
                                          description: Name for the gateway.
                                          type: string
                                        namespace:
                                          description: Namespace for the gateway.
                                          type: string
                                        tag:
                                          description: Tag for the component (overrides
                                            top level tag setting).
                                          type: string
                                      type: object
                                    type: array
                                  istiodRemote:
                                    description: Remote cluster using an external control
                                      plane.
                                    properties:
                                      enabled:
                                        description: Selects whether this component is
                                          installed.
                                        nullable: true
                                        type: boolean
                                      hub:
                                        description: Hub for the component (overrides
                                          top level hub setting).
                                        type: string
                                      k8s:
                                        description: Kubernetes resource spec.
                                        properties:
                                          affinity:
                                            description: |-
                                              k8s affinity.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          env:
                                            description: |-
                                              Deployment environment variables.
                                              [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          hpaSpec:
                                            description: |-
                                              k8s HorizontalPodAutoscaler settings.
                                              [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          imagePullPolicy:
                                            description: |-
                                              k8s imagePullPolicy.
                                              [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                            type: string
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s nodeSelector.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                            type: object
                                          overlays:
                                            description: Overlays for k8s resources in
                                              rendered manifests.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          podAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s pod annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          podDisruptionBudget:
                                            description: |-
                                              k8s PodDisruptionBudget settings.
                                              [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          priorityClassName:
                                            description: |-
                                              k8s priority_class_name. Default for all resources unless overridden.
                                              [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                            type: string
                                          readinessProbe:
                                            description: |-
                                              k8s readinessProbe settings.
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                              k8s.io.api.core.v1.Probe readiness_probe = 9;
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          replicaCount:
                                            description: |-
                                              k8s Deployment replicas setting.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          resources:
                                            description: |-
                                              k8s resources settings.
                                              [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          securityContext:
                                            description: |-
                                              k8s pod security context
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          service:
                                            description: |-
                                              k8s Service settings.
                                              [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          serviceAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s service annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          strategy:
                                            description: |-
                                              k8s deployment strategy.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          tolerations:
                                            description: |-
                                              k8s toleration
                                              [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumeMounts:
                                            description: |-
                                              k8s volumeMounts
                                              VolumeMounts defines the collection of VolumeMount to inject into containers.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumes:
                                            description: |-
                                              k8s volume
                                              [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                              Volumes defines the collection of Volume to inject into the pod.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                        type: object
                                      namespace:
                                        description: Namespace for the component.
                                        type: string
                                      spec:
                                        description: |-
                                          Arbitrary install time configuration for the component.
                                          For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      tag:
                                        description: Tag for the component (overrides
                                          top level tag setting).
                                        type: string
                                    type: object
                                  pilot:
                                    properties:
                                      enabled:
                                        description: Selects whether this component is
                                          installed.
                                        nullable: true
                                        type: boolean
                                      hub:
                                        description: Hub for the component (overrides
                                          top level hub setting).
                                        type: string
                                      k8s:
                                        description: Kubernetes resource spec.
                                        properties:
                                          affinity:
                                            description: |-
                                              k8s affinity.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          env:
                                            description: |-
                                              Deployment environment variables.
                                              [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          hpaSpec:
                                            description: |-
                                              k8s HorizontalPodAutoscaler settings.
                                              [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          imagePullPolicy:
                                            description: |-
                                              k8s imagePullPolicy.
                                              [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                            type: string
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s nodeSelector.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                            type: object
                                          overlays:
                                            description: Overlays for k8s resources in
                                              rendered manifests.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          podAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s pod annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          podDisruptionBudget:
                                            description: |-
                                              k8s PodDisruptionBudget settings.
                                              [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          priorityClassName:
                                            description: |-
                                              k8s priority_class_name. Default for all resources unless overridden.
                                              [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                            type: string
                                          readinessProbe:
                                            description: |-
                                              k8s readinessProbe settings.
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                              k8s.io.api.core.v1.Probe readiness_probe = 9;
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          replicaCount:
                                            description: |-
                                              k8s Deployment replicas setting.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          resources:
                                            description: |-
                                              k8s resources settings.
                                              [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          securityContext:
                                            description: |-
                                              k8s pod security context
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          service:
                                            description: |-
                                              k8s Service settings.
                                              [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          serviceAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s service annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          strategy:
                                            description: |-
                                              k8s deployment strategy.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          tolerations:
                                            description: |-
                                              k8s toleration
                                              [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumeMounts:
                                            description: |-
                                              k8s volumeMounts
                                              VolumeMounts defines the collection of VolumeMount to inject into containers.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumes:
                                            description: |-
                                              k8s volume
                                              [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                              Volumes defines the collection of Volume to inject into the pod.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                        type: object
                                      namespace:
                                        description: Namespace for the component.
                                        type: string
                                      spec:
                                        description: |-
                                          Arbitrary install time configuration for the component.
                                          For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      tag:
                                        description: Tag for the component (overrides
                                          top level tag setting).
                                        type: string
                                    type: object
                                  ztunnel:
                                    properties:
                                      enabled:
                                        description: Selects whether this component is
                                          installed.
                                        nullable: true
                                        type: boolean
                                      hub:
                                        description: Hub for the component (overrides
                                          top level hub setting).
                                        type: string
                                      k8s:
                                        description: Kubernetes resource spec.
                                        properties:
                                          affinity:
                                            description: |-
                                              k8s affinity.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          env:
                                            description: |-
                                              Deployment environment variables.
                                              [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          hpaSpec:
                                            description: |-
                                              k8s HorizontalPodAutoscaler settings.
                                              [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          imagePullPolicy:
                                            description: |-
                                              k8s imagePullPolicy.
                                              [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                            type: string
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s nodeSelector.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                            type: object
                                          overlays:
                                            description: Overlays for k8s resources in
                                              rendered manifests.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          podAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s pod annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          podDisruptionBudget:
                                            description: |-
                                              k8s PodDisruptionBudget settings.
                                              [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          priorityClassName:
                                            description: |-
                                              k8s priority_class_name. Default for all resources unless overridden.
                                              [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                            type: string
                                          readinessProbe:
                                            description: |-
                                              k8s readinessProbe settings.
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                              k8s.io.api.core.v1.Probe readiness_probe = 9;
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          replicaCount:
                                            description: |-
                                              k8s Deployment replicas setting.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          resources:
                                            description: |-
                                              k8s resources settings.
                                              [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          securityContext:
                                            description: |-
                                              k8s pod security context
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          service:
                                            description: |-
                                              k8s Service settings.
                                              [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          serviceAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s service annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          strategy:
                                            description: |-
                                              k8s deployment strategy.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          tolerations:
                                            description: |-
                                              k8s toleration
                                              [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumeMounts:
                                            description: |-
                                              k8s volumeMounts
                                              VolumeMounts defines the collection of VolumeMount to inject into containers.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumes:
                                            description: |-
                                              k8s volume
                                              [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                              Volumes defines the collection of Volume to inject into the pod.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                        type: object
                                      namespace:
                                        description: Namespace for the component.
                                        type: string
                                      spec:
                                        description: |-
                                          Arbitrary install time configuration for the component.
                                          For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      tag:
                                        description: Tag for the component (overrides
                                          top level tag setting).
                                        type: string
                                    type: object
                                type: object
                              defaultRevision:
                                description: |-
                                  Identify whether this revision is the default revision for the cluster
                                  This option is currently experimental.
                                type: boolean
                              hub:
                                description: Root for docker image paths e.g. `docker.io/istio`
                                type: string
                              installPackagePath:
                                description: |-
                                  Path for the install package. e.g.
    
                                  * /tmp/istio-installer/nightly (local file path)
                                type: string
                              meshConfig:
                                description: |-
                                  Config used by control plane components internally.
                                  For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              namespace:
                                description: |-
                                  Namespace to install control plane resources into. If unset, Istio will be installed into the same namespace
                                  as the `IstioOperator` CR. You must also set `values.global.istioNamespace` if you wish to install Istio in
                                  a custom namespace.
                                  If you have enabled CNI, you must  exclude this namespace by adding it to the list `values.cni.excludeNamespaces`.
                                type: string
                              profile:
                                description: |-
                                  Path or name for the profile e.g.
    
                                  * minimal (looks in profiles dir for a file called minimal.yaml)
                                  * /tmp/istio/install/values/custom/custom-install.yaml (local file path)
    
                                  default profile is used if this field is unset.
                                type: string
                              resourceSuffix:
                                type: string
                              revision:
                                description: |-
                                  Identify the revision this installation is associated with.
                                  This option is currently experimental.
                                type: string
                              tag:
                                description: Version tag for docker images e.g. `1.7.2`
                                type: string
                              unvalidatedValues:
                                description: |-
                                  Unvalidated overrides for default `values.yaml`. Used for custom templates where new parameters are added.
                                  For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              values:
                                description: |-
                                  Overrides for default `values.yaml`. This is a validated pass-through to Helm templates.
                                  See the [Helm installation options](https://istio.io/v1.5/docs/reference/config/installation-options/) for schema details.
                                  Anything that is available in `IstioOperatorSpec` should be set above rather than using the passthrough. This
                                  includes Kubernetes resource settings for components in `KubernetesResourcesSpec`.
                                  For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          observedRevision:
                            description: The observed revision of the gateway installation.
                            type: string
                          state:
                            description: The current state of the gateway installation.
                            enum:
                            - PENDING
                            - FAILED
                            - NO_CONTROL_PLANE_AVAILABLE
                            - INSTALLING_GATEWAY
                            - HEALTHY
                            - UNHEALTHY
                            - ACTION_REQUIRED
                            - UPDATING_GATEWAY
                            - RECONCILING_GATEWAY
                            - UNKNOWN
                            - UNINSTALLING_GATEWAY
                            - UNINSTALLED_GATEWAY
                            - INSTALL_PENDING
                            type: string
                        type: object
                      description: The Istio gateway installations in the cluster, listed
                        by revision.
                      type: object
                  type: object
                description: The list of clusters where Gloo manages Istio gateway installations.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/admin.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 22831982e2982b68
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: istiolifecyclemanagers.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: IstioLifecycleManager
    listKind: IstioLifecycleManagerList
    plural: istiolifecyclemanagers
    shortNames:
    - ilm
    singular: istiolifecyclemanager
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: Specifications for the `IstioLifecycleManager` resource.
            properties:
              helmGlobal:
                description: Optional helm configuration applicable to all installations
                properties:
                  repo:
                    description: |-
                      The base URL to the Helm repository that stores the Istio charts.
                      Currently, only OCI registries are supported. Because of that, the base URL must begin with `oci://`.
                      This base URL is used to construct the URLs for specific charts. For example, if you specify `oci://gcr.io/istio/charts` as the base URL, it is used to construct the URL to a specific chart, such as `oci://gcr.io/istio/charts/istiod`.
    
                      If no base URL is specified, the IstioLifecycleManager attempts to pull the Istio charts from a set of known repositories,
                      including the official Istio upstream repository (`oci://gcr.io/istio-release/charts`).
                    type: string
                  repoSecrets:
                    description: |-
                      Optional. If present, the Gloo agent uses the credentials in the given secrets to log in to the OCI
                      registry to access Istio charts.
                      Similar to ImagePullSecrets, the secrets that you specify in this section must be of type `kubernetes.io/dockerconfigjson` and
                      must exist on all the clusters where you want the Gloo agent to install Istio.
                    items:
                      description: |-
                        ObjectReference contains enough information to let you inspect or modify the referred object.
                        ---
                        New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                         1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                         2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                            restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                            Those cannot be well described when embedded.
                         3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                         4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                            during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                            and the version of the actual struct is irrelevant.
                         5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                            will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.
                        Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                        For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                        +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
                        +structType=atomic
                      properties:
                        apiVersion:
                          description: |-
                            API version of the referent.
                            +optional
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                            TODO: this design is not final and this field is subject to change in the future.
                            +optional
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                            +optional
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            +optional
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            +optional
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                            +optional
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                            +optional
                          type: string
                      type: object
                    type: array
                  repoSkipTlsVerify:
                    description: |-
                      Optional. If true, skip TLS verification when pulling Helm charts from a given OCI repository.
                      Use this setting for testing, quick demos, and exploration purposes only. In production setup, make sure that each
                      node is configured to trust the certificate that is presented by the chart OCI registry.
                    type: boolean
                type: object
              installations:
                description: List of Istio control plane installations.
                items:
                  description: |-
                    List of Istio control plane installations.
                    Any components that are NOT related to the control plane are ignored.
                  properties:
                    clusters:
                      description: Clusters to install the Istio control planes in.
                      items:
                        description: Clusters to install the Istio control planes in.
                        properties:
                          defaultRevision:
                            description: |-
                              Optional: Defaults to false.
                              When set to true, the installation for this revision is applied as the active Istio installation in the cluster.
                              Resources with the `istio-injection=true` label entry use this revision. You might change this setting for Istio installations
                              during a canary upgrade. For more info, see the [upgrade docs](https://docs.solo.io/gloo-mesh-enterprise/latest/istio/ilm-upgrade/).
                            type: boolean
                          name:
                            description: |-
                              Name of the cluster to install Istio into.
                              Must match the name of the cluster that you used when you registered the cluster with Gloo.
                            type: string
                          trustDomain:
                            description: |-
                              Optional: By default, the `trustDomain` value in the `meshConfig` section of the operator spec is automatically set by the Gloo to the name of each workload cluster.
                              To override the `trustDomain` for each cluster, you can instead specify the override value by using this `trustDomain` field,
                              and include the value in the list of cluster names. For example, if you specify `meshConfig.trustDomain: cluster1-trust-override` in your operator spec,
                              you then specify both the cluster name (`name: cluster1`) and the trust domain (`trustDomain: cluster1-trust-override`) in this `installations.clusters` section.
                              Additionally, because Gloo requires multiple trust domains for east-west routing, the `PILOT_SKIP_VALIDATE_TRUST_DOMAIN` field is set to `"true"` by default.
                              For more info, see the [Istio documentation](https://istio.io/latest/docs/reference/config/istio.mesh.v1alpha1).
                            type: string
                        type: object
                      type: array
                    istioController:
                      description: Optional configuration to tune the deployment of the
                        IstioOperator controller deployed to each workload cluster.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Kubernetes pod/deployment/service annotations.
                          type: object
                        envVars:
                          description: |-
                            Deployment environment variables. For more info, see the
                            [Kubernetes docs](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/).
                          items:
                            description: EnvVar represents an environment variable present
                              in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must be
                                  a C_IDENTIFIER.
                                type: string
                              value:
                                description: |-
                                  Variable references $(VAR_NAME) are expanded
                                  using the previously defined environment variables in the container and
                                  any service environment variables. If a variable cannot be resolved,
                                  the reference in the input string will be unchanged. Double $$ are reduced
                                  to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                  "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                  Escaped references will never be expanded, regardless of whether the variable
                                  exists or not.
                                  Defaults to "".
                                  +optional
                                type: string
                              valueFrom:
                                description: |-
                                  Source for the environment variable's value. Cannot be used if value is not empty.
                                  +optional
                                properties:
                                  configMapKeyRef:
                                    description: |-
                                      Selects a key of a ConfigMap.
                                      +optional
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      localObjectReference:
                                        description: The ConfigMap to select from.
                                        properties:
                                          name:
                                            description: |-
                                              Name of the referent.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion, kind, uid?
                                              +optional
                                            type: string
                                        type: object
                                      optional:
                                        description: |-
                                          Specify whether the ConfigMap or its key must be defined
                                          +optional
                                        type: boolean
                                    type: object
                                  fieldRef:
                                    description: |-
                                      Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                      spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                      +optional
                                    properties:
                                      apiVersion:
                                        description: |-
                                          Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                          +optional
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in the
                                          specified API version.
                                        type: string
                                    type: object
                                  resourceFieldRef:
                                    description: |-
                                      Selects a resource of the container: only resources limits and requests
                                      (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                      +optional
                                    properties:
                                      containerName:
                                        description: |-
                                          Container name: required for volumes, optional for env vars
                                          +optional
                                        type: string
                                      divisor:
                                        description: |-
                                          Specifies the output format of the exposed resources, defaults to "1"
                                          +optional
                                        properties:
                                          string:
                                            type: string
                                        type: object
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    type: object
                                  secretKeyRef:
                                    description: |-
                                      Selects a key of a secret in the pod's namespace
                                      +optional
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must
                                          be a valid secret key.
                                        type: string
                                      localObjectReference:
                                        description: The name of the secret in the pod's
                                          namespace to select from.
                                        properties:
                                          name:
                                            description: |-
                                              Name of the referent.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion, kind, uid?
                                              +optional
                                            type: string
                                        type: object
                                      optional:
                                        description: |-
                                          Specify whether the Secret or its key must be defined
                                          +optional
                                        type: boolean
                                    type: object
                                type: object
                            type: object
                          type: array
                        imagePullSecrets:
                          description: |-
                            Names of image pull secrets to use to deploy the Istio controller.
                            For more info, see the [Kubernetes docs](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/#create-a-pod-that-uses-your-secret).
                          items:
                            description: |-
                              LocalObjectReference contains enough information to let you locate the
                              referenced object inside the same namespace.
                              +structType=atomic
                            properties:
                              name:
                                description: |-
                                  Name of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                  +optional
                                type: string
                            type: object
                          type: array
                        labels:
                          additionalProperties:
                            type: string
                          description: Kubernetes pod/deployment/service labels.
                          type: object
                        resources:
                          description: |-
                            Override for resources allocated to the Istio controller deployment.
                            For more info, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#example-1).
                          properties:
                            limits:
                              additionalProperties:
                                type: string
                              type: object
                            requests:
                              additionalProperties:
                                type: string
                              type: object
                          type: object
                        securityContext:
                          description: |-
                            Override for the pod's security context. For more info, see the
                            [Kubernetes documentation](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#securitycontext-v1-core).
                          properties:
                            allowPrivilegeEscalation:
                              description: |-
                                AllowPrivilegeEscalation controls whether a process can gain more
                                privileges than its parent process. This bool directly controls if
                                the no_new_privs flag will be set on the container process.
                                AllowPrivilegeEscalation is true always when the container is:
                                1) run as Privileged
                                2) has CAP_SYS_ADMIN
                                Note that this field cannot be set when spec.os.name is windows.
                                +optional
                              type: boolean
                            capabilities:
                              description: |-
                                The capabilities to add/drop when running containers.
                                Defaults to the default set of capabilities granted by the container runtime.
                                Note that this field cannot be set when spec.os.name is windows.
                                +optional
                              properties:
                                add:
                                  description: |-
                                    Added capabilities
                                    +optional
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  description: |-
                                    Removed capabilities
                                    +optional
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: |-
                                Run container in privileged mode.
                                Processes in privileged containers are essentially equivalent to root on the host.
                                Defaults to false.
                                Note that this field cannot be set when spec.os.name is windows.
                                +optional
                              type: boolean
                            procMount:
                              description: |-
                                procMount denotes the type of proc mount to use for the containers.
                                The default is DefaultProcMount which uses the container runtime defaults for
                                readonly paths and masked paths.
                                This requires the ProcMountType feature flag to be enabled.
                                Note that this field cannot be set when spec.os.name is windows.
                                +optional
                              type: string
                            readOnlyRootFilesystem:
                              description: |-
                                Whether this container has a read-only root filesystem.
                                Default is false.
                                Note that this field cannot be set when spec.os.name is windows.
                                +optional
                              type: boolean
                            runAsGroup:
                              description: |-
                                The GID to run the entrypoint of the container process.
                                Uses runtime default if unset.
                                May also be set in PodSecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name is windows.
                                +optional
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: |-
                                Indicates that the container must run as a non-root user.
                                If true, the Kubelet will validate the image at runtime to ensure that it
                                does not run as UID 0 (root) and fail to start the container if it does.
                                If unset or false, no such validation will be performed.
                                May also be set in PodSecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                +optional
                              type: boolean
                            runAsUser:
                              description: |-
                                The UID to run the entrypoint of the container process.
                                Defaults to user specified in image metadata if unspecified.
                                May also be set in PodSecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name is windows.
                                +optional
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: |-
                                The SELinux context to be applied to the container.
                                If unspecified, the container runtime will allocate a random SELinux context for each
                                container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name is windows.
                                +optional
                              properties:
                                level:
                                  description: |-
                                    Level is SELinux level label that applies to the container.
                                    +optional
                                  type: string
                                role:
                                  description: |-
                                    Role is a SELinux role label that applies to the container.
                                    +optional
                                  type: string
                                type:
                                  description: |-
                                    Type is a SELinux type label that applies to the container.
                                    +optional
                                  type: string
                                user:
                                  description: |-
                                    User is a SELinux user label that applies to the container.
                                    +optional
                                  type: string
                              type: object
                            seccompProfile:
                              description: |-
                                The seccomp options to use by this container. If seccomp options are
                                provided at both the pod & container level, the container options
                                override the pod options.
                                Note that this field cannot be set when spec.os.name is windows.
                                +optional
                              properties:
                                localhostProfile:
                                  description: |-
                                    localhostProfile indicates a profile defined in a file on the node should be used.
                                    The profile must be preconfigured on the node to work.
                                    Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                    Must only be set if type is "Localhost".
                                    +optional
                                  type: string
                                type:
                                  description: |-
                                    type indicates which kind of seccomp profile will be applied.
                                    Valid options are:
    
                                    Localhost - a profile defined in a file on the node should be used.
                                    RuntimeDefault - the container runtime default profile should be used.
                                    Unconfined - no profile should be applied.
                                    +unionDiscriminator
                                  type: string
                              type: object
                            windowsOptions:
                              description: |-
                                The Windows specific settings applied to all containers.
                                If unspecified, the options from the PodSecurityContext will be used.
                                If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name is linux.
                                +optional
                              properties:
                                gmsaCredentialSpec:
                                  description: |-
                                    GMSACredentialSpec is where the GMSA admission webhook
                                    (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                    GMSA credential spec named by the GMSACredentialSpecName field.
                                    +optional
                                  type: string
                                gmsaCredentialSpecName:
                                  description: |-
                                    GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                    +optional
                                  type: string
                                hostProcess:
                                  description: |-
                                    HostProcess determines if a container should be run as a 'Host Process' container.
                                    This field is alpha-level and will only be honored by components that enable the
                                    WindowsHostProcessContainers feature flag. Setting this field without the feature
                                    flag will result in errors when validating the Pod. All of a Pod's containers must
                                    have the same effective HostProcess value (it is not allowed to have a mix of HostProcess
                                    containers and non-HostProcess containers).  In addition, if HostProcess is true
                                    then HostNetwork must also be set to true.
                                    +optional
                                  type: boolean
                                runAsUserName:
                                  description: |-
                                    The UserName in Windows to run the entrypoint of the container process.
                                    Defaults to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    +optional
                                  type: string
                              type: object
                          type: object
                        waitForResourcesTimeout:
                          description: |-
                            The amount of time to wait for resources in a component to become ready before giving up. Configured using a duration string.
                            A duration string is a possibly signed sequence of decimal numbers, each with optional fraction and a unit suffix,
                            such as "300ms" or "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
                          type: string
                      type: object
                    istioOperatorSpec:
                      description: |-
                        IstioOperator specification for the control plane.
                        For more info, see the [Istio documentation](https://istio.io/latest/docs/reference/config/istio.operator.v1alpha1/).
                      properties:
                        addonComponents:
                          additionalProperties:
                            properties:
                              chartPath:
                                description: Chart path for addon components.
                                type: string
                              enabled:
                                description: Selects whether this component is installed.
                                nullable: true
                                type: boolean
                              k8s:
                                description: Kubernetes resource spec.
                                properties:
                                  affinity:
                                    description: |-
                                      k8s affinity.
                                      [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  env:
                                    description: |-
                                      Deployment environment variables.
                                      [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                    items:
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                  hpaSpec:
                                    description: |-
                                      k8s HorizontalPodAutoscaler settings.
                                      [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  imagePullPolicy:
                                    description: |-
                                      k8s imagePullPolicy.
                                      [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                    type: string
                                  nodeSelector:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      k8s nodeSelector.
                                      [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                    type: object
                                  overlays:
                                    description: Overlays for k8s resources in rendered
                                      manifests.
                                    items:
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                  podAnnotations:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      k8s pod annotations.
                                      [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                    type: object
                                  podDisruptionBudget:
                                    description: |-
                                      k8s PodDisruptionBudget settings.
                                      [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  priorityClassName:
                                    description: |-
                                      k8s priority_class_name. Default for all resources unless overridden.
                                      [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                    type: string
                                  readinessProbe:
                                    description: |-
                                      k8s readinessProbe settings.
                                      [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                      k8s.io.api.core.v1.Probe readiness_probe = 9;
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  replicaCount:
                                    description: |-
                                      k8s Deployment replicas setting.
                                      [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                  resources:
                                    description: |-
                                      k8s resources settings.
                                      [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  securityContext:
                                    description: |-
                                      k8s pod security context
                                      [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  service:
                                    description: |-
                                      k8s Service settings.
                                      [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  serviceAnnotations:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      k8s service annotations.
                                      [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                    type: object
                                  strategy:
                                    description: |-
                                      k8s deployment strategy.
                                      [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  tolerations:
                                    description: |-
                                      k8s toleration
                                      [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                    items:
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                  volumeMounts:
                                    description: |-
                                      k8s volumeMounts
                                      VolumeMounts defines the collection of VolumeMount to inject into containers.
                                    items:
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                  volumes:
                                    description: |-
                                      k8s volume
                                      [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                      Volumes defines the collection of Volume to inject into the pod.
                                    items:
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                type: object
                              namespace:
                                description: Namespace for the component.
                                type: string
                              schema:
                                description: |-
                                  Optional schema to validate spec against.
                                  For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#any).
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              spec:
                                description: |-
                                  Arbitrary install time configuration for the component.
                                  For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          description: |-
                            Deprecated.
                            Users should manage the installation of addon components on their own.
                            Refer to samples/addons for demo installation of addon components.
                          type: object
                        components:
                          description: |-
                            Kubernetes resource settings, enablement and component-specific settings that are not internal to the
                            component.
                          properties:
                            base:
                              properties:
                                enabled:
                                  description: Selects whether this component is installed.
                                  nullable: true
                                  type: boolean
                                k8s:
                                  description: Kubernetes resource spec.
                                  properties:
                                    affinity:
                                      description: |-
                                        k8s affinity.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    env:
                                      description: |-
                                        Deployment environment variables.
                                        [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    hpaSpec:
                                      description: |-
                                        k8s HorizontalPodAutoscaler settings.
                                        [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    imagePullPolicy:
                                      description: |-
                                        k8s imagePullPolicy.
                                        [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                      type: string
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s nodeSelector.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                      type: object
                                    overlays:
                                      description: Overlays for k8s resources in rendered
                                        manifests.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    podAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s pod annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    podDisruptionBudget:
                                      description: |-
                                        k8s PodDisruptionBudget settings.
                                        [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    priorityClassName:
                                      description: |-
                                        k8s priority_class_name. Default for all resources unless overridden.
                                        [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                      type: string
                                    readinessProbe:
                                      description: |-
                                        k8s readinessProbe settings.
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                        k8s.io.api.core.v1.Probe readiness_probe = 9;
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    replicaCount:
                                      description: |-
                                        k8s Deployment replicas setting.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    resources:
                                      description: |-
                                        k8s resources settings.
                                        [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    securityContext:
                                      description: |-
                                        k8s pod security context
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    service:
                                      description: |-
                                        k8s Service settings.
                                        [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    serviceAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s service annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    strategy:
                                      description: |-
                                        k8s deployment strategy.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    tolerations:
                                      description: |-
                                        k8s toleration
                                        [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumeMounts:
                                      description: |-
                                        k8s volumeMounts
                                        VolumeMounts defines the collection of VolumeMount to inject into containers.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumes:
                                      description: |-
                                        k8s volume
                                        [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                        Volumes defines the collection of Volume to inject into the pod.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                  type: object
                              type: object
                            cni:
                              properties:
                                enabled:
                                  description: Selects whether this component is installed.
                                  nullable: true
                                  type: boolean
                                hub:
                                  description: Hub for the component (overrides top level
                                    hub setting).
                                  type: string
                                k8s:
                                  description: Kubernetes resource spec.
                                  properties:
                                    affinity:
                                      description: |-
                                        k8s affinity.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    env:
                                      description: |-
                                        Deployment environment variables.
                                        [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    hpaSpec:
                                      description: |-
                                        k8s HorizontalPodAutoscaler settings.
                                        [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    imagePullPolicy:
                                      description: |-
                                        k8s imagePullPolicy.
                                        [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                      type: string
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s nodeSelector.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                      type: object
                                    overlays:
                                      description: Overlays for k8s resources in rendered
                                        manifests.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    podAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s pod annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    podDisruptionBudget:
                                      description: |-
                                        k8s PodDisruptionBudget settings.
                                        [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    priorityClassName:
                                      description: |-
                                        k8s priority_class_name. Default for all resources unless overridden.
                                        [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                      type: string
                                    readinessProbe:
                                      description: |-
                                        k8s readinessProbe settings.
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                        k8s.io.api.core.v1.Probe readiness_probe = 9;
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    replicaCount:
                                      description: |-
                                        k8s Deployment replicas setting.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    resources:
                                      description: |-
                                        k8s resources settings.
                                        [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    securityContext:
                                      description: |-
                                        k8s pod security context
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    service:
                                      description: |-
                                        k8s Service settings.
                                        [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    serviceAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s service annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    strategy:
                                      description: |-
                                        k8s deployment strategy.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    tolerations:
                                      description: |-
                                        k8s toleration
                                        [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumeMounts:
                                      description: |-
                                        k8s volumeMounts
                                        VolumeMounts defines the collection of VolumeMount to inject into containers.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumes:
                                      description: |-
                                        k8s volume
                                        [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                        Volumes defines the collection of Volume to inject into the pod.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                  type: object
                                namespace:
                                  description: Namespace for the component.
                                  type: string
                                spec:
                                  description: |-
                                    Arbitrary install time configuration for the component.
                                    For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                tag:
                                  description: Tag for the component (overrides top level
                                    tag setting).
                                  type: string
                              type: object
                            egressGateways:
                              items:
                                description: Configuration for gateways.
                                properties:
                                  enabled:
                                    description: Selects whether this gateway is installed.
                                    nullable: true
                                    type: boolean
                                  hub:
                                    description: Hub for the component (overrides top
                                      level hub setting).
                                    type: string
                                  k8s:
                                    description: Kubernetes resource spec.
                                    properties:
                                      affinity:
                                        description: |-
                                          k8s affinity.
                                          [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      env:
                                        description: |-
                                          Deployment environment variables.
                                          [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      hpaSpec:
                                        description: |-
                                          k8s HorizontalPodAutoscaler settings.
                                          [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      imagePullPolicy:
                                        description: |-
                                          k8s imagePullPolicy.
                                          [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                        type: string
                                      nodeSelector:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s nodeSelector.
                                          [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                        type: object
                                      overlays:
                                        description: Overlays for k8s resources in rendered
                                          manifests.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      podAnnotations:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s pod annotations.
                                          [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                        type: object
                                      podDisruptionBudget:
                                        description: |-
                                          k8s PodDisruptionBudget settings.
                                          [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      priorityClassName:
                                        description: |-
                                          k8s priority_class_name. Default for all resources unless overridden.
                                          [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                        type: string
                                      readinessProbe:
                                        description: |-
                                          k8s readinessProbe settings.
                                          [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                          k8s.io.api.core.v1.Probe readiness_probe = 9;
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      replicaCount:
                                        description: |-
                                          k8s Deployment replicas setting.
                                          [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                        maximum: 4294967295
                                        minimum: 0
                                        type: integer
                                      resources:
                                        description: |-
                                          k8s resources settings.
                                          [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      securityContext:
                                        description: |-
                                          k8s pod security context
                                          [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      service:
                                        description: |-
                                          k8s Service settings.
                                          [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      serviceAnnotations:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s service annotations.
                                          [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                        type: object
                                      strategy:
                                        description: |-
                                          k8s deployment strategy.
                                          [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      tolerations:
                                        description: |-
                                          k8s toleration
                                          [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      volumeMounts:
                                        description: |-
                                          k8s volumeMounts
                                          VolumeMounts defines the collection of VolumeMount to inject into containers.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      volumes:
                                        description: |-
                                          k8s volume
                                          [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                          Volumes defines the collection of Volume to inject into the pod.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                    type: object
                                  label:
                                    additionalProperties:
                                      type: string
                                    description: Labels for the gateway.
                                    type: object
                                  name:
                                    description: Name for the gateway.
                                    type: string
                                  namespace:
                                    description: Namespace for the gateway.
                                    type: string
                                  tag:
                                    description: Tag for the component (overrides top
                                      level tag setting).
                                    type: string
                                type: object
                              type: array
                            ingressGateways:
                              items:
                                description: Configuration for gateways.
                                properties:
                                  enabled:
                                    description: Selects whether this gateway is installed.
                                    nullable: true
                                    type: boolean
                                  hub:
                                    description: Hub for the component (overrides top
                                      level hub setting).
                                    type: string
                                  k8s:
                                    description: Kubernetes resource spec.
                                    properties:
                                      affinity:
                                        description: |-
                                          k8s affinity.
                                          [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      env:
                                        description: |-
                                          Deployment environment variables.
                                          [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      hpaSpec:
                                        description: |-
                                          k8s HorizontalPodAutoscaler settings.
                                          [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      imagePullPolicy:
                                        description: |-
                                          k8s imagePullPolicy.
                                          [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                        type: string
                                      nodeSelector:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s nodeSelector.
                                          [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                        type: object
                                      overlays:
                                        description: Overlays for k8s resources in rendered
                                          manifests.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      podAnnotations:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s pod annotations.
                                          [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                        type: object
                                      podDisruptionBudget:
                                        description: |-
                                          k8s PodDisruptionBudget settings.
                                          [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      priorityClassName:
                                        description: |-
                                          k8s priority_class_name. Default for all resources unless overridden.
                                          [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                        type: string
                                      readinessProbe:
                                        description: |-
                                          k8s readinessProbe settings.
                                          [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                          k8s.io.api.core.v1.Probe readiness_probe = 9;
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      replicaCount:
                                        description: |-
                                          k8s Deployment replicas setting.
                                          [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                        maximum: 4294967295
                                        minimum: 0
                                        type: integer
                                      resources:
                                        description: |-
                                          k8s resources settings.
                                          [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      securityContext:
                                        description: |-
                                          k8s pod security context
                                          [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      service:
                                        description: |-
                                          k8s Service settings.
                                          [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      serviceAnnotations:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          k8s service annotations.
                                          [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                        type: object
                                      strategy:
                                        description: |-
                                          k8s deployment strategy.
                                          [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      tolerations:
                                        description: |-
                                          k8s toleration
                                          [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      volumeMounts:
                                        description: |-
                                          k8s volumeMounts
                                          VolumeMounts defines the collection of VolumeMount to inject into containers.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      volumes:
                                        description: |-
                                          k8s volume
                                          [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                          Volumes defines the collection of Volume to inject into the pod.
                                        items:
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                    type: object
                                  label:
                                    additionalProperties:
                                      type: string
                                    description: Labels for the gateway.
                                    type: object
                                  name:
                                    description: Name for the gateway.
                                    type: string
                                  namespace:
                                    description: Namespace for the gateway.
                                    type: string
                                  tag:
                                    description: Tag for the component (overrides top
                                      level tag setting).
                                    type: string
                                type: object
                              type: array
                            istiodRemote:
                              description: Remote cluster using an external control plane.
                              properties:
                                enabled:
                                  description: Selects whether this component is installed.
                                  nullable: true
                                  type: boolean
                                hub:
                                  description: Hub for the component (overrides top level
                                    hub setting).
                                  type: string
                                k8s:
                                  description: Kubernetes resource spec.
                                  properties:
                                    affinity:
                                      description: |-
                                        k8s affinity.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    env:
                                      description: |-
                                        Deployment environment variables.
                                        [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    hpaSpec:
                                      description: |-
                                        k8s HorizontalPodAutoscaler settings.
                                        [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    imagePullPolicy:
                                      description: |-
                                        k8s imagePullPolicy.
                                        [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                      type: string
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s nodeSelector.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                      type: object
                                    overlays:
                                      description: Overlays for k8s resources in rendered
                                        manifests.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    podAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s pod annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    podDisruptionBudget:
                                      description: |-
                                        k8s PodDisruptionBudget settings.
                                        [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    priorityClassName:
                                      description: |-
                                        k8s priority_class_name. Default for all resources unless overridden.
                                        [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                      type: string
                                    readinessProbe:
                                      description: |-
                                        k8s readinessProbe settings.
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                        k8s.io.api.core.v1.Probe readiness_probe = 9;
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    replicaCount:
                                      description: |-
                                        k8s Deployment replicas setting.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    resources:
                                      description: |-
                                        k8s resources settings.
                                        [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    securityContext:
                                      description: |-
                                        k8s pod security context
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    service:
                                      description: |-
                                        k8s Service settings.
                                        [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    serviceAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s service annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    strategy:
                                      description: |-
                                        k8s deployment strategy.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    tolerations:
                                      description: |-
                                        k8s toleration
                                        [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumeMounts:
                                      description: |-
                                        k8s volumeMounts
                                        VolumeMounts defines the collection of VolumeMount to inject into containers.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumes:
                                      description: |-
                                        k8s volume
                                        [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                        Volumes defines the collection of Volume to inject into the pod.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                  type: object
                                namespace:
                                  description: Namespace for the component.
                                  type: string
                                spec:
                                  description: |-
                                    Arbitrary install time configuration for the component.
                                    For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                tag:
                                  description: Tag for the component (overrides top level
                                    tag setting).
                                  type: string
                              type: object
                            pilot:
                              properties:
                                enabled:
                                  description: Selects whether this component is installed.
                                  nullable: true
                                  type: boolean
                                hub:
                                  description: Hub for the component (overrides top level
                                    hub setting).
                                  type: string
                                k8s:
                                  description: Kubernetes resource spec.
                                  properties:
                                    affinity:
                                      description: |-
                                        k8s affinity.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    env:
                                      description: |-
                                        Deployment environment variables.
                                        [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    hpaSpec:
                                      description: |-
                                        k8s HorizontalPodAutoscaler settings.
                                        [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    imagePullPolicy:
                                      description: |-
                                        k8s imagePullPolicy.
                                        [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                      type: string
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s nodeSelector.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                      type: object
                                    overlays:
                                      description: Overlays for k8s resources in rendered
                                        manifests.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    podAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s pod annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    podDisruptionBudget:
                                      description: |-
                                        k8s PodDisruptionBudget settings.
                                        [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    priorityClassName:
                                      description: |-
                                        k8s priority_class_name. Default for all resources unless overridden.
                                        [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                      type: string
                                    readinessProbe:
                                      description: |-
                                        k8s readinessProbe settings.
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                        k8s.io.api.core.v1.Probe readiness_probe = 9;
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    replicaCount:
                                      description: |-
                                        k8s Deployment replicas setting.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    resources:
                                      description: |-
                                        k8s resources settings.
                                        [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    securityContext:
                                      description: |-
                                        k8s pod security context
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    service:
                                      description: |-
                                        k8s Service settings.
                                        [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    serviceAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s service annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    strategy:
                                      description: |-
                                        k8s deployment strategy.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    tolerations:
                                      description: |-
                                        k8s toleration
                                        [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumeMounts:
                                      description: |-
                                        k8s volumeMounts
                                        VolumeMounts defines the collection of VolumeMount to inject into containers.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumes:
                                      description: |-
                                        k8s volume
                                        [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                        Volumes defines the collection of Volume to inject into the pod.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                  type: object
                                namespace:
                                  description: Namespace for the component.
                                  type: string
                                spec:
                                  description: |-
                                    Arbitrary install time configuration for the component.
                                    For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                tag:
                                  description: Tag for the component (overrides top level
                                    tag setting).
                                  type: string
                              type: object
                            ztunnel:
                              properties:
                                enabled:
                                  description: Selects whether this component is installed.
                                  nullable: true
                                  type: boolean
                                hub:
                                  description: Hub for the component (overrides top level
                                    hub setting).
                                  type: string
                                k8s:
                                  description: Kubernetes resource spec.
                                  properties:
                                    affinity:
                                      description: |-
                                        k8s affinity.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    env:
                                      description: |-
                                        Deployment environment variables.
                                        [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    hpaSpec:
                                      description: |-
                                        k8s HorizontalPodAutoscaler settings.
                                        [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    imagePullPolicy:
                                      description: |-
                                        k8s imagePullPolicy.
                                        [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                      type: string
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s nodeSelector.
                                        [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                      type: object
                                    overlays:
                                      description: Overlays for k8s resources in rendered
                                        manifests.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    podAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s pod annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    podDisruptionBudget:
                                      description: |-
                                        k8s PodDisruptionBudget settings.
                                        [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    priorityClassName:
                                      description: |-
                                        k8s priority_class_name. Default for all resources unless overridden.
                                        [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                      type: string
                                    readinessProbe:
                                      description: |-
                                        k8s readinessProbe settings.
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                        k8s.io.api.core.v1.Probe readiness_probe = 9;
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    replicaCount:
                                      description: |-
                                        k8s Deployment replicas setting.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    resources:
                                      description: |-
                                        k8s resources settings.
                                        [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    securityContext:
                                      description: |-
                                        k8s pod security context
                                        [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    service:
                                      description: |-
                                        k8s Service settings.
                                        [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    serviceAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        k8s service annotations.
                                        [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                      type: object
                                    strategy:
                                      description: |-
                                        k8s deployment strategy.
                                        [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    tolerations:
                                      description: |-
                                        k8s toleration
                                        [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumeMounts:
                                      description: |-
                                        k8s volumeMounts
                                        VolumeMounts defines the collection of VolumeMount to inject into containers.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    volumes:
                                      description: |-
                                        k8s volume
                                        [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                        Volumes defines the collection of Volume to inject into the pod.
                                      items:
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                  type: object
                                namespace:
                                  description: Namespace for the component.
                                  type: string
                                spec:
                                  description: |-
                                    Arbitrary install time configuration for the component.
                                    For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                tag:
                                  description: Tag for the component (overrides top level
                                    tag setting).
                                  type: string
                              type: object
                          type: object
                        defaultRevision:
                          description: |-
                            Identify whether this revision is the default revision for the cluster
                            This option is currently experimental.
                          type: boolean
                        hub:
                          description: Root for docker image paths e.g. `docker.io/istio`
                          type: string
                        installPackagePath:
                          description: |-
                            Path for the install package. e.g.
    
                            * /tmp/istio-installer/nightly (local file path)
                          type: string
                        meshConfig:
                          description: |-
                            Config used by control plane components internally.
                            For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        namespace:
                          description: |-
                            Namespace to install control plane resources into. If unset, Istio will be installed into the same namespace
                            as the `IstioOperator` CR. You must also set `values.global.istioNamespace` if you wish to install Istio in
                            a custom namespace.
                            If you have enabled CNI, you must  exclude this namespace by adding it to the list `values.cni.excludeNamespaces`.
                          type: string
                        profile:
                          description: |-
                            Path or name for the profile e.g.
    
                            * minimal (looks in profiles dir for a file called minimal.yaml)
                            * /tmp/istio/install/values/custom/custom-install.yaml (local file path)
    
                            default profile is used if this field is unset.
                          type: string
                        resourceSuffix:
                          type: string
                        revision:
                          description: |-
                            Identify the revision this installation is associated with.
                            This option is currently experimental.
                          type: string
                        tag:
                          description: Version tag for docker images e.g. `1.7.2`
                          type: string
                        unvalidatedValues:
                          description: |-
                            Unvalidated overrides for default `values.yaml`. Used for custom templates where new parameters are added.
                            For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        values:
                          description: |-
                            Overrides for default `values.yaml`. This is a validated pass-through to Helm templates.
                            See the [Helm installation options](https://istio.io/v1.5/docs/reference/config/installation-options/) for schema details.
                            Anything that is available in `IstioOperatorSpec` should be set above rather than using the passthrough. This
                            includes Kubernetes resource settings for components in `KubernetesResourcesSpec`.
                            For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                    revision:
                      description: |-
                        Istio revision for this installation.
                        Label workload resources with 'istio.io/rev=$REVISION' to use this installation.
                        When set to `auto`, Gloo installs the control plane with the default supported version of the Solo distribution of Istio.
    
                        </br>**Configuration constraints: This value can be a maximum of 63 characters.
                      maxLength: 63
                      type: string
                    skipUpgradeValidation:
                      description: |-
                        When set to true, the lifecycle manager allows you to perform
                        in-place upgrades by skipping checks that are required for canary upgrades.
                        In production environments, canary upgrades are recommended for
                        updating the minor version. To update the patch version or make
                        configuration changes within the same version, you can use in-place upgrades.
                        Be sure to test in-place upgrades in development or staging environments first.
                      type: boolean
                  type: object
                type: array
            type: object
          status:
            description: The status of the `IstioLifecycleManager` resource after you
              apply it to your Gloo environment.
            properties:
              clusters:
                additionalProperties:
                  properties:
                    installations:
                      additionalProperties:
                        properties:
                          message:
                            description: A human readable message about the current state
                              of the installation.
                            type: string
                          observedOperator:
                            description: The IstioOperator spec that is currently deployed
                              for this revision.
                            properties:
                              addonComponents:
                                additionalProperties:
                                  properties:
                                    chartPath:
                                      description: Chart path for addon components.
                                      type: string
                                    enabled:
                                      description: Selects whether this component is installed.
                                      nullable: true
                                      type: boolean
                                    k8s:
                                      description: Kubernetes resource spec.
                                      properties:
                                        affinity:
                                          description: |-
                                            k8s affinity.
                                            [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        env:
                                          description: |-
                                            Deployment environment variables.
                                            [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                          items:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: array
                                        hpaSpec:
                                          description: |-
                                            k8s HorizontalPodAutoscaler settings.
                                            [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        imagePullPolicy:
                                          description: |-
                                            k8s imagePullPolicy.
                                            [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                          type: string
                                        nodeSelector:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            k8s nodeSelector.
                                            [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                          type: object
                                        overlays:
                                          description: Overlays for k8s resources in rendered
                                            manifests.
                                          items:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: array
                                        podAnnotations:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            k8s pod annotations.
                                            [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                          type: object
                                        podDisruptionBudget:
                                          description: |-
                                            k8s PodDisruptionBudget settings.
                                            [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        priorityClassName:
                                          description: |-
                                            k8s priority_class_name. Default for all resources unless overridden.
                                            [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                          type: string
                                        readinessProbe:
                                          description: |-
                                            k8s readinessProbe settings.
                                            [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                            k8s.io.api.core.v1.Probe readiness_probe = 9;
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        replicaCount:
                                          description: |-
                                            k8s Deployment replicas setting.
                                            [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                          maximum: 4294967295
                                          minimum: 0
                                          type: integer
                                        resources:
                                          description: |-
                                            k8s resources settings.
                                            [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        securityContext:
                                          description: |-
                                            k8s pod security context
                                            [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        service:
                                          description: |-
                                            k8s Service settings.
                                            [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        serviceAnnotations:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            k8s service annotations.
                                            [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                          type: object
                                        strategy:
                                          description: |-
                                            k8s deployment strategy.
                                            [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        tolerations:
                                          description: |-
                                            k8s toleration
                                            [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                          items:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: array
                                        volumeMounts:
                                          description: |-
                                            k8s volumeMounts
                                            VolumeMounts defines the collection of VolumeMount to inject into containers.
                                          items:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: array
                                        volumes:
                                          description: |-
                                            k8s volume
                                            [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                            Volumes defines the collection of Volume to inject into the pod.
                                          items:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: array
                                      type: object
                                    namespace:
                                      description: Namespace for the component.
                                      type: string
                                    schema:
                                      description: |-
                                        Optional schema to validate spec against.
                                        For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#any).
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    spec:
                                      description: |-
                                        Arbitrary install time configuration for the component.
                                        For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                description: |-
                                  Deprecated.
                                  Users should manage the installation of addon components on their own.
                                  Refer to samples/addons for demo installation of addon components.
                                type: object
                              components:
                                description: |-
                                  Kubernetes resource settings, enablement and component-specific settings that are not internal to the
                                  component.
                                properties:
                                  base:
                                    properties:
                                      enabled:
                                        description: Selects whether this component is
                                          installed.
                                        nullable: true
                                        type: boolean
                                      k8s:
                                        description: Kubernetes resource spec.
                                        properties:
                                          affinity:
                                            description: |-
                                              k8s affinity.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          env:
                                            description: |-
                                              Deployment environment variables.
                                              [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          hpaSpec:
                                            description: |-
                                              k8s HorizontalPodAutoscaler settings.
                                              [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          imagePullPolicy:
                                            description: |-
                                              k8s imagePullPolicy.
                                              [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                            type: string
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s nodeSelector.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                            type: object
                                          overlays:
                                            description: Overlays for k8s resources in
                                              rendered manifests.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          podAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s pod annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          podDisruptionBudget:
                                            description: |-
                                              k8s PodDisruptionBudget settings.
                                              [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          priorityClassName:
                                            description: |-
                                              k8s priority_class_name. Default for all resources unless overridden.
                                              [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                            type: string
                                          readinessProbe:
                                            description: |-
                                              k8s readinessProbe settings.
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                              k8s.io.api.core.v1.Probe readiness_probe = 9;
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          replicaCount:
                                            description: |-
                                              k8s Deployment replicas setting.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          resources:
                                            description: |-
                                              k8s resources settings.
                                              [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          securityContext:
                                            description: |-
                                              k8s pod security context
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          service:
                                            description: |-
                                              k8s Service settings.
                                              [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          serviceAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s service annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          strategy:
                                            description: |-
                                              k8s deployment strategy.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          tolerations:
                                            description: |-
                                              k8s toleration
                                              [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumeMounts:
                                            description: |-
                                              k8s volumeMounts
                                              VolumeMounts defines the collection of VolumeMount to inject into containers.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumes:
                                            description: |-
                                              k8s volume
                                              [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                              Volumes defines the collection of Volume to inject into the pod.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                        type: object
                                    type: object
                                  cni:
                                    properties:
                                      enabled:
                                        description: Selects whether this component is
                                          installed.
                                        nullable: true
                                        type: boolean
                                      hub:
                                        description: Hub for the component (overrides
                                          top level hub setting).
                                        type: string
                                      k8s:
                                        description: Kubernetes resource spec.
                                        properties:
                                          affinity:
                                            description: |-
                                              k8s affinity.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          env:
                                            description: |-
                                              Deployment environment variables.
                                              [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          hpaSpec:
                                            description: |-
                                              k8s HorizontalPodAutoscaler settings.
                                              [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          imagePullPolicy:
                                            description: |-
                                              k8s imagePullPolicy.
                                              [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                            type: string
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s nodeSelector.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                            type: object
                                          overlays:
                                            description: Overlays for k8s resources in
                                              rendered manifests.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          podAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s pod annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          podDisruptionBudget:
                                            description: |-
                                              k8s PodDisruptionBudget settings.
                                              [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          priorityClassName:
                                            description: |-
                                              k8s priority_class_name. Default for all resources unless overridden.
                                              [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                            type: string
                                          readinessProbe:
                                            description: |-
                                              k8s readinessProbe settings.
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                              k8s.io.api.core.v1.Probe readiness_probe = 9;
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          replicaCount:
                                            description: |-
                                              k8s Deployment replicas setting.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          resources:
                                            description: |-
                                              k8s resources settings.
                                              [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          securityContext:
                                            description: |-
                                              k8s pod security context
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          service:
                                            description: |-
                                              k8s Service settings.
                                              [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          serviceAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s service annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          strategy:
                                            description: |-
                                              k8s deployment strategy.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          tolerations:
                                            description: |-
                                              k8s toleration
                                              [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumeMounts:
                                            description: |-
                                              k8s volumeMounts
                                              VolumeMounts defines the collection of VolumeMount to inject into containers.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumes:
                                            description: |-
                                              k8s volume
                                              [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                              Volumes defines the collection of Volume to inject into the pod.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                        type: object
                                      namespace:
                                        description: Namespace for the component.
                                        type: string
                                      spec:
                                        description: |-
                                          Arbitrary install time configuration for the component.
                                          For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      tag:
                                        description: Tag for the component (overrides
                                          top level tag setting).
                                        type: string
                                    type: object
                                  egressGateways:
                                    items:
                                      description: Configuration for gateways.
                                      properties:
                                        enabled:
                                          description: Selects whether this gateway is
                                            installed.
                                          nullable: true
                                          type: boolean
                                        hub:
                                          description: Hub for the component (overrides
                                            top level hub setting).
                                          type: string
                                        k8s:
                                          description: Kubernetes resource spec.
                                          properties:
                                            affinity:
                                              description: |-
                                                k8s affinity.
                                                [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            env:
                                              description: |-
                                                Deployment environment variables.
                                                [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            hpaSpec:
                                              description: |-
                                                k8s HorizontalPodAutoscaler settings.
                                                [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            imagePullPolicy:
                                              description: |-
                                                k8s imagePullPolicy.
                                                [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                              type: string
                                            nodeSelector:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s nodeSelector.
                                                [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                              type: object
                                            overlays:
                                              description: Overlays for k8s resources
                                                in rendered manifests.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            podAnnotations:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s pod annotations.
                                                [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                              type: object
                                            podDisruptionBudget:
                                              description: |-
                                                k8s PodDisruptionBudget settings.
                                                [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            priorityClassName:
                                              description: |-
                                                k8s priority_class_name. Default for all resources unless overridden.
                                                [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                              type: string
                                            readinessProbe:
                                              description: |-
                                                k8s readinessProbe settings.
                                                [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                                k8s.io.api.core.v1.Probe readiness_probe = 9;
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            replicaCount:
                                              description: |-
                                                k8s Deployment replicas setting.
                                                [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                              maximum: 4294967295
                                              minimum: 0
                                              type: integer
                                            resources:
                                              description: |-
                                                k8s resources settings.
                                                [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            securityContext:
                                              description: |-
                                                k8s pod security context
                                                [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            service:
                                              description: |-
                                                k8s Service settings.
                                                [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            serviceAnnotations:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s service annotations.
                                                [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                              type: object
                                            strategy:
                                              description: |-
                                                k8s deployment strategy.
                                                [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            tolerations:
                                              description: |-
                                                k8s toleration
                                                [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            volumeMounts:
                                              description: |-
                                                k8s volumeMounts
                                                VolumeMounts defines the collection of VolumeMount to inject into containers.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            volumes:
                                              description: |-
                                                k8s volume
                                                [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                                Volumes defines the collection of Volume to inject into the pod.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                          type: object
                                        label:
                                          additionalProperties:
                                            type: string
                                          description: Labels for the gateway.
                                          type: object
                                        name:
                                          description: Name for the gateway.
                                          type: string
                                        namespace:
                                          description: Namespace for the gateway.
                                          type: string
                                        tag:
                                          description: Tag for the component (overrides
                                            top level tag setting).
                                          type: string
                                      type: object
                                    type: array
                                  ingressGateways:
                                    items:
                                      description: Configuration for gateways.
                                      properties:
                                        enabled:
                                          description: Selects whether this gateway is
                                            installed.
                                          nullable: true
                                          type: boolean
                                        hub:
                                          description: Hub for the component (overrides
                                            top level hub setting).
                                          type: string
                                        k8s:
                                          description: Kubernetes resource spec.
                                          properties:
                                            affinity:
                                              description: |-
                                                k8s affinity.
                                                [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            env:
                                              description: |-
                                                Deployment environment variables.
                                                [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            hpaSpec:
                                              description: |-
                                                k8s HorizontalPodAutoscaler settings.
                                                [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            imagePullPolicy:
                                              description: |-
                                                k8s imagePullPolicy.
                                                [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                              type: string
                                            nodeSelector:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s nodeSelector.
                                                [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                              type: object
                                            overlays:
                                              description: Overlays for k8s resources
                                                in rendered manifests.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            podAnnotations:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s pod annotations.
                                                [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                              type: object
                                            podDisruptionBudget:
                                              description: |-
                                                k8s PodDisruptionBudget settings.
                                                [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            priorityClassName:
                                              description: |-
                                                k8s priority_class_name. Default for all resources unless overridden.
                                                [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                              type: string
                                            readinessProbe:
                                              description: |-
                                                k8s readinessProbe settings.
                                                [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                                k8s.io.api.core.v1.Probe readiness_probe = 9;
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            replicaCount:
                                              description: |-
                                                k8s Deployment replicas setting.
                                                [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                              maximum: 4294967295
                                              minimum: 0
                                              type: integer
                                            resources:
                                              description: |-
                                                k8s resources settings.
                                                [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            securityContext:
                                              description: |-
                                                k8s pod security context
                                                [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            service:
                                              description: |-
                                                k8s Service settings.
                                                [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            serviceAnnotations:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                k8s service annotations.
                                                [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                              type: object
                                            strategy:
                                              description: |-
                                                k8s deployment strategy.
                                                [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            tolerations:
                                              description: |-
                                                k8s toleration
                                                [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            volumeMounts:
                                              description: |-
                                                k8s volumeMounts
                                                VolumeMounts defines the collection of VolumeMount to inject into containers.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                            volumes:
                                              description: |-
                                                k8s volume
                                                [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                                Volumes defines the collection of Volume to inject into the pod.
                                              items:
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              type: array
                                          type: object
                                        label:
                                          additionalProperties:
                                            type: string
                                          description: Labels for the gateway.
                                          type: object
                                        name:
                                          description: Name for the gateway.
                                          type: string
                                        namespace:
                                          description: Namespace for the gateway.
                                          type: string
                                        tag:
                                          description: Tag for the component (overrides
                                            top level tag setting).
                                          type: string
                                      type: object
                                    type: array
                                  istiodRemote:
                                    description: Remote cluster using an external control
                                      plane.
                                    properties:
                                      enabled:
                                        description: Selects whether this component is
                                          installed.
                                        nullable: true
                                        type: boolean
                                      hub:
                                        description: Hub for the component (overrides
                                          top level hub setting).
                                        type: string
                                      k8s:
                                        description: Kubernetes resource spec.
                                        properties:
                                          affinity:
                                            description: |-
                                              k8s affinity.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          env:
                                            description: |-
                                              Deployment environment variables.
                                              [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          hpaSpec:
                                            description: |-
                                              k8s HorizontalPodAutoscaler settings.
                                              [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          imagePullPolicy:
                                            description: |-
                                              k8s imagePullPolicy.
                                              [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                            type: string
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s nodeSelector.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                            type: object
                                          overlays:
                                            description: Overlays for k8s resources in
                                              rendered manifests.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          podAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s pod annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          podDisruptionBudget:
                                            description: |-
                                              k8s PodDisruptionBudget settings.
                                              [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          priorityClassName:
                                            description: |-
                                              k8s priority_class_name. Default for all resources unless overridden.
                                              [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                            type: string
                                          readinessProbe:
                                            description: |-
                                              k8s readinessProbe settings.
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                              k8s.io.api.core.v1.Probe readiness_probe = 9;
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          replicaCount:
                                            description: |-
                                              k8s Deployment replicas setting.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          resources:
                                            description: |-
                                              k8s resources settings.
                                              [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          securityContext:
                                            description: |-
                                              k8s pod security context
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          service:
                                            description: |-
                                              k8s Service settings.
                                              [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          serviceAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s service annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          strategy:
                                            description: |-
                                              k8s deployment strategy.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          tolerations:
                                            description: |-
                                              k8s toleration
                                              [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumeMounts:
                                            description: |-
                                              k8s volumeMounts
                                              VolumeMounts defines the collection of VolumeMount to inject into containers.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumes:
                                            description: |-
                                              k8s volume
                                              [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                              Volumes defines the collection of Volume to inject into the pod.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                        type: object
                                      namespace:
                                        description: Namespace for the component.
                                        type: string
                                      spec:
                                        description: |-
                                          Arbitrary install time configuration for the component.
                                          For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      tag:
                                        description: Tag for the component (overrides
                                          top level tag setting).
                                        type: string
                                    type: object
                                  pilot:
                                    properties:
                                      enabled:
                                        description: Selects whether this component is
                                          installed.
                                        nullable: true
                                        type: boolean
                                      hub:
                                        description: Hub for the component (overrides
                                          top level hub setting).
                                        type: string
                                      k8s:
                                        description: Kubernetes resource spec.
                                        properties:
                                          affinity:
                                            description: |-
                                              k8s affinity.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          env:
                                            description: |-
                                              Deployment environment variables.
                                              [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          hpaSpec:
                                            description: |-
                                              k8s HorizontalPodAutoscaler settings.
                                              [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          imagePullPolicy:
                                            description: |-
                                              k8s imagePullPolicy.
                                              [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                            type: string
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s nodeSelector.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                            type: object
                                          overlays:
                                            description: Overlays for k8s resources in
                                              rendered manifests.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          podAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s pod annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          podDisruptionBudget:
                                            description: |-
                                              k8s PodDisruptionBudget settings.
                                              [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          priorityClassName:
                                            description: |-
                                              k8s priority_class_name. Default for all resources unless overridden.
                                              [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                            type: string
                                          readinessProbe:
                                            description: |-
                                              k8s readinessProbe settings.
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                              k8s.io.api.core.v1.Probe readiness_probe = 9;
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          replicaCount:
                                            description: |-
                                              k8s Deployment replicas setting.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          resources:
                                            description: |-
                                              k8s resources settings.
                                              [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          securityContext:
                                            description: |-
                                              k8s pod security context
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          service:
                                            description: |-
                                              k8s Service settings.
                                              [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          serviceAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s service annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          strategy:
                                            description: |-
                                              k8s deployment strategy.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          tolerations:
                                            description: |-
                                              k8s toleration
                                              [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumeMounts:
                                            description: |-
                                              k8s volumeMounts
                                              VolumeMounts defines the collection of VolumeMount to inject into containers.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumes:
                                            description: |-
                                              k8s volume
                                              [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                              Volumes defines the collection of Volume to inject into the pod.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                        type: object
                                      namespace:
                                        description: Namespace for the component.
                                        type: string
                                      spec:
                                        description: |-
                                          Arbitrary install time configuration for the component.
                                          For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      tag:
                                        description: Tag for the component (overrides
                                          top level tag setting).
                                        type: string
                                    type: object
                                  ztunnel:
                                    properties:
                                      enabled:
                                        description: Selects whether this component is
                                          installed.
                                        nullable: true
                                        type: boolean
                                      hub:
                                        description: Hub for the component (overrides
                                          top level hub setting).
                                        type: string
                                      k8s:
                                        description: Kubernetes resource spec.
                                        properties:
                                          affinity:
                                            description: |-
                                              k8s affinity.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          env:
                                            description: |-
                                              Deployment environment variables.
                                              [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          hpaSpec:
                                            description: |-
                                              k8s HorizontalPodAutoscaler settings.
                                              [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          imagePullPolicy:
                                            description: |-
                                              k8s imagePullPolicy.
                                              [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                            type: string
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s nodeSelector.
                                              [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                            type: object
                                          overlays:
                                            description: Overlays for k8s resources in
                                              rendered manifests.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          podAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s pod annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          podDisruptionBudget:
                                            description: |-
                                              k8s PodDisruptionBudget settings.
                                              [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          priorityClassName:
                                            description: |-
                                              k8s priority_class_name. Default for all resources unless overridden.
                                              [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                            type: string
                                          readinessProbe:
                                            description: |-
                                              k8s readinessProbe settings.
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                              k8s.io.api.core.v1.Probe readiness_probe = 9;
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          replicaCount:
                                            description: |-
                                              k8s Deployment replicas setting.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          resources:
                                            description: |-
                                              k8s resources settings.
                                              [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          securityContext:
                                            description: |-
                                              k8s pod security context
                                              [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          service:
                                            description: |-
                                              k8s Service settings.
                                              [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          serviceAnnotations:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              k8s service annotations.
                                              [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                            type: object
                                          strategy:
                                            description: |-
                                              k8s deployment strategy.
                                              [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          tolerations:
                                            description: |-
                                              k8s toleration
                                              [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumeMounts:
                                            description: |-
                                              k8s volumeMounts
                                              VolumeMounts defines the collection of VolumeMount to inject into containers.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                          volumes:
                                            description: |-
                                              k8s volume
                                              [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                              Volumes defines the collection of Volume to inject into the pod.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                        type: object
                                      namespace:
                                        description: Namespace for the component.
                                        type: string
                                      spec:
                                        description: |-
                                          Arbitrary install time configuration for the component.
                                          For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      tag:
                                        description: Tag for the component (overrides
                                          top level tag setting).
                                        type: string
                                    type: object
                                type: object
                              defaultRevision:
                                description: |-
                                  Identify whether this revision is the default revision for the cluster
                                  This option is currently experimental.
                                type: boolean
                              hub:
                                description: Root for docker image paths e.g. `docker.io/istio`
                                type: string
                              installPackagePath:
                                description: |-
                                  Path for the install package. e.g.
    
                                  * /tmp/istio-installer/nightly (local file path)
                                type: string
                              meshConfig:
                                description: |-
                                  Config used by control plane components internally.
                                  For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              namespace:
                                description: |-
                                  Namespace to install control plane resources into. If unset, Istio will be installed into the same namespace
                                  as the `IstioOperator` CR. You must also set `values.global.istioNamespace` if you wish to install Istio in
                                  a custom namespace.
                                  If you have enabled CNI, you must  exclude this namespace by adding it to the list `values.cni.excludeNamespaces`.
                                type: string
                              profile:
                                description: |-
                                  Path or name for the profile e.g.
    
                                  * minimal (looks in profiles dir for a file called minimal.yaml)
                                  * /tmp/istio/install/values/custom/custom-install.yaml (local file path)
    
                                  default profile is used if this field is unset.
                                type: string
                              resourceSuffix:
                                type: string
                              revision:
                                description: |-
                                  Identify the revision this installation is associated with.
                                  This option is currently experimental.
                                type: string
                              tag:
                                description: Version tag for docker images e.g. `1.7.2`
                                type: string
                              unvalidatedValues:
                                description: |-
                                  Unvalidated overrides for default `values.yaml`. Used for custom templates where new parameters are added.
                                  For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              values:
                                description: |-
                                  Overrides for default `values.yaml`. This is a validated pass-through to Helm templates.
                                  See the [Helm installation options](https://istio.io/v1.5/docs/reference/config/installation-options/) for schema details.
                                  Anything that is available in `IstioOperatorSpec` should be set above rather than using the passthrough. This
                                  includes Kubernetes resource settings for components in `KubernetesResourcesSpec`.
                                  For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          observedRevision:
                            description: The observed revision of the Istio installation.
                            type: string
                          state:
                            description: The current state of the Istio installation.
                            enum:
                            - PENDING
                            - FAILED
                            - INSTALLING_CONTROLLER
                            - CONTROLLER_INSTALL_FAILED
                            - INSTALLING_CONTROL_PLANE
                            - CONTROL_PLANE_INSTALL_FAILED
                            - HEALTHY
                            - UNHEALTHY
                            - ACTION_REQUIRED
                            - UPDATING_CONTROL_PLANE
                            - RECONCILING_CONTROL_PLANE
                            - UNKNOWN
                            - UNINSTALLING_CONTROL_PLANE
                            - UNINSTALLED_CONTROL_PLANE
                            - INSTALL_PENDING
                            type: string
                        type: object
                      description: The Istio installations in the cluster, listed by revision.
                      type: object
                  type: object
                description: The list of clusters where Gloo manages Istio installations.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/admin.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 3765d5787ae75988
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: kubernetesclusters.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: KubernetesCluster
    listKind: KubernetesClusterList
    plural: kubernetesclusters
    shortNames:
    - kc
    singular: kubernetescluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              `KubernetesCluster` defines a Kubernetes cluster that has been registered with Gloo Mesh for management.
              A KubernetesCluster must be created in order to connect the Gloo Mesh Agent
              with the Gloo Mesh Server.
              KubernetesCluster must be deployed to the management cluster in the `gloo-mesh` namespace.
              The name of the KubernetesCluster has to be unique among all managed workload clusters for a
              given Gloo Mesh management plane.
              The name or/and labels of a KubernetesCluster resource can be used in a Workspace resource to determine
              the workload clusters for a given workspace. **Note**: The KubernetesCluster resource name must be unique
              across the KubernetesCluster resources for other clusters that you register with Gloo. For simplicity, any
              KubernetesCluster resources that are created automatically for you during cluster registration use the same
              name as the workload cluster. However, the name of the KubernetesCluster resource
              is not required to match the name of the cluster.
    
              The following example show a simple KubernetesCluster resource named `cluster1` with `cluster.local`
              as its cluster domain:
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: KubernetesCluster
              metadata:
                name: cluster1
                namespace: gloo-mesh
              spec:
                clusterDomain: cluster.local
              ```
    
              The following example adds the region label to the KubernetesCluster resource:
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: KubernetesCluster
              metadata:
                name: cluster1
                namespace: gloo-mesh
                labels:
                  region: us-east
              spec:
                clusterDomain: cluster.local
              ```
    
              The following example excludes the cluster from safe mode:
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: KubernetesCluster
              metadata:
                name: cluster1
                namespace: gloo-mesh
                labels:
                  region: us-east
              spec:
                clusterDomain: cluster.local
                skipWarming: true
              ```
            properties:
              clusterDomain:
                description: 'Optional: The cluster domain suffix this Cluster is configured
                  with. Defaults to ''cluster.local''.'
                type: string
              skipWarming:
                description: |-
                  Optional: Exclude this cluster from safe mode. If set to true: In the event that Redis and the Gloo management server
                  restart and their cache and local memory are cleared, the Gloo management server does not wait
                  for this cluster to send an input snapshot to start the translation. Note that clusters that never connected to the Gloo
                  management server to sent at least one input snapshot are automatically excluded from safe mode.
                type: boolean
            type: object
          status:
            description: // The status of the KubernetesCluster after it is applied to
              your Gloo environment.
            properties:
              common:
                description: Indicates the state of the Gloo agent that is connected to
                  the Gloo management server.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              conditions:
                description: List of conditions -- observations of KubernetesCluster state
                items:
                  properties:
                    lastTransitionTime:
                      description: The timestamp when the condition last transitioned
                        from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message that includes the details
                        about why the condition transitioned to the current status.
                      type: string
                    observedGeneration:
                      description: Optional. The `metadata.generation` that the condition
                        is based on.
                      format: int64
                      type: integer
                    reason:
                      description: The programmatic identifier that represents the reason
                        the condition transitioned to the current status in CamelCase
                        format.
                      type: string
                    status:
                      description: The status of the condition. Commonly used values are
                        `True`, `False`, and `Unknown`, but can contain controller-specific
                        values too.
                      type: string
                    type:
                      description: The type of the condition in CamelCase.
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/admin.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: a3bc1c4ccf1b4e2c
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: ratelimitserverconfigs.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: RateLimitServerConfig
    listKind: RateLimitServerConfigList
    plural: ratelimitserverconfigs
    shortNames:
    - rlsc
    singular: ratelimitserverconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              RateLimitServerConfig is used to configure the ratelimit rules enforced by the server.
              All RateLimitPolicy resources in a workspace require a RateLimitServerConfig to in order to configure ratelimit rules.
              If no RateLimitServerConfig is provided, no ratelimit rules will be enforced.
            oneOf:
            - not:
                anyOf:
                - required:
                  - raw
            - required:
              - raw
            properties:
              destinationServers:
                description: Required field to specify the ratelimit servers that will
                  enforce the defined descriptors.
                items:
                  description: |-
                    Destinations point to the upstream services that fulfill client requests on matching routes that you set up, such as in a route table. Each destination must resolve to one and only one hostname.
    
                    Destinations can refer to a variety of resources. The behavior of the route action
                    varies depending on the kind of destination.
    
                    Currently supported destination types are:
                    - Kubernetes `Service`, the default destination.
                    - Gloo `VirtualDestination` to route traffic to one of the VirtualDestination's backing Kubernetes services.
                    - Gloo `ExternalService` to route traffic to a static set of service endpoints that are external to your mesh setup.
                    - Gloo `ExternalWorkload` to route traffic to external workloads that are part of your mesh.
                    - Gloo `CloudProvider` to route traffic to a cloud provider function such as AWS Lambdas, selected by using the `functionCall` field.
    
                    HTTP routes support all destinations. TCP routes support only Kubernetes `Service` and Gloo `VirtualDestination` destinations.
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - ref
                      - required:
                        - awsLambda
                  - required:
                    - ref
                  - required:
                    - awsLambda
                  properties:
                    awsLambda:
                      description: Reference an AWS Lambda function.
                      properties:
                        cloudProvider:
                          description: Reference to the AWS Cloud Provider.
                          properties:
                            cluster:
                              description: the cluster of the object. If omitted, Gloo
                                Mesh will use the same cluster as the parent object containing
                                this reference.
                              type: string
                            name:
                              description: the name of the object
                              type: string
                            namespace:
                              description: the namespace of the object. If omitted, Gloo
                                Mesh will use the same namespace as the parent object
                                containing this reference.
                              type: string
                          type: object
                        function:
                          description: Name of the function to reference.
                          type: string
                        options:
                          description: |-
                            Specify how the destinations should be configured, for configuring lambda functions.
                            If the destination config is required for the destination and not provided by the user, Gloo will invalidate the
                            destination and its parent resources.
                          properties:
                            invocationStyle:
                              description: |-
                                Can be either Sync or Async. See [AWS Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html)
                                for more details.
                              enum:
                              - SYNC
                              - ASYNC
                              type: string
                            requestTransformation:
                              enum:
                              - REQUEST_DEFAULT
                              - REQUEST_DISABLE
                              type: string
                            responseTransformation:
                              enum:
                              - RESPONSE_DEFAULT
                              - RESPONSE_DISABLE
                              type: string
                          type: object
                        qualifier:
                          description: Qualifier of the function to reference. Defaults
                            to $LATEST
                          type: string
                      type: object
                    kind:
                      description: |-
                        the kind of Kubernetes destination being referenced. defaults to Service.
                        Only applicable for Kubernetes destinations. For non Kubernetes destinations, this field is ignored.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: the port on the destination object being targeted.
                        required if the object provides more than one port.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                    ref:
                      description: reference to a Kubernetes destination object by its
                        metadata
                      properties:
                        cluster:
                          description: the cluster of the object. If omitted, Gloo Mesh
                            will use the same cluster as the parent object containing
                            this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. If omitted, Gloo Mesh
                            will use the same namespace as the parent object containing
                            this reference.
                          type: string
                      type: object
                    subset:
                      additionalProperties:
                        type: string
                      description: |-
                        select a subset of the destination's endpoints for routing based on their labels.
                        Only applicable for Kubernetes destinations.
                      type: object
                    weight:
                      description: |-
                        Specify the proportion of traffic to be forwarded to this destination.
                        Weights across all of the `destinations` must sum to 100.
                        Weight is only relevant when used in the context of a route with multiple destinations.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                type: array
              raw:
                description: Define a policy using the raw configuration format used by
                  the ratelimit server.
                properties:
                  descriptors:
                    description: |-
                      The descriptors that will be applied to the server.
                      {{/* Note: validation of this field disabled because it slows down cue tremendously*/}}
                    items:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                  setDescriptors:
                    description: |-
                      The set descriptors that will be applied to the server.
                      {{/* Note: validation of this field disabled because it slows down cue tremendously*/}}
                    items:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                type: object
            type: object
          status:
            description: The current status of the `RateLimitServerConfig`.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedDestinationServers:
                description: The number of ratelimit servers for which server config was
                  translated.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/admin.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: af2b5c62c8e1b96c
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: ratelimitserversettings.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: RateLimitServerSettings
    listKind: RateLimitServerSettingsList
    plural: ratelimitserversettings
    shortNames:
    - rlss
    singular: ratelimitserversettings
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.State
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              RateLimitServerSettings is an optional resource used to configure how a client (i.e. a sidecar or gateway proxy) connects to a rate limit server.
              If no RateLimitServerSetting is selected in a RatelimitPolicy, a default configuration will be used.
            properties:
              denyOnFail:
                description: |-
                  Behaviour in case the rate limiting service does not respond back.
                  When it is set to true, Envoy will not allow traffic in case of communication failure between rate limiting service and the proxy.
                  Defaults to false
                type: boolean
              destinationServer:
                description: |-
                  The ratelimit service to ask about ratelimit decisions.
                  The provided reference will be used to search for a service of the given name/namespace on the cluster
                  the traffic policy is applied on
    
                  If omitted, Gloo Mesh will search for a service with the name rate-limiter in the gloo-mesh namespace.
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - ref
                    - required:
                      - awsLambda
                - required:
                  - ref
                - required:
                  - awsLambda
                properties:
                  awsLambda:
                    description: Reference an AWS Lambda function.
                    properties:
                      cloudProvider:
                        description: Reference to the AWS Cloud Provider.
                        properties:
                          cluster:
                            description: the cluster of the object. If omitted, Gloo Mesh
                              will use the same cluster as the parent object containing
                              this reference.
                            type: string
                          name:
                            description: the name of the object
                            type: string
                          namespace:
                            description: the namespace of the object. If omitted, Gloo
                              Mesh will use the same namespace as the parent object containing
                              this reference.
                            type: string
                        type: object
                      function:
                        description: Name of the function to reference.
                        type: string
                      options:
                        description: |-
                          Specify how the destinations should be configured, for configuring lambda functions.
                          If the destination config is required for the destination and not provided by the user, Gloo will invalidate the
                          destination and its parent resources.
                        properties:
                          invocationStyle:
                            description: |-
                              Can be either Sync or Async. See [AWS Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html)
                              for more details.
                            enum:
                            - SYNC
                            - ASYNC
                            type: string
                          requestTransformation:
                            enum:
                            - REQUEST_DEFAULT
                            - REQUEST_DISABLE
                            type: string
                          responseTransformation:
                            enum:
                            - RESPONSE_DEFAULT
                            - RESPONSE_DISABLE
                            type: string
                        type: object
                      qualifier:
                        description: Qualifier of the function to reference. Defaults
                          to $LATEST
                        type: string
                    type: object
                  kind:
                    description: |-
                      the kind of Kubernetes destination being referenced. defaults to Service.
                      Only applicable for Kubernetes destinations. For non Kubernetes destinations, this field is ignored.
                    enum:
                    - SERVICE
                    - VIRTUAL_DESTINATION
                    - EXTERNAL_SERVICE
                    type: string
                  port:
                    description: the port on the destination object being targeted. required
                      if the object provides more than one port.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - number
                        - required:
                          - name
                    - required:
                      - number
                    - required:
                      - name
                    properties:
                      name:
                        description: the name of the port on the destination objects being
                          targeted.
                        type: string
                      number:
                        description: the number of the port on the destination objects
                          being targeted.
                        maximum: 65535
                        minimum: 1
                        type: integer
                    type: object
                  ref:
                    description: reference to a Kubernetes destination object by its metadata
                    properties:
                      cluster:
                        description: the cluster of the object. If omitted, Gloo Mesh
                          will use the same cluster as the parent object containing this
                          reference.
                        type: string
                      name:
                        description: the name of the object
                        type: string
                      namespace:
                        description: the namespace of the object. If omitted, Gloo Mesh
                          will use the same namespace as the parent object containing
                          this reference.
                        type: string
                    type: object
                  subset:
                    additionalProperties:
                      type: string
                    description: |-
                      select a subset of the destination's endpoints for routing based on their labels.
                      Only applicable for Kubernetes destinations.
                    type: object
                  weight:
                    description: |-
                      Specify the proportion of traffic to be forwarded to this destination.
                      Weights across all of the `destinations` must sum to 100.
                      Weight is only relevant when used in the context of a route with multiple destinations.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
              requestTimeout:
                description: |-
                  The timeout in milliseconds for the rate limit service RPC. Defaults to 100ms.
                  Behaviour after request timeout is reached is set by `deny_on_fail`.
                  For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#duration).
                type: string
            type: object
          status:
            description: |-
              <!--todo:(tjons) do we need to update this?-->
              The current status of the `RateLimitServerSettings`.
            properties:
              observedGeneration:
                description: |-
                  The most recent generation observed in the RateLimitServerSettings metadata.
                  If the `observedGeneration` does not match `metadata.generation`,
                  Gloo Mesh has not processed the most recent version of this resource.
                format: int64
                type: integer
              state:
                description: Whether the resource has been accepted as valid and processed
                  in the Gloo Mesh config translation.
                enum:
                - PENDING
                - ACCEPTED
                - INVALID
                - WARNING
                - FAILED
                - UNLICENSED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/admin.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: e3974a026a0f306c
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: roottrustpolicies.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: RootTrustPolicy
    listKind: RootTrustPolicyList
    plural: roottrustpolicies
    shortNames:
    - rtp
    singular: roottrustpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.State
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              applyToMeshes:
                description: |-
                  select the meshes where the root of trust will be applied.
                  If empty, will apply to all Meshes in the workspace.
                items:
                  description: MeshSelector is a Selector built for selecting instances
                    of Mesh control planes. A control plane is understood to have a single
                    domain and provide a single root of trust for the data plane proxies
                    it is managing. Each revision of Istiod maps
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - istio
                  - required:
                    - istio
                  properties:
                    istio:
                      description: options for selecting istio Mesh control planes.
                      properties:
                        clusterSelector:
                          additionalProperties:
                            type: string
                          description: |-
                            match the labels of the cluster where istiod is deployed.
                            omit to select across all clusters.
                          type: object
                        namespace:
                          description: |-
                            match the name of the namespace where istiod is deployed.
                            omit to select across all namespaces.
                          type: string
                        revision:
                          description: |-
                            istio.io/revision of Istio to select. regex supported.
                            omit to select across all revisions.
                          type: string
                        selector:
                          additionalProperties:
                            type: string
                          description: |-
                            select via the labels of the istiod deployment.
                            omit to select across all labels.
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the root of trust to apply to the selected
                  meshes.
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - mgmtServerCa
                    - required:
                      - agentCa
                - required:
                  - mgmtServerCa
                - required:
                  - agentCa
                properties:
                  agentCa:
                    description: |-
                      Configures an Intermediate Certificate Authority which selected meshes will use to generate intermediate certificates.
                      The CA being used must be configured to generate the intermediate certificates.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - vault
                    - required:
                      - vault
                    properties:
                      vault:
                        allOf:
                        - oneOf:
                          - not:
                              anyOf:
                              - required:
                                - caBundle
                              - required:
                                - caSecretRef
                              - required:
                                - caLocalPath
                          - required:
                            - caBundle
                          - required:
                            - caSecretRef
                          - required:
                            - caLocalPath
                        - oneOf:
                          - not:
                              anyOf:
                              - required:
                                - tokenSecretRef
                              - required:
                                - kubernetesAuth
                          - required:
                            - tokenSecretRef
                          - required:
                            - kubernetesAuth
                        description: Use vault as the intermediate CA source
                        properties:
                          caBundle:
                            description: Inline CA bytes
                            format: byte
                            type: string
                          caLocalPath:
                            description: Path to a local file containing the CA bytes
                            type: string
                          caPath:
                            description: |-
                              `ca_path` is the mount path of the Vault PKI backend's `sign` endpoint, e.g:
                              "my_pki_mount/sign/my-role-name".
                            type: string
                          caSecretRef:
                            description: |-
                              Reference to a secret containing the CA bytes.
                              The CA should be stored by the key `root-cert.pem`
                            properties:
                              name:
                                description: name of the resource being referenced
                                type: string
                              namespace:
                                description: namespace of the resource being referenced
                                type: string
                            type: object
                          csrPath:
                            description: |-
                              `csr_path` is the mount path of the Vault PKI backend's `generate` endpoint, e.g:
                              "my_pki_mount/intermediate/generate/exported".
                              "exported" is necessary here as istio needs access to the private key
                              See vault docs here: https://developer.hashicorp.com/vault/api-docs/secret/pki#parameters-4
                            type: string
                          kubernetesAuth:
                            description: |-
                              Kubernetes authenticates with Vault by passing the ServiceAccount
                              token stored in the named Secret resource to the Vault server.
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - serviceAccountRef
                                - required:
                                  - mountedSaPath
                            - required:
                              - serviceAccountRef
                            - required:
                              - mountedSaPath
                            properties:
                              mountPath:
                                description: |-
                                  The Vault mountPath here is the mount path to use when authenticating with
                                  Vault. For example, setting a value to `/v1/auth/foo`, will use the path
                                  `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
                                  default value "/v1/auth/kubernetes" will be used.
                                type: string
                              mountedSaPath:
                                description: |-
                                  File System path to grab the service account token from.
                                  Defaults to /var/run/secrets/kubernetes.io/serviceaccount
                                type: string
                              role:
                                description: |-
                                  A required field containing the Vault Role to assume. A Role binds a
                                  Kubernetes ServiceAccount with a set of Vault policies.
                                type: string
                              secretTokenKey:
                                description: |-
                                  Key to search for the sa_token
                                  Default to "token"
                                type: string
                              serviceAccountRef:
                                description: Reference to service account, other than
                                  the one mounted to the current pod.
                                properties:
                                  name:
                                    description: name of the resource being referenced
                                    type: string
                                  namespace:
                                    description: namespace of the resource being referenced
                                    type: string
                                type: object
                            type: object
                          namespace:
                            description: |-
                              Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1"
                              More about namespaces can be found [here](https://www.vaultproject.io/docs/enterprise/namespaces)
                            type: string
                          server:
                            description: 'Server is the connection address for the Vault
                              server, e.g: "https://vault.example.com:8200".'
                            type: string
                          tokenSecretRef:
                            description: TokenSecretRef authenticates with Vault by presenting
                              a token.
                            properties:
                              name:
                                description: name of the resource being referenced
                                type: string
                              namespace:
                                description: namespace of the resource being referenced
                                type: string
                            type: object
                        type: object
                    type: object
                  autoRestartPods:
                    description: |-
                      This setting specifies whether or not workload pods should be automatically restarted
                      upon completion of a successful certificate issuance.
                    type: boolean
                  intermediateCertOptions:
                    description: Configuration options for generated intermediate certs.
                    properties:
                      orgName:
                        description: The organization name of the certificate. Defaults
                          to "gloo-mesh".
                        type: string
                      rsaKeySizeBytes:
                        description: Size in bytes of the certificate's private key. Defaults
                          to 4096.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                      secretRotationGracePeriodRatio:
                        description: |-
                          The ratio of the certificate lifetime to when Gloo starts the certificate rotation process.
                          The ratio must be between 0 and 1 (exclusive). For example, if a certificate is valid for
                          1 day (or 24 hours), and you specify a ratio of 0.1, Gloo starts the certificate rotation
                          process 2.4 hours before it expires (24x0.1).
                        type: number
                      ttlDays:
                        description: Number of days before the certificate expires. Defaults
                          to 365.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                    type: object
                  mgmtServerCa:
                    description: |-
                      Configure a Root Certificate Authority which will be shared by all Meshes associated with this RootTrustPolicy.
                      If this is not provided, a self-signed certificate will be generated by Gloo Mesh.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - generated
                        - required:
                          - secretRef
                    - required:
                      - generated
                    - required:
                      - secretRef
                    properties:
                      generated:
                        description: |-
                          Generate a self-signed root certificate with the given options. By default, the root CA
                          is valid for 1 year.
                        properties:
                          orgName:
                            description: The organization name of the certificate. Defaults
                              to "gloo-mesh".
                            type: string
                          rsaKeySizeBytes:
                            description: Size in bytes of the certificate's private key.
                              Defaults to 4096.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          secretRotationGracePeriodRatio:
                            description: |-
                              The ratio of the certificate lifetime to when Gloo starts the certificate rotation process.
                              The ratio must be between 0 and 1 (exclusive). For example, if a certificate is valid for
                              1 day (or 24 hours), and you specify a ratio of 0.1, Gloo starts the certificate rotation
                              process 2.4 hours before it expires (24x0.1).
                            type: number
                          ttlDays:
                            description: Number of days before the certificate expires.
                              Defaults to 365.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                        type: object
                      secretRef:
                        description: |-
                          The name of a Kubernetes secret in the same namespace as the RootTrustPolicy that contains the
                          root certificate authority.
                          Provided certificates must conform to a specified format, [documented here]({{< link path="/setup/prod/certs/relay/" >}}).
                        properties:
                          name:
                            description: name of the resource being referenced
                            type: string
                          namespace:
                            description: namespace of the resource being referenced
                            type: string
                        type: object
                    type: object
                  passiveCertificateAuthorities:
                    description: |-
                      Configure a Root Certificate Authority which will be used for validating certificates, but not signing them.
                      This CA can be used to rotate out expiring root certificates.
                    items:
                      description: Specify parameters for configuring the root certificate
                        authority for a RootTrustPolicy.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - generated
                          - required:
                            - secretRef
                      - required:
                        - generated
                      - required:
                        - secretRef
                      properties:
                        generated:
                          description: |-
                            Generate a self-signed root certificate with the given options. By default, the root CA
                            is valid for 1 year.
                          properties:
                            orgName:
                              description: The organization name of the certificate. Defaults
                                to "gloo-mesh".
                              type: string
                            rsaKeySizeBytes:
                              description: Size in bytes of the certificate's private
                                key. Defaults to 4096.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                            secretRotationGracePeriodRatio:
                              description: |-
                                The ratio of the certificate lifetime to when Gloo starts the certificate rotation process.
                                The ratio must be between 0 and 1 (exclusive). For example, if a certificate is valid for
                                1 day (or 24 hours), and you specify a ratio of 0.1, Gloo starts the certificate rotation
                                process 2.4 hours before it expires (24x0.1).
                              type: number
                            ttlDays:
                              description: Number of days before the certificate expires.
                                Defaults to 365.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        secretRef:
                          description: |-
                            The name of a Kubernetes secret in the same namespace as the RootTrustPolicy that contains the
                            root certificate authority.
                            Provided certificates must conform to a specified format, [documented here]({{< link path="/setup/prod/certs/relay/" >}}).
                          properties:
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                      type: object
                    type: array
                type: object
            type: object
          status:
            description: |-
              <!--todo:(tjons) do we need to update this?-->
              The status of the policy after it is applied to your Gloo environment.
            properties:
              observedGeneration:
                description: |-
                  The most recent generation observed in the object's metadata.
                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh has not processed the most
                  recent version of this object.
                format: int64
                type: integer
              state:
                description: Whether the resource has been accepted as valid and processed
                  in the Gloo Mesh config translation.
                enum:
                - PENDING
                - ACCEPTED
                - INVALID
                - WARNING
                - FAILED
                - UNLICENSED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/admin.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: f25418b4caa1fdcd
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: waypointlifecyclemanagers.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: WaypointLifecycleManager
    listKind: WaypointLifecycleManagerList
    plural: waypointlifecyclemanagers
    singular: waypointlifecyclemanager
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2alpha1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              Manages the deployment of Ambient L7 policy proxy (waypoint proxy) the selected Kubernetes service accounts.
              A RouteTable in ambient mode creates a server-side proxy to handle L7 routing, and to apply policies.
              Outlier detection and failover policies in an ambient mesh create a client-side L7 proxy.
            properties:
              applyToServiceAccount:
                description: |-
                  The Kubernetes service account to that you want to apply the override settings to. Selects only the service accounts in the matching clusters.
                  If empty, the settings are applied to all service accounts in the workspace.
                items:
                  description: selects zero or more Kubernetes API resources by matching
                    on labels, name, namespace, cluster, and workspace.
                  properties:
                    cluster:
                      description: |-
                        Only select objects in the matching cluster. If omitted, Gloo selects
                        matching objects across all clusters available in the parent object's workspace.
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: labels matching those of the object
                      type: object
                    name:
                      description: |-
                        Only select objects with the matching name. If omitted, Gloo selects
                        matching objects with any name available in the parent object's workspace.
                      type: string
                    namespace:
                      description: |-
                        Only select objects in the matching namespace. If omitted, Gloo selects
                        matching objects across all namespaces available in the parent object's workspace.
                      type: string
                    workspace:
                      description: |-
                        Only select objects in the given workspace. If omitted, Gloo selects
                        matching objects across all workspaces available in the parent object's workspace.
                      type: string
                  type: object
                type: array
              deploymentSpec:
                description: |-
                  The deployment specification that you want to use to override the default L7 policy proxy deployment values.
                  The values that you specify are merged with the default deployment values.
                  For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                type: object
                x-kubernetes-preserve-unknown-fields: true
            type: object
          status:
            description: This field represents the status of the WaypointLifecycleManagerSpec.
            properties:
              common:
                description: The state and workspace conditions of the applied policy.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/admin.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 4e64062b421505f8
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: workspaces.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: Workspace
    listKind: WorkspaceList
    plural: workspaces
    shortNames:
    - ws
    singular: workspace
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              `Workspace` describes a logical grouping of Kubernetes namespaces within the clusters that are part of
              a virtual mesh. Workspace can be treated as a boundary for configuration and service discovery.
              The specification describes how to select namespaces or/and clusters for a given workspace.
    
              The workspace-wide settings such as `importFrom`, `exportTo` are configured in the `WorkspaceSettings`
              object. Refer to the `WorkspaceSettings` documentation for details.
    
              The following example creates the `web` workspace that selects all workload clusters and all namespaces
              within those clusters to be part of the workspace.
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: Workspace
              metadata:
                name: web
                namespace: gloo-mesh
              spec:
                workloadClusters:
                  - name: "*"
                    namespaces:
                    - name: "*"
              ```
    
              The following configuration creates the `web` workspace that selects the `web` namespace from all workload
              clusters that have the label of `region: us-east` to be part of the workspace. Refer to the `KubernetesCluster`
              documentation for examples on how to label your KubernetesCluster resource.
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: Workspace
              metadata:
                name: web
                namespace: gloo-mesh
              spec:
                workloadClusters:
                  - selector:
                      region: us-east
                    namespaces:
                      - name: web
              ```
    
              The following example creates the `policy` namespace that does NOT have any workload clusters.
              This workspace also has the `gloo.solo.io/global` label which other workspaces
              can use to import this workspace by label in their `WorkspaceSettings` resource.
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: Workspace
              metadata:
                name: policy
                namespace: gloo-mesh
                labels:
                  gloo.solo.io/global: 'true'
              ```
    
              The example below creates the `backend` workspace that select any namespace that starts with `ns1` in `cluster1`
              and any namespace that starts with `ns2` in `cluster2`. It has the `gloo.solo.io/exportToGateway` label,
              which other workspaces can use to import this workspace by label in their `WorkspaceSettings` resource.
              Refer to the `KubernetesCluster` documentation for examples on how to name your KubernetesCluster resource.
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: Workspace
              metadata:
                name: backend
                namespace: gloo-mesh
                labels:
                  gloo.solo.io/exportToGateway: tier1
                  team: backend
              spec:
                workloadClusters:
                  - name: cluster1
                    namespaces:
                      - name: ns1*
                  - name: cluster2
                    namespaces:
                      - name: ns2*
              ```
            properties:
              workloadClusters:
                description: |-
                  Optional: Select workload clusters and namespaces for the workload clusters that are part of the workspace.
                  When this is not specified, the workspace contains no workload clusters.
                items:
                  description: Select clusters and namespaces for a workspace
                  properties:
                    configEnabled:
                      description: |-
                        Optional: Read Gloo configuration from specific clusters and namespaces that are included
                        in a workspace. If you omit this field for any cluster in a workspace, it is set to `true`
                        by default, and Gloo configuration is read for all clusters and namespaces in that workspace.
                        If you explicitly set this field to either true or false on a specific cluster, you must also explicitly set
                        the field for every other cluster that is listed in that workspace. For example, if you have a workspace that spans
                        namespaces in three clusters, but you want to read Gloo configuration from the namespaces in only one of the
                        clusters, you must explicitly set `configEnabled: true` for the cluster to read from,
                        and explicitly set `configEnabled: false` for the other two clusters.
                      type: boolean
                    name:
                      description: |-
                        Optional: Name of the cluster to select.
                        Use * to match name patterns in multiple clusters name.
                      type: string
                    namespaces:
                      description: Select the namespaces in the cluster(s) to include
                        in the workspace. If you do not select any namespaces, the workspace
                        is empty and results in an error.
                      items:
                        description: Select namespaces for the selected cluster(s)
                        properties:
                          configEnabled:
                            description: |-
                              Optional: Read Gloo configuration from this namespace. If you omit this field for any other namespace
                              in the cluster, it is set to `true` by default, and Gloo configuration is read for all namespaces
                              in that cluster. If you explicitly set this field to either true or false for one namespace, you must
                              also explicitly set the field for every other namespace that is listed in the workspace for that cluster.
                              For example, if you have a cluster in your workspace that has three namespaces, but you want to read Gloo
                              configuration from only one of the namespaces in the cluster, you must explicitly set `configEnabled: true`
                              for the namespace to read from, and explicitly set `configEnabled: false` for the other two namespaces.
                            type: boolean
                          labels:
                            additionalProperties:
                              type: string
                            description: |-
                              Optional: Select groups of namespaces via labels.
                              Leaving this field empty will NOT select all namespaces, but rather be ignored.
                              Note: When this field is used in conjunction with "name", both conditions are ANDed together.
                            type: object
                          name:
                            description: |-
                              Name of the namespace to select.
                              Can use * to match name patterns in multiple namespaces.
                              Note: When this field is used in conjunction with "labels", both conditions are ANDed together.
                            type: string
                        type: object
                      type: array
                    selector:
                      additionalProperties:
                        type: string
                      description: |-
                        Optional: Include workload clusters in the workspace by using a selector.
                        The selector matches the selector values in the KubernetesCluster resource on the management cluster.
                        Selector is a map of {key,value} pairs. A single {key,value} in the selector
                        map is equivalent to an element of labelRequirements, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                type: array
            type: object
          status:
            properties:
              common:
                description: The state and workspace conditions of the applied policy.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              destinationCounts:
                additionalProperties:
                  maximum: 4294967295
                  minimum: 0
                  type: integer
                description: The number of destination resources in this workspace, sorted
                  by type (Kubernetes service, virtual destination, external service).
                type: object
              numImportedWorkspaces:
                description: The number of workspaces imported into this workspace.
                maximum: 4294967295
                minimum: 0
                type: integer
              numResources:
                additionalProperties:
                  properties:
                    exported:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    imported:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    private:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                description: The number of resources that the workspace imports and exports,
                  sorted by type (imported, exported, private).
                type: object
              numSelectedClusters:
                description: The number of selected Kubernetes clusters.
                maximum: 4294967295
                minimum: 0
                type: integer
              numSelectedNamespaces:
                description: The number of selected namespaces.
                maximum: 4294967295
                minimum: 0
                type: integer
              policyCounts:
                additionalProperties:
                  maximum: 4294967295
                  minimum: 0
                  type: integer
                description: The number of policy resources in this workspace, sorted
                  by type (security, trafficcontrol, resilience, observability).
                type: object
              workspaceSettings:
                description: The workspacesettings object configuring this workspace.
                properties:
                  cluster:
                    description: the cluster of the object. If omitted, Gloo Mesh will
                      use the same cluster as the parent object containing this reference.
                    type: string
                  name:
                    description: the name of the object
                    type: string
                  namespace:
                    description: the namespace of the object. If omitted, Gloo Mesh will
                      use the same namespace as the parent object containing this reference.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/admin.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 932c77f2ee226482
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: workspacesettings.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: WorkspaceSettings
    listKind: WorkspaceSettingsList
    plural: workspacesettings
    shortNames:
    - wss
    singular: workspacesettings
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              `WorkspaceSettings` define a set of workspace-wide parameters such as `importFrom` and `exportTo` for the workspace.
              These settings are commonly defined by the workspace admin. There are 3 key configurations related to `WorkspaceSettings`:
    
              - importFrom: To import resources from another workspace to your workspace, configure the
              `importFrom` field in the `WorkspaceSettings` resource for your workspace.
    
              - exportTo: To export resources in your workspace to other workspaces, configure the `exportTo`
              field in the `WorkspaceSettings` resource for your workspace.
    
              - options: Configure service isolation, federation, proxy trimming and other options for the workspace.
    
              You can specify your workspace's `importFrom` or `exportTo` or other workspace configuration options in your
              `WorkspaceSettings` resource for your workspace. Only one `WorkspaceSettings` resource can be defined for
              each workspace. The resource can be deployed to any of your workspace's namespaces in your workload cluster(s).
    
              Export:
              Only the resources below can be exported to other workspaces:
              - Kubernetes Service
              - VirtualDestination
              - ExternalService
              - RouteTable
              - ApiDoc
              - GraphQLResolverMap
              - GraphQLSchema
              - GraphQLStitchedSchema
    
              You can use the `exportTo` field in the `WorkspaceSettings` resource for the workspace to configure what resources
              are exported to which other workspaces. For example, the `web` application developer can export the RouteTable resource
              from the `web` workspace to an admin-owned gateway workspace.
    
              The following workspace example defines the `backend` workspace. The workspace settings example
              exports the `backend` workspace to any workspaces that matches the label `team: web`.
              In addition, all exported resources from the `backend` workspace are made available
              for any workspace that has the label `team: web` to import.
    
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: Workspace
              metadata:
                name: backend
                namespace: gloo-mesh
                labels:
                  team: backend
              spec:
                workloadClusters:
                  - namespaces:
                    - name: backend*
              ---
              apiVersion: admin.gloo.solo.io/v2
              kind: WorkspaceSettings
              metadata:
                name: default
                namespace: backend-namespace
              spec:
                exportTo:
                  - workspaces:
                    - selector:
                        team: web
              ```
    
              Import:
              To import exported resources from other workspaces, configure the `importFrom` field in
              the `WorkspaceSettings` resource for your workspace.
    
              For example, by importing the `web` workspace, the admin-owned gateway workspace can delegate routing for a subset
              of the gateway traffic to a RouteTable resource in the `web` workspace.
    
              The following workspace defines the `web` workspace. The workspace settings example imports
              the exported resources from the `backend` workspace into the `web` workspace. The exported resources from the
              `backend` workspace is available to the `web` workspace for imports because the `web` workspace
              has the `team:web` label.
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: Workspace
              metadata:
                name: web
                namespace: gloo-mesh
                labels:
                  team: web
              spec:
                workloadClusters:
                  - namespaces:
                    - name: web*
              ---
              apiVersion: admin.gloo.solo.io/v2
              kind: WorkspaceSettings
              metadata:
                name: default
                namespace: web-namespace
              spec:
                importFrom:
                  - workspaces:
                    - name: backend
              ```
    
              The following example imports any workspaces that are available for the `web` workspace to import and
              has the `team: backend` label into the `web` workspace. After this is deployed
              in the `web-namepsace` namespace of a given workload cluster that are part of the workspace,
              all exported resources from the `backend` workspaces which has the label `team: backend`
              are imported into the `web` workspace and available for use by anything in the `web` workspace.
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: WorkspaceSettings
              metadata:
                name: default
                namespace: web-namepsace
              spec:
                importFrom:
                  - workspaces:
                    - selector:
                        team: backend
              ```
    
              To create global workspace settings that apply to all namespaces in all clusters, you can create a
              WorkspaceSettings resource named `global` in the admin namespace, which is typically `gloo-mesh`.
              If you have multiple workspaces, you must still create one WorkspaceSettings resource per workspaces.
              However, global workspace settings override settings defined in individual workspaces.
            properties:
              exportTo:
                description: |-
                  A workspace can specify resources to export for use by other workspaces.
                  Currently the following types of objects can be exported across workspaces: Kubernetes services, virtual destinations, external destinations, route tables,
                  API schemas, and GraphQL resolver maps.
                  You can select workspace using labels, such as setting `exportTo.workspaces.selector` to `team: backend`.
                  Or select workspace name using exact name match, such as setting `exportTo.workspaces.name` to `backend`.
                  Or exportTo all other workspaces, such as setting `exportTo.workspaces.name` to `*`.
                  Or select workspace using labels and name using simple regex, such as setting `exportTo.workspaces.selector` to `team: backend` and `team: backend*`.
                  Or select workspace name using labels or select name using simple regex, such as setting `exportTo.workspaces.selector` to `team: backend` and `exportTo.workspaces.name` to `backend`.
                items:
                  description: Select a set of resources from a set of workspaces for
                    import or export.
                  properties:
                    resources:
                      description: the resources (and types of those resources) which
                        will be imported from or exported to the selected workspaces.
                      items:
                        description: selects objects of various types
                        properties:
                          cluster:
                            description: |-
                              Only select objects in the exactly matching cluster. If omitted, Gloo selects
                              matching objects across all clusters available in the workspace.
                            type: string
                          kind:
                            description: |-
                              The type of the resource to import or export.
                              The type must be a valid importable/exportable Kubernetes or Gloo Mesh resource type.
                              Supported types: `ROUTE_TABLE`, `SERVICE`, `VIRTUAL_DESTINATION`, `EXTERNAL_SERVICE`, `API_DOC`, `GRAPHQL_RESOLVER_MAP`, `GRAPHQL_SCHEMA`, `GRAPHQL_STITCHED_SCHEMA`, `EXTERNAL_WORKLOAD`, `ALL` (all types).
                            enum:
                            - ALL
                            - ROUTE_TABLE
                            - SERVICE
                            - VIRTUAL_DESTINATION
                            - EXTERNAL_SERVICE
                            - API_DOC
                            - GRAPHQL_RESOLVER_MAP
                            - GRAPHQL_SCHEMA
                            - GRAPHQL_STITCHED_SCHEMA
                            - EXTERNAL_WORKLOAD
                            type: string
                          labels:
                            additionalProperties:
                              type: string
                            description: labels matching those of the object
                            type: object
                          name:
                            description: |-
                              Only select objects exactly matching the name. If omitted, Gloo selects
                              matching objects with any name available in the workspace.
                            type: string
                          namespace:
                            description: |-
                              Only select objects exactly matching the namespace. If omitted, Gloo selects
                              matching objects across all namespaces available in the workspace.
                            type: string
                        type: object
                      type: array
                    workspaces:
                      description: the workspaces with the resources to export to or import.
                      items:
                        description: WorkspaceSelector is a selector for workspaces.
                        properties:
                          name:
                            description: |-
                              Optional: Name of the workspace to select.
                              Use * to match name patterns in multiple workspace names.
                            type: string
                          selector:
                            additionalProperties:
                              type: string
                            description: |-
                              Optional: Select workspaces based on their labels,
                              such as setting `selector` to `team: backend`.
                            type: object
                        type: object
                      type: array
                  type: object
                type: array
              importFrom:
                description: |-
                  Select the workspaces whose objects will be imported into this workspace.
                  Objects must both be exported by the workspace that is being imported and imported into this workspace in order to be shared across workspaces.
                  Imported objects allow the creation of routes and outbound-communication from one workspace to another.
                  Currently the following types of objects can be imported across workspaces: Kubernetes services, virtual destinations, external destinations, route tables,
                  API schemas, and GraphQL resolver maps.
                  You can select workspace using labels, such as setting `importFrom.workspaces.selector` to `team: backend`.
                  Or select workspace name using exact name match, such as setting `importFrom.workspaces.name` to `backend`.
                  Or select workspace using labels and name using simple regex, such as setting `importFrom.workspaces.selector` to `team: backend` and `importFrom.workspaces.name` to `backend*`.
                items:
                  description: Select a set of resources from a set of workspaces for
                    import or export.
                  properties:
                    resources:
                      description: the resources (and types of those resources) which
                        will be imported from or exported to the selected workspaces.
                      items:
                        description: selects objects of various types
                        properties:
                          cluster:
                            description: |-
                              Only select objects in the exactly matching cluster. If omitted, Gloo selects
                              matching objects across all clusters available in the workspace.
                            type: string
                          kind:
                            description: |-
                              The type of the resource to import or export.
                              The type must be a valid importable/exportable Kubernetes or Gloo Mesh resource type.
                              Supported types: `ROUTE_TABLE`, `SERVICE`, `VIRTUAL_DESTINATION`, `EXTERNAL_SERVICE`, `API_DOC`, `GRAPHQL_RESOLVER_MAP`, `GRAPHQL_SCHEMA`, `GRAPHQL_STITCHED_SCHEMA`, `EXTERNAL_WORKLOAD`, `ALL` (all types).
                            enum:
                            - ALL
                            - ROUTE_TABLE
                            - SERVICE
                            - VIRTUAL_DESTINATION
                            - EXTERNAL_SERVICE
                            - API_DOC
                            - GRAPHQL_RESOLVER_MAP
                            - GRAPHQL_SCHEMA
                            - GRAPHQL_STITCHED_SCHEMA
                            - EXTERNAL_WORKLOAD
                            type: string
                          labels:
                            additionalProperties:
                              type: string
                            description: labels matching those of the object
                            type: object
                          name:
                            description: |-
                              Only select objects exactly matching the name. If omitted, Gloo selects
                              matching objects with any name available in the workspace.
                            type: string
                          namespace:
                            description: |-
                              Only select objects exactly matching the namespace. If omitted, Gloo selects
                              matching objects across all namespaces available in the workspace.
                            type: string
                        type: object
                      type: array
                    workspaces:
                      description: the workspaces with the resources to export to or import.
                      items:
                        description: WorkspaceSelector is a selector for workspaces.
                        properties:
                          name:
                            description: |-
                              Optional: Name of the workspace to select.
                              Use * to match name patterns in multiple workspace names.
                            type: string
                          selector:
                            additionalProperties:
                              type: string
                            description: |-
                              Optional: Select workspaces based on their labels,
                              such as setting `selector` to `team: backend`.
                            type: object
                        type: object
                      type: array
                  type: object
                type: array
              options:
                description: Options for configuring the workspace as a whole.
                properties:
                  eastWestGateways:
                    description: |-
                      Selects the eastwest gateways in a workspace. These options are used to select which gateways
                      should be used to route East-West traffic. This traffic can be either passthrough TLS or terminated at the
                      EastWest Gateway. A different port is expected in each case. The `virtual_dest_client_mode` field provides additional
                      information related to this traffic.
                      If no gateways are selected, an attempt will be made to match any service with the label `"istio": "eastwestgateway"`
                      with ports named either "tls" or "https". The selection will fail with an error if the label exists but neither of the
                      ports are defined.
                    items:
                      properties:
                        hostInfoOverrides:
                          description: |-
                            Host information for an east-west gateway. Can be used to specify a set of routable
                            destinations that proxy traffic back to the east-west gateway selected
                            by the selector. Useful when a load balancer external to the mesh is being
                            used. When using this feature, be careful to ensure that the selectors are
                            granular enough to ensure that the correct HostInfo is mapped to the proper gateway.
                          items:
                            description: Specify Host Info to override discovered routing
                              information for an east-west gateway.
                            properties:
                              addr:
                                description: |-
                                  Address to be used to direct traffic to instead of the default gateway discovered address.
                                  Can be an IP address or hostname.
                                type: string
                              port:
                                description: Port to be used to direct traffic to instead
                                  of the default gateway discovered port.
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                              portType:
                                description: The type of the specified port. Default is
                                  SNI passthrough.
                                enum:
                                - SNI_PASSTHROUGH
                                - TLS_TERMINATION
                                type: string
                            type: object
                          type: array
                        port:
                          description: |-
                            Used to match tls port on gateway service.
                            Traffic on this port will be used for passthrough TLS, as described on the `virtual_dest_client_mode` field.
                            Default matches ports named "tls".
                            Matching is done by both the port name as well as the port number.
                            A match is required for either `port` or `tls_termination_port`, otherwise an error will be reported.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination objects
                                being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination objects
                                being targeted.
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                        selector:
                          description: |-
                            Evaluated against the discovered Istio gateway services.
                            When this field is blank, gateway services will be matched using the default labels described
                            on the `east_west_gateways` field.
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If omitted, Gloo selects
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If omitted, Gloo selects
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If omitted, Gloo selects
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If omitted, Gloo selects
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                        tlsTerminationPort:
                          description: |-
                            Used to match tls termination port on gateway service.
                            Traffic on this port will be used for TLS-terminated traffic, as described on the `virtual_dest_client_mode` field.
                            Default matches ports named "https".
                            Matching is done by both the port name as well as the port number.
                            A match is required for either `port` or `tls_termination_port`, otherwise an error will be reported.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination objects
                                being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination objects
                                being targeted.
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                      type: object
                    type: array
                  federation:
                    description: |-
                      Federation is a feature which allows Kubernetes Services to directly communicate with each other across clusters
                      using generated hostnames. When enabled, federation will generate a hostname for each Service selected, which is
                      reachable by all network clients in the workspace.
                      Federation allows routes to be created in RouteTables which forward traffic across clusters. These routes will otherwise
                      be treated by Gloo Mesh as errors.
                    properties:
                      enabled:
                        description: |-
                          Enables the federation feature for selected Kubernetes services in the workspace.
                          Default value is disabled.
                        type: boolean
                      hostSuffix:
                        description: 'Optional: The suffix used for generated hostnames.
                          Hostnames will be generated for each selected service in the
                          format `{{ service name }}.{{ service namespace
                          }}.{{ service cluster }}.{{ host suffix
                          }}`.'
                        type: string
                      ports:
                        description: if provided, expose only selected ports to cross-cluster
                          traffic.
                        items:
                          description: selects an individual port by number or name
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination objects
                                being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination objects
                                being targeted.
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                        type: array
                      serviceSelector:
                        description: |-
                          Selector for the K8s services that will be exposed to cross-cluster traffic within the Workspace.
                          Federated hostnames will be generated for selected imported services.
                        items:
                          description: selects zero or more Kubernetes API resources by
                            matching on labels, name, namespace, cluster, and workspace.
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If omitted, Gloo selects
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If omitted, Gloo selects
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If omitted, Gloo selects
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If omitted, Gloo selects
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                        type: array
                    type: object
                  serviceIsolation:
                    description: |-
                      If Enabled, serviceIsolation will automatically block communication from non-importing workspaces into this one, enforced using mTLS.
                      Applying AccessPolicies to destinations in this workspace will override the default service isolation behavior.
                    properties:
                      enabled:
                        description: |-
                          Automatically enables strict mTLS and blocks any access from non-importing workspaces into any destination in the current workspaces.
                          Default value is disabled.
                        type: boolean
                      enforcementLayers:
                        description: |-
                          Optional: When NetworkPolicy translation is enabled, by default, all available layers will be used to enforce Service Isolation.
                          You can optionally explicitly define which available layers will enforce Service Isolation. Only the layers set here will be used.
                        properties:
                          cni:
                            type: boolean
                          mesh:
                            type: boolean
                        type: object
                      trimProxyConfig:
                        description: |-
                          When enabled, trim the outbound config from the Istio sidecar proxies for any destination outside the workspace.
                          The sidecar proxies keep the configuration for all destinations in the workspace (including imported destinations).
                          To trim proxies for specific destinations with the workspace, you can use the `TrimProxyConfigPolicy` instead.
                          {{< reuse "conrefs/snippets/policies/trim-proxy-workloads-limit.md" >}}
                        nullable: true
                        type: boolean
                    type: object
                  trimAllProxyConfig:
                    description: |-
                      When enabled, trim the outbound config from the Istio sidecar proxies
                      of all destinations in the workspace (including imported destinations).
                      Without the outbound destination config, the Istio sidecar proxies cannot talk to other destinations in the workspace by default.
                      This way, you reduce the size of the proxy config to improve performance.
                      You can add destinations back into the sidecar proxy config
                      by enabling the `serviceIsolation.trimProxyConfig` field in the workspace settings or by using a `TrimProxyConfigPolicy`.
                      The preferred way is the `TrimProxyConfigPolicy`, which gives you more fine-grained control over the allowed destinations than the workspace-wide `serviceIsolation.trimProxyConfig` setting.
                      {{< reuse "conrefs/snippets/policies/trim-proxy-workloads-limit.md" >}}
                      For more information, see the
                      [Trim proxy config guide](https://docs.solo.io/gloo-mesh-enterprise/latest/resiliency/trim-proxy-config/workspace-service-isolation/).
                    type: boolean
                  virtualDestClientMode:
                    description: |-
                      Optional: Virtual destination client mode determines how VirtualDestinations will be translated.
                      If nil, the default value of auto mode will be used. Any configuration here can be overridden
                      on any individual virtual destination. The settings defined here apply to both user-provided
                      VirtualDestinations and those generated internally when federation is enabled.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - auto
                        - required:
                          - sniRouting
                        - required:
                          - tlsTermination
                    - required:
                      - auto
                    - required:
                      - sniRouting
                    - required:
                      - tlsTermination
                    properties:
                      auto:
                        description: |-
                          The default mode is to use sni routing via tls passthrough at the East/West Gateway to route to services across clusters.
                          In the future, this may change to become smarter (e.g., detect if any pods backing the virtual destination don't have sidecars,
                          if so, then use tls termination so all pods are routeable).
                          For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#empty).
                        maxProperties: 0
                        type: object
                      sniRouting:
                        description: |-
                          Sni routing mode uses tls passthrough to route traffic to the proper pod (with sidecar) from the East/West Gateway.
                          For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#empty).
                        maxProperties: 0
                        type: object
                      tlsTermination:
                        description: |-
                          Tls termination mode uses tls termination at the East/West Gateway to route traffic to the correct pod.
                          This mode is ideal for Gloo Mesh Gateway, i.e. some backing pods don't have sidecars.
                          Since TLS is terminated at the East/West Gateway, the backing service (if it has a sidecar) will not be able to
                          verify the istio mTLS identity of the originating client; rather it will verify the istio mTLS cert of the East/West Gateway.
                          For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#empty).
                        maxProperties: 0
                        type: object
                    type: object
                type: object
            type: object
          status:
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numFederatedServices:
                description: The number of services federated to this workspace, determined
                  by the workspace settings configuration.
                maximum: 4294967295
                minimum: 0
                type: integer
              numSelectedEastWestGateways:
                description: The number of selected east-west gateways determined by the
                  EastWestGatewaySelector.
                maximum: 4294967295
                minimum: 0
                type: integer
              workspace:
                description: The workspace that this workspacesettings object configures.
                properties:
                  cluster:
                    description: the cluster of the object. If omitted, Gloo Mesh will
                      use the same cluster as the parent object containing this reference.
                    type: string
                  name:
                    description: the name of the object
                    type: string
                  namespace:
                    description: the namespace of the object. If omitted, Gloo Mesh will
                      use the same namespace as the parent object containing this reference.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/apimanagement.gloo.solo.io_crds.yaml
# Code generated by skv2. DO NOT EDIT.
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: a0552858c04e69c6
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: apidocs.apimanagement.gloo.solo.io
spec:
  group: apimanagement.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ApiDoc
    listKind: ApiDocList
    plural: apidocs
    shortNames:
    - ad
    singular: apidoc
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: Specifications for the ApiDoc.
            oneOf:
            - not:
                anyOf:
                - required:
                  - openapi
                - required:
                  - grpc
                - required:
                  - graphql
            - required:
              - openapi
            - required:
              - grpc
            - required:
              - graphql
            properties:
              graphql:
                description: |-
                  <b>Unsupported</b>: The GraphQL integration is no longer supported.
    
                  The graphQL schema specification language. Specify only one schema type.
                properties:
                  schemaDefinition:
                    description: |-
                      Required: The GraphQL schema definition. Root-level query and mutation
                      types are supported, and you must define at least a query type.
                    type: string
                type: object
              grpc:
                description: The gRPC schema specification language. Specify only one
                  schema type.
                properties:
                  descriptors:
                    description: |-
                      Protobuf descriptors that represent the gRPC services provided by your API, encoded in base64.
                      For more information, see the
                      [protobuf reference for `FileDescriptorSet`](https://developers.google.com/protocol-buffers/docs/reference/java/com/google/protobuf/DescriptorProtos.FileDescriptorSet).
                    format: byte
                    type: string
                type: object
              openapi:
                description: The OpenAPI schema specification language. Specify only one
                  schema type.
                properties:
                  inlineString:
                    description: The inline, YAML- or JSON-formatted, OpenAPI v2 or v3
                      schema.
                    type: string
                type: object
              servedBy:
                description: The destinations that serve this API, if any.
                items:
                  description: The destinations that serve this API, if any.
                  properties:
                    destinationSelector:
                      description: |-
                        Specify the backing destination for your app, by label or by name.
                        This destination matches the destinations that you later route to.
                        Supported destinations are Kubernetes services, Gloo virtual destinations, and
                        Gloo external services.
                        This field is required when you manually create an ApiDoc for a service that
                        serves an OpenAPI or gRPC schema.
                      properties:
                        kind:
                          description: The kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            The port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination objects
                                being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination objects
                                being targeted.
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                        selector:
                          description: The selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If omitted, Gloo selects
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If omitted, Gloo selects
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If omitted, Gloo selects
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If omitted, Gloo selects
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
            type: object
          status:
            description: |-
              The status of the ApiDoc after it is applied to your Gloo environment.
    
              Gloo reports the status of Gloo custom resources in several places, such as in logs, when describing the object in `kubectl`, or when viewing the object in the Gloo UI.
              Unlike other Gloo custom resources, ApiDocs can be both an input and output object. For example, you can manually create an ApiDoc (input),
              or Gloo can automatically create an ApiDoc during discovery or translation processes (output).
              As such, status for ApiDocs is disabled. Because the status is disabled, you cannot review statuses for ApiDocs in `kubectl`.
              Also, you might notice ApiDocs reported as unhealthy in the Gloo UI even though the ApiDocs work.
              To verify that your ApiDocs are healthy, you can follow the steps in the [ApiDoc guide](https://docs.solo.io/gloo-mesh-gateway/latest/portal/guides/apis/apidocs/#verify).
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              ownerWorkspace:
                description: The name of workspace that owns the APIDoc.
                type: string
              selectedServingDestinations:
                description: Count of the destinations serving the API.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/apimanagement.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: b42a8c7f4dcf13fb
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: apischemadiscoveries.apimanagement.gloo.solo.io
spec:
  group: apimanagement.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ApiSchemaDiscovery
    listKind: ApiSchemaDiscoveryList
    plural: apischemadiscoveries
    shortNames:
    - apischemadiscovery
    singular: apischemadiscovery
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              <b>Example configuration file</b>:
              ```yaml
              apiVersion: apimanagement.gloo.solo.io/v2
              kind: ApiSchemaDiscovery
              metadata: {}
              spec:
                openapi:
                  fetchEndpoint:
                    url: "https://example.com/tracks-schema.json"
                    retryDelay: 10s
                    pullAttempts: 10
                servedBy:
                - destinationSelector:
                    kind: SERVICE
                    selector:
                      cluster: cluster-1
                      name: tracks-rest-api
                      namespace: tracks
              ```
            oneOf:
            - not:
                anyOf:
                - required:
                  - openapi
            - required:
              - openapi
            properties:
              openapi:
                description: The details for fetching the API schema.
                properties:
                  fetchEndpoint:
                    description: The URL endpoint to fetch the API schema manually. The
                      Gloo agent must be able to reach this endpoint.
                    properties:
                      pullAttempts:
                        description: |-
                          The number of attempts to fetch the schema. If omitted, the default is 3.
                          You can also configure this setting for all resources by configuring the Gloo Platform agent during installation or upgrading with the `--api-discovery-polling-pull-attempts` flag.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                      retryDelay:
                        description: |-
                          The retry delay when fetching the schema. If omitted, the default is 5s.
                          You can also configure this setting for all resources by configuring the Gloo Platform agent during installation or upgrading with the `--api-discovery-polling-retry-delay` flag.
                        type: string
                      url:
                        description: 'Required: The URL endpoint to fetch the API schema
                          from. Supported API schema paths are JSON or YAML files. For
                          `https`, make sure that the URL is included in the certificate
                          that validates the HTTPS traffic. Formatted as: `<protocol-scheme>://<host-domain>:<port>/<filepath>`'
                        type: string
                      useBackoff:
                        description: |-
                          Whether to use [exponential backoff](https://en.wikipedia.org/wiki/Exponential_backoff) when retrying to fetch the schema. If omitted, the default is true.
                          You can also configure this setting for all resources by configuring the Gloo Platform agent during installation or upgrading with the `--api-discovery-polling-use-backoff` flag.
                        type: boolean
                    type: object
                type: object
              servedBy:
                description: The destinations that serve the fetched API schema. The destinations
                  must be in the same cluster as the ApiSchemaDiscovery resource.
                items:
                  description: The destinations that serve this API, if any.
                  properties:
                    destinationSelector:
                      description: |-
                        Specify the backing destination for your app, by label or by name.
                        This destination matches the destinations that you later route to.
                        Supported destinations are Kubernetes services, Gloo virtual destinations, and
                        Gloo external services.
                        This field is required when you manually create an ApiDoc for a service that
                        serves an OpenAPI or gRPC schema.
                      properties:
                        kind:
                          description: The kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            The port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination objects
                                being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination objects
                                being targeted.
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                        selector:
                          description: The selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If omitted, Gloo selects
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If omitted, Gloo selects
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If omitted, Gloo selects
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If omitted, Gloo selects
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
            type: object
          status:
            description: |-
              ApiSchemaDiscoveryStatus shows the status of the ApiSchemaDiscovery.
              If the Gloo agent was not able to fetch the API schema, the status is reflected in `common`.
            properties:
              common:
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              ownerWorkspace:
                description: The name of workspace that owns the ApiSchemaDiscovery schema.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/apimanagement.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: f4940557f99568f7
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: graphqlresolvermaps.apimanagement.gloo.solo.io
spec:
  group: apimanagement.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: GraphQLResolverMap
    listKind: GraphQLResolverMapList
    plural: graphqlresolvermaps
    shortNames:
    - grm
    - gqlrm
    singular: graphqlresolvermap
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              The GraphQLResolverMap Resource contains a mapping from types to fields to
              resolutions. For example, for a schema with type `Query` and field `GetName`
              ```graphql
    
               type Query {
                 GetName: String
               }
              ```
              you can configure a resolver for the `GetName` field as follows:
              ```yaml
    
              types:
                Query:
                  fields:
                    GetName:
                      <insert resolver config>
              ```
            properties:
              extensions:
                description: Extensions that apply to the resolvers in this ResolverMap.
                properties:
                  grpcSchemaSelector:
                    description: |-
                      Selects API Schema objects that describe a gRPC service.
                      This is used only in gRPC resolvers that are defined in this resolver map.
                      The gRPC resolver uses the protobuf descriptor to create gRPC requests to the upstream gRPC service.
                      Any non-gRPC API Schema that is selected here will be ignored.
                      gRPC schemas will be checked for validity, as well as package/message conflicts at configuration time and will
                      fail loudly if not valid.
                    properties:
                      cluster:
                        description: |-
                          Only select objects in the matching cluster. If omitted, Gloo selects
                          matching objects across all clusters available in the parent object's workspace.
                        type: string
                      labels:
                        additionalProperties:
                          type: string
                        description: labels matching those of the object
                        type: object
                      name:
                        description: |-
                          Only select objects with the matching name. If omitted, Gloo selects
                          matching objects with any name available in the parent object's workspace.
                        type: string
                      namespace:
                        description: |-
                          Only select objects in the matching namespace. If omitted, Gloo selects
                          matching objects across all namespaces available in the parent object's workspace.
                        type: string
                      workspace:
                        description: |-
                          Only select objects in the given workspace. If omitted, Gloo selects
                          matching objects across all workspaces available in the parent object's workspace.
                        type: string
                    type: object
                type: object
              types:
                additionalProperties:
                  properties:
                    fields:
                      additionalProperties:
                        properties:
                          resolvers:
                            description: |-
                              List of resolvers.
                              Currently, only one the first resolver configuration will be respected and a warning will be thrown
                              if more than one resolver is in the list.
                            items:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - restResolver
                                  - required:
                                    - grpcResolver
                                  - required:
                                    - mockResolver
                              - required:
                                - restResolver
                              - required:
                                - grpcResolver
                              - required:
                                - mockResolver
                              properties:
                                grpcResolver:
                                  description: Resolves fields by making a gRPC call to
                                    a gRPC destination.
                                  properties:
                                    destinations:
                                      description: |-
                                        Required: list of destinations which point to destinations containing
                                        a gRPC service. Must provide at least one destination.
    
                                        (Note: only the first destination will be used)
                                      items:
                                        description: |-
                                          Destinations point to the upstream services that fulfill client requests on matching routes that you set up, such as in a route table. Each destination must resolve to one and only one hostname.
    
                                          Destinations can refer to a variety of resources. The behavior of the route action
                                          varies depending on the kind of destination.
    
                                          Currently supported destination types are:
                                          - Kubernetes `Service`, the default destination.
                                          - Gloo `VirtualDestination` to route traffic to one of the VirtualDestination's backing Kubernetes services.
                                          - Gloo `ExternalService` to route traffic to a static set of service endpoints that are external to your mesh setup.
                                          - Gloo `ExternalWorkload` to route traffic to external workloads that are part of your mesh.
                                          - Gloo `CloudProvider` to route traffic to a cloud provider function such as AWS Lambdas, selected by using the `functionCall` field.
    
                                          HTTP routes support all destinations. TCP routes support only Kubernetes `Service` and Gloo `VirtualDestination` destinations.
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - ref
                                            - required:
                                              - awsLambda
                                        - required:
                                          - ref
                                        - required:
                                          - awsLambda
                                        properties:
                                          awsLambda:
                                            description: Reference an AWS Lambda function.
                                            properties:
                                              cloudProvider:
                                                description: Reference to the AWS Cloud
                                                  Provider.
                                                properties:
                                                  cluster:
                                                    description: the cluster of the object.
                                                      If omitted, Gloo Mesh will use the
                                                      same cluster as the parent object
                                                      containing this reference.
                                                    type: string
                                                  name:
                                                    description: the name of the object
                                                    type: string
                                                  namespace:
                                                    description: the namespace of the
                                                      object. If omitted, Gloo Mesh will
                                                      use the same namespace as the parent
                                                      object containing this reference.
                                                    type: string
                                                type: object
                                              function:
                                                description: Name of the function to reference.
                                                type: string
                                              options:
                                                description: |-
                                                  Specify how the destinations should be configured, for configuring lambda functions.
                                                  If the destination config is required for the destination and not provided by the user, Gloo will invalidate the
                                                  destination and its parent resources.
                                                properties:
                                                  invocationStyle:
                                                    description: |-
                                                      Can be either Sync or Async. See [AWS Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html)
                                                      for more details.
                                                    enum:
                                                    - SYNC
                                                    - ASYNC
                                                    type: string
                                                  requestTransformation:
                                                    enum:
                                                    - REQUEST_DEFAULT
                                                    - REQUEST_DISABLE
                                                    type: string
                                                  responseTransformation:
                                                    enum:
                                                    - RESPONSE_DEFAULT
                                                    - RESPONSE_DISABLE
                                                    type: string
                                                type: object
                                              qualifier:
                                                description: Qualifier of the function
                                                  to reference. Defaults to $LATEST
                                                type: string
                                            type: object
                                          kind:
                                            description: |-
                                              the kind of Kubernetes destination being referenced. defaults to Service.
                                              Only applicable for Kubernetes destinations. For non Kubernetes destinations, this field is ignored.
                                            enum:
                                            - SERVICE
                                            - VIRTUAL_DESTINATION
                                            - EXTERNAL_SERVICE
                                            type: string
                                          port:
                                            description: the port on the destination object
                                              being targeted. required if the object provides
                                              more than one port.
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - number
                                                - required:
                                                  - name
                                            - required:
                                              - number
                                            - required:
                                              - name
                                            properties:
                                              name:
                                                description: the name of the port on the
                                                  destination objects being targeted.
                                                type: string
                                              number:
                                                description: the number of the port on
                                                  the destination objects being targeted.
                                                maximum: 65535
                                                minimum: 1
                                                type: integer
                                            type: object
                                          ref:
                                            description: reference to a Kubernetes destination
                                              object by its metadata
                                            properties:
                                              cluster:
                                                description: the cluster of the object.
                                                  If omitted, Gloo Mesh will use the same
                                                  cluster as the parent object containing
                                                  this reference.
                                                type: string
                                              name:
                                                description: the name of the object
                                                type: string
                                              namespace:
                                                description: the namespace of the object.
                                                  If omitted, Gloo Mesh will use the same
                                                  namespace as the parent object containing
                                                  this reference.
                                                type: string
                                            type: object
                                          subset:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              select a subset of the destination's endpoints for routing based on their labels.
                                              Only applicable for Kubernetes destinations.
                                            type: object
                                          weight:
                                            description: |-
                                              Specify the proportion of traffic to be forwarded to this destination.
                                              Weights across all of the `destinations` must sum to 100.
                                              Weight is only relevant when used in the context of a route with multiple destinations.
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                        type: object
                                      type: array
                                    request:
                                      properties:
                                        authority:
                                          description: |-
                                            The :authority header to set on the gRPC request.
                                            If empty, the outgoing :authority header will be set to "envoy".
                                            This does not need to be set in most cases.
                                          nullable: true
                                          type: string
                                        method:
                                          description: The gRPC method to call.
                                          type: string
                                        outgoingMessage:
                                          description: |-
                                            The gRPC request body.
                                            The request body is a JSON object that will be marshalled into the gRPC request.
                                            The request body can be templated using variables from the `variables` field.
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - variable
                                              - required:
                                                - jq
                                              - required:
                                                - json
                                          - required:
                                            - variable
                                          - required:
                                            - jq
                                          - required:
                                            - json
                                          properties:
                                            jq:
                                              description: |-
                                                The [jq](https://jqlang.github.io/jq/manual/) filter which is used to provide a value.
                                                variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                                                For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                                                Jq filters must only result in one value, or an error will be sent back to the client.
                                                For example, for the input `[1,2,3]`, the jq filter `'.[]'` is not a valid jq filter as it results
                                                in multiple jq results. However, the jq filter `'. &#124; join(",")'` is valid as it results in one result: `"1,2,3"`.
                                                Refer to the [jq manual](https://jqlang.github.io/jq/manual/) for jq syntax and tips.
                                              type: string
                                            json:
                                              description: |-
                                                Static JSON value.
                                                For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#value).
                                              x-kubernetes-preserve-unknown-fields: true
                                            variable:
                                              description: |-
                                                The name of a variable declared in the `variables` field. The value of the variable
                                                is returned with no transformation.
                                              type: string
                                          type: object
                                        requestMetadata:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            Static metadata to be added to the gRPC request.
                                            See https://grpc.io/docs/what-is-grpc/core-concepts/#metadata for more information.
                                          type: object
                                        service:
                                          description: The gRPC service to call.
                                          type: string
                                      type: object
                                    spanName:
                                      description: |-
                                        The span name for the upstream gRPC request, used for tracing.
                                        If empty or omitted, the request span name will be set to the upstream cluster name.
                                      nullable: true
                                      type: string
                                    timeout:
                                      description: |-
                                        Set the timeout of the HTTP request to the gRPC service (default 5s)
                                        For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#duration).
                                      type: string
                                  type: object
                                mockResolver:
                                  description: Resolves fields via a mocked response that
                                    is configured.
                                  oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - syncResponse
                                      - required:
                                        - asyncResponse
                                      - required:
                                        - errorResponse
                                  - required:
                                    - syncResponse
                                  - required:
                                    - asyncResponse
                                  - required:
                                    - errorResponse
                                  properties:
                                    asyncResponse:
                                      description: |-
                                        The response to return for this field.
                                        The response is a JSON object that can be templated from the `variables` field.
                                        This response is returned to the GraphQL execution engine after a delay.
                                      properties:
                                        delay:
                                          description: |-
                                            The delay before the response is returned.
                                            For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#duration).
                                          type: string
                                        response:
                                          description: |-
                                            The response to return.
                                            The response is a JSON object that can be templated from the `variables` field.
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - variable
                                              - required:
                                                - jq
                                              - required:
                                                - json
                                          - required:
                                            - variable
                                          - required:
                                            - jq
                                          - required:
                                            - json
                                          properties:
                                            jq:
                                              description: |-
                                                The [jq](https://jqlang.github.io/jq/manual/) filter which is used to provide a value.
                                                variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                                                For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                                                Jq filters must only result in one value, or an error will be sent back to the client.
                                                For example, for the input `[1,2,3]`, the jq filter `'.[]'` is not a valid jq filter as it results
                                                in multiple jq results. However, the jq filter `'. &#124; join(",")'` is valid as it results in one result: `"1,2,3"`.
                                                Refer to the [jq manual](https://jqlang.github.io/jq/manual/) for jq syntax and tips.
                                              type: string
                                            json:
                                              description: |-
                                                Static JSON value.
                                                For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#value).
                                              x-kubernetes-preserve-unknown-fields: true
                                            variable:
                                              description: |-
                                                The name of a variable declared in the `variables` field. The value of the variable
                                                is returned with no transformation.
                                              type: string
                                          type: object
                                      type: object
                                    errorResponse:
                                      description: An error response to return for this
                                        field.
                                      type: string
                                    syncResponse:
                                      description: |-
                                        The response to return for this field.
                                        The response is a JSON object that can be templated from the `variables` field.
                                        This response is immediately returned to the GraphQL execution engine.
                                      oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - variable
                                          - required:
                                            - jq
                                          - required:
                                            - json
                                      - required:
                                        - variable
                                      - required:
                                        - jq
                                      - required:
                                        - json
                                      properties:
                                        jq:
                                          description: |-
                                            The [jq](https://jqlang.github.io/jq/manual/) filter which is used to provide a value.
                                            variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                                            For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                                            Jq filters must only result in one value, or an error will be sent back to the client.
                                            For example, for the input `[1,2,3]`, the jq filter `'.[]'` is not a valid jq filter as it results
                                            in multiple jq results. However, the jq filter `'. &#124; join(",")'` is valid as it results in one result: `"1,2,3"`.
                                            Refer to the [jq manual](https://jqlang.github.io/jq/manual/) for jq syntax and tips.
                                          type: string
                                        json:
                                          description: |-
                                            Static JSON value.
                                            For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#value).
                                          x-kubernetes-preserve-unknown-fields: true
                                        variable:
                                          description: |-
                                            The name of a variable declared in the `variables` field. The value of the variable
                                            is returned with no transformation.
                                          type: string
                                      type: object
                                  type: object
                                resolverResultTransform:
                                  description: |-
                                    Use a transformation on extracted variables to transform the upstream REST response.
                                    By default, the transformation is empty and the destination response is left as is before
                                    being passed into the GraphQL execution engine.
                                  oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - variable
                                      - required:
                                        - jq
                                      - required:
                                        - json
                                  - required:
                                    - variable
                                  - required:
                                    - jq
                                  - required:
                                    - json
                                  properties:
                                    jq:
                                      description: |-
                                        The [jq](https://jqlang.github.io/jq/manual/) filter which is used to provide a value.
                                        variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                                        For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                                        Jq filters must only result in one value, or an error will be sent back to the client.
                                        For example, for the input `[1,2,3]`, the jq filter `'.[]'` is not a valid jq filter as it results
                                        in multiple jq results. However, the jq filter `'. &#124; join(",")'` is valid as it results in one result: `"1,2,3"`.
                                        Refer to the [jq manual](https://jqlang.github.io/jq/manual/) for jq syntax and tips.
                                      type: string
                                    json:
                                      description: |-
                                        Static JSON value.
                                        For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#value).
                                      x-kubernetes-preserve-unknown-fields: true
                                    variable:
                                      description: |-
                                        The name of a variable declared in the `variables` field. The value of the variable
                                        is returned with no transformation.
                                      type: string
                                  type: object
                                restResolver:
                                  description: Resolves values by making a HTTP/2 request
                                    to a HTTP/REST destination.
                                  properties:
                                    destinations:
                                      description: |-
                                        Required: list of destinations which point to destinations containing
                                        a RESTful service. Must provide at least one destination.
    
                                        (Note: only the first destination will be used)
                                      items:
                                        description: |-
                                          Destinations point to the upstream services that fulfill client requests on matching routes that you set up, such as in a route table. Each destination must resolve to one and only one hostname.
    
                                          Destinations can refer to a variety of resources. The behavior of the route action
                                          varies depending on the kind of destination.
    
                                          Currently supported destination types are:
                                          - Kubernetes `Service`, the default destination.
                                          - Gloo `VirtualDestination` to route traffic to one of the VirtualDestination's backing Kubernetes services.
                                          - Gloo `ExternalService` to route traffic to a static set of service endpoints that are external to your mesh setup.
                                          - Gloo `ExternalWorkload` to route traffic to external workloads that are part of your mesh.
                                          - Gloo `CloudProvider` to route traffic to a cloud provider function such as AWS Lambdas, selected by using the `functionCall` field.
    
                                          HTTP routes support all destinations. TCP routes support only Kubernetes `Service` and Gloo `VirtualDestination` destinations.
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - ref
                                            - required:
                                              - awsLambda
                                        - required:
                                          - ref
                                        - required:
                                          - awsLambda
                                        properties:
                                          awsLambda:
                                            description: Reference an AWS Lambda function.
                                            properties:
                                              cloudProvider:
                                                description: Reference to the AWS Cloud
                                                  Provider.
                                                properties:
                                                  cluster:
                                                    description: the cluster of the object.
                                                      If omitted, Gloo Mesh will use the
                                                      same cluster as the parent object
                                                      containing this reference.
                                                    type: string
                                                  name:
                                                    description: the name of the object
                                                    type: string
                                                  namespace:
                                                    description: the namespace of the
                                                      object. If omitted, Gloo Mesh will
                                                      use the same namespace as the parent
                                                      object containing this reference.
                                                    type: string
                                                type: object
                                              function:
                                                description: Name of the function to reference.
                                                type: string
                                              options:
                                                description: |-
                                                  Specify how the destinations should be configured, for configuring lambda functions.
                                                  If the destination config is required for the destination and not provided by the user, Gloo will invalidate the
                                                  destination and its parent resources.
                                                properties:
                                                  invocationStyle:
                                                    description: |-
                                                      Can be either Sync or Async. See [AWS Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html)
                                                      for more details.
                                                    enum:
                                                    - SYNC
                                                    - ASYNC
                                                    type: string
                                                  requestTransformation:
                                                    enum:
                                                    - REQUEST_DEFAULT
                                                    - REQUEST_DISABLE
                                                    type: string
                                                  responseTransformation:
                                                    enum:
                                                    - RESPONSE_DEFAULT
                                                    - RESPONSE_DISABLE
                                                    type: string
                                                type: object
                                              qualifier:
                                                description: Qualifier of the function
                                                  to reference. Defaults to $LATEST
                                                type: string
                                            type: object
                                          kind:
                                            description: |-
                                              the kind of Kubernetes destination being referenced. defaults to Service.
                                              Only applicable for Kubernetes destinations. For non Kubernetes destinations, this field is ignored.
                                            enum:
                                            - SERVICE
                                            - VIRTUAL_DESTINATION
                                            - EXTERNAL_SERVICE
                                            type: string
                                          port:
                                            description: the port on the destination object
                                              being targeted. required if the object provides
                                              more than one port.
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - number
                                                - required:
                                                  - name
                                            - required:
                                              - number
                                            - required:
                                              - name
                                            properties:
                                              name:
                                                description: the name of the port on the
                                                  destination objects being targeted.
                                                type: string
                                              number:
                                                description: the number of the port on
                                                  the destination objects being targeted.
                                                maximum: 65535
                                                minimum: 1
                                                type: integer
                                            type: object
                                          ref:
                                            description: reference to a Kubernetes destination
                                              object by its metadata
                                            properties:
                                              cluster:
                                                description: the cluster of the object.
                                                  If omitted, Gloo Mesh will use the same
                                                  cluster as the parent object containing
                                                  this reference.
                                                type: string
                                              name:
                                                description: the name of the object
                                                type: string
                                              namespace:
                                                description: the namespace of the object.
                                                  If omitted, Gloo Mesh will use the same
                                                  namespace as the parent object containing
                                                  this reference.
                                                type: string
                                            type: object
                                          subset:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              select a subset of the destination's endpoints for routing based on their labels.
                                              Only applicable for Kubernetes destinations.
                                            type: object
                                          weight:
                                            description: |-
                                              Specify the proportion of traffic to be forwarded to this destination.
                                              Weights across all of the `destinations` must sum to 100.
                                              Weight is only relevant when used in the context of a route with multiple destinations.
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                        type: object
                                      type: array
                                    request:
                                      description: |-
                                        Configuration to template a HTTP request to fetch JSON from a destination REST service.
                                        This includes configuration such as setting headers dynamically on the HTTP request, configuring query_params,
                                        and setting the body for the request to the destination.
                                      properties:
                                        body:
                                          description: |-
                                            Sets the outgoing body to the upstream REST destination.
                                            By default, the body is empty.
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - variable
                                              - required:
                                                - jq
                                              - required:
                                                - json
                                          - required:
                                            - variable
                                          - required:
                                            - jq
                                          - required:
                                            - json
                                          properties:
                                            jq:
                                              description: |-
                                                The [jq](https://jqlang.github.io/jq/manual/) filter which is used to provide a value.
                                                variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                                                For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                                                Jq filters must only result in one value, or an error will be sent back to the client.
                                                For example, for the input `[1,2,3]`, the jq filter `'.[]'` is not a valid jq filter as it results
                                                in multiple jq results. However, the jq filter `'. &#124; join(",")'` is valid as it results in one result: `"1,2,3"`.
                                                Refer to the [jq manual](https://jqlang.github.io/jq/manual/) for jq syntax and tips.
                                              type: string
                                            json:
                                              description: |-
                                                Static JSON value.
                                                For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#value).
                                              x-kubernetes-preserve-unknown-fields: true
                                            variable:
                                              description: |-
                                                The name of a variable declared in the `variables` field. The value of the variable
                                                is returned with no transformation.
                                              type: string
                                          type: object
                                        headers:
                                          additionalProperties:
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - variable
                                                - required:
                                                  - jq
                                                - required:
                                                  - json
                                            - required:
                                              - variable
                                            - required:
                                              - jq
                                            - required:
                                              - json
                                            properties:
                                              jq:
                                                description: |-
                                                  The [jq](https://jqlang.github.io/jq/manual/) filter which is used to provide a value.
                                                  variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                                                  For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                                                  Jq filters must only result in one value, or an error will be sent back to the client.
                                                  For example, for the input `[1,2,3]`, the jq filter `'.[]'` is not a valid jq filter as it results
                                                  in multiple jq results. However, the jq filter `'. &#124; join(",")'` is valid as it results in one result: `"1,2,3"`.
                                                  Refer to the [jq manual](https://jqlang.github.io/jq/manual/) for jq syntax and tips.
                                                type: string
                                              json:
                                                description: |-
                                                  Static JSON value.
                                                  For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#value).
                                                x-kubernetes-preserve-unknown-fields: true
                                              variable:
                                                description: |-
                                                  The name of a variable declared in the `variables` field. The value of the variable
                                                  is returned with no transformation.
                                                type: string
                                            type: object
                                          description: |-
                                            Sets the headers on the request to the REST destination.
                                            This includes setting HTTP :path header.
                                            This is a map of HTTP Header name to a transformation which determines the Header value.
                                            The transformation must result in a string value, or an error will be sent back to the client.
                                            By default, the :method header is set to GET. If `body` is set, then the :method is POST. This can be overridden
                                            by setting the :method header manually below.
                                          type: object
                                        queryParams:
                                          additionalProperties:
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - variable
                                                - required:
                                                  - jq
                                                - required:
                                                  - json
                                            - required:
                                              - variable
                                            - required:
                                              - jq
                                            - required:
                                              - json
                                            properties:
                                              jq:
                                                description: |-
                                                  The [jq](https://jqlang.github.io/jq/manual/) filter which is used to provide a value.
                                                  variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                                                  For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                                                  Jq filters must only result in one value, or an error will be sent back to the client.
                                                  For example, for the input `[1,2,3]`, the jq filter `'.[]'` is not a valid jq filter as it results
                                                  in multiple jq results. However, the jq filter `'. &#124; join(",")'` is valid as it results in one result: `"1,2,3"`.
                                                  Refer to the [jq manual](https://jqlang.github.io/jq/manual/) for jq syntax and tips.
                                                type: string
                                              json:
                                                description: |-
                                                  Static JSON value.
                                                  For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#value).
                                                x-kubernetes-preserve-unknown-fields: true
                                              variable:
                                                description: |-
                                                  The name of a variable declared in the `variables` field. The value of the variable
                                                  is returned with no transformation.
                                                type: string
                                            type: object
                                          description: |-
                                            Sets the query parameters on the request to the REST destination.
                                            The transformation must result in a string value, or an error will be sent back to the client.
                                          type: object
                                      type: object
                                    spanName:
                                      description: |-
                                        The span name for the upstream REST request, used for tracing.
                                        If empty or omitted, the request span name will be set to the upstream cluster name.
                                      nullable: true
                                      type: string
                                    timeout:
                                      description: |-
                                        Set the timeout of the HTTP request to the REST service (default 5s)
                                        For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#duration).
                                      type: string
                                    variables:
                                      additionalProperties:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - responseHeader
                                        - required:
                                          - responseHeader
                                        properties:
                                          responseHeader:
                                            description: |-
                                              Only available on resolver result transformations
                                              Extract the value from the GraphQL HTTP response header. The extracted value is a string.
                                              If this Extraction is used in a place where response headers are not available, an error
                                              will be thrown during configuration time.
                                            type: string
                                        type: object
                                      description: |-
                                        Variables that can be used in this field's response transform.
                                        The key is the name of the variable, which is directly used in the transformation.
                                        The value defines where the variable value is extracted from on the GraphQL REST response.
                                      type: object
                                  type: object
                              type: object
                            type: array
                          statPrefix:
                            description: |-
                              The stats prefix which will be used for this resolver.
                              If empty, will generate a stats prefix ${RESOLVER_NAME}
                            nullable: true
                            type: string
                          variables:
                            additionalProperties:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - requestHeader
                                  - required:
                                    - dynamicMetadata
                                  - required:
                                    - graphqlParent
                                  - required:
                                    - graphqlArg
                                  - required:
                                    - resolverResult
                                  - required:
                                    - json
                              - required:
                                - requestHeader
                              - required:
                                - dynamicMetadata
                              - required:
                                - graphqlParent
                              - required:
                                - graphqlArg
                              - required:
                                - resolverResult
                              - required:
                                - json
                              properties:
                                dynamicMetadata:
                                  description: Extract the value from envoy dynamic metadata.
                                    The extracted value is an object.
                                  properties:
                                    key:
                                      description: |-
                                        The key under the envoy dynamic metadata namespace that the data lives under.
                                        If the key doesn't exist in the namespace, the extraction yields null
                                      type: string
                                    metadataNamespace:
                                      description: |-
                                        The envoy dynamic metadata namespace that the data lives in. If the namespace doesn't exist in the
                                        metadata, the extraction yields null
                                      type: string
                                  type: object
                                graphqlArg:
                                  description: |-
                                    Assigns the variable to the GraphQL Argument with this name.
                                    If this name doesn't exist, the variable is `null`
                                  type: string
                                graphqlParent:
                                  description: |-
                                    Assigns the variable to the parent object
                                    For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#empty).
                                  maxProperties: 0
                                  type: object
                                json:
                                  description: |-
                                    Assigns the variable to a JSON value specified here
                                    For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#value).
                                  x-kubernetes-preserve-unknown-fields: true
                                requestHeader:
                                  description: |-
                                    Extract the value from the GraphQL HTTP request header. The extracted value is a string.
                                    If the header doesn't exist, an empty string will be used.
                                  type: string
                                resolverResult:
                                  description: |-
                                    Assigns the variable to the GraphQL resolver result.
                                    If this Extraction is used in a place where the resolver result is not available, an error
                                    will be thrown during configuration time.
                                    For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#empty).
                                  maxProperties: 0
                                  type: object
                              type: object
                            description: |-
                              Variables that can be used as a part of transformations for this field's resolution.
                              The key is the name of the variable, which is directly used in the transformation.
                              The value defines where the variable value is extracted from on the GraphQL request.
                            type: object
                        type: object
                      description: |-
                        Map of GraphQL fields for the type to resolutions.
                        The key must match the GraphQL field name and is case-sensitive.
                        Fields that don't have resolvers will use the GraphQL default resolver,
                        which returns the field in the parent object with the same name as the GraphQL field.
                      type: object
                  type: object
                description: |-
                  Map of GraphQL types to field resolutions.
                  The key must match the GraphQL type name and is case-sensitive.
                  Every field under GraphQL root types (Query, Mutation) must have a resolver defined.
                type: object
            type: object
          status:
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              ownedByWorkspace:
                description: The name of the workspace that owns the Graphql resolver
                  map.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/apimanagement.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 8cbcac401c42fe87
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: graphqlschemas.apimanagement.gloo.solo.io
spec:
  group: apimanagement.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: GraphQLSchema
    listKind: GraphQLSchemaList
    plural: graphqlschemas
    shortNames:
    - gqls
    singular: graphqlschema
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            oneOf:
            - not:
                anyOf:
                - required:
                  - proxied
                - required:
                  - resolved
            - required:
              - proxied
            - required:
              - resolved
            properties:
              proxied:
                description: |-
                  Configuration to delegate resolving this GraphQL request to an external GraphQL server, which can be
                  another GlooGraphQL instance or another instance of a GraphQL server. The external GraphQL server must
                  be compliant with the [June 2018 GraphQL specification](https://spec.graphql.org/June2018/).
                properties:
                  graphqlServers:
                    description: |-
                      List of destinations that can server GraphQL requests. The external GraphQL server must
                      be compliant with the [June 2018 GraphQL specification](https://spec.graphql.org/June2018).
                      Though this is a list, only the first referenced destination will be used until fail-over and load balancing
                      is supported between multiple GraphQL destinations.
                    items:
                      description: |-
                        Destinations point to the upstream services that fulfill client requests on matching routes that you set up, such as in a route table. Each destination must resolve to one and only one hostname.
    
                        Destinations can refer to a variety of resources. The behavior of the route action
                        varies depending on the kind of destination.
    
                        Currently supported destination types are:
                        - Kubernetes `Service`, the default destination.
                        - Gloo `VirtualDestination` to route traffic to one of the VirtualDestination's backing Kubernetes services.
                        - Gloo `ExternalService` to route traffic to a static set of service endpoints that are external to your mesh setup.
                        - Gloo `ExternalWorkload` to route traffic to external workloads that are part of your mesh.
                        - Gloo `CloudProvider` to route traffic to a cloud provider function such as AWS Lambdas, selected by using the `functionCall` field.
    
                        HTTP routes support all destinations. TCP routes support only Kubernetes `Service` and Gloo `VirtualDestination` destinations.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - ref
                          - required:
                            - awsLambda
                      - required:
                        - ref
                      - required:
                        - awsLambda
                      properties:
                        awsLambda:
                          description: Reference an AWS Lambda function.
                          properties:
                            cloudProvider:
                              description: Reference to the AWS Cloud Provider.
                              properties:
                                cluster:
                                  description: the cluster of the object. If omitted,
                                    Gloo Mesh will use the same cluster as the parent
                                    object containing this reference.
                                  type: string
                                name:
                                  description: the name of the object
                                  type: string
                                namespace:
                                  description: the namespace of the object. If omitted,
                                    Gloo Mesh will use the same namespace as the parent
                                    object containing this reference.
                                  type: string
                              type: object
                            function:
                              description: Name of the function to reference.
                              type: string
                            options:
                              description: |-
                                Specify how the destinations should be configured, for configuring lambda functions.
                                If the destination config is required for the destination and not provided by the user, Gloo will invalidate the
                                destination and its parent resources.
                              properties:
                                invocationStyle:
                                  description: |-
                                    Can be either Sync or Async. See [AWS Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html)
                                    for more details.
                                  enum:
                                  - SYNC
                                  - ASYNC
                                  type: string
                                requestTransformation:
                                  enum:
                                  - REQUEST_DEFAULT
                                  - REQUEST_DISABLE
                                  type: string
                                responseTransformation:
                                  enum:
                                  - RESPONSE_DEFAULT
                                  - RESPONSE_DISABLE
                                  type: string
                              type: object
                            qualifier:
                              description: Qualifier of the function to reference. Defaults
                                to $LATEST
                              type: string
                          type: object
                        kind:
                          description: |-
                            the kind of Kubernetes destination being referenced. defaults to Service.
                            Only applicable for Kubernetes destinations. For non Kubernetes destinations, this field is ignored.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: the port on the destination object being targeted.
                            required if the object provides more than one port.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination objects
                                being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination objects
                                being targeted.
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                        ref:
                          description: reference to a Kubernetes destination object by
                            its metadata
                          properties:
                            cluster:
                              description: the cluster of the object. If omitted, Gloo
                                Mesh will use the same cluster as the parent object containing
                                this reference.
                              type: string
                            name:
                              description: the name of the object
                              type: string
                            namespace:
                              description: the namespace of the object. If omitted, Gloo
                                Mesh will use the same namespace as the parent object
                                containing this reference.
                              type: string
                          type: object
                        subset:
                          additionalProperties:
                            type: string
                          description: |-
                            select a subset of the destination's endpoints for routing based on their labels.
                            Only applicable for Kubernetes destinations.
                          type: object
                        weight:
                          description: |-
                            Specify the proportion of traffic to be forwarded to this destination.
                            Weights across all of the `destinations` must sum to 100.
                            Weight is only relevant when used in the context of a route with multiple destinations.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    type: array
                  headers:
                    additionalProperties:
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - variable
                          - required:
                            - jq
                          - required:
                            - json
                      - required:
                        - variable
                      - required:
                        - jq
                      - required:
                        - json
                      properties:
                        jq:
                          description: |-
                            The [jq](https://jqlang.github.io/jq/manual/) filter which is used to provide a value.
                            variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                            For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                            Jq filters must only result in one value, or an error will be sent back to the client.
                            For example, for the input `[1,2,3]`, the jq filter `'.[]'` is not a valid jq filter as it results
                            in multiple jq results. However, the jq filter `'. &#124; join(",")'` is valid as it results in one result: `"1,2,3"`.
                            Refer to the [jq manual](https://jqlang.github.io/jq/manual/) for jq syntax and tips.
                          type: string
                        json:
                          description: |-
                            Static JSON value.
                            For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#value).
                          x-kubernetes-preserve-unknown-fields: true
                        variable:
                          description: |-
                            The name of a variable declared in the `variables` field. The value of the variable
                            is returned with no transformation.
                          type: string
                      type: object
                    description: |-
                      map of header name to a transformation on extracted variables which are declared
                      in the `variables` field.
                      The transformation must result in a string value, or an error will be sent back to the client.
                    type: object
                  options:
                    properties:
                      allowIntrospection:
                        description: |-
                          Enable introspection queries on the GraphQL API served by this GraphQLSchema resource.
                          Introspection queries are used by GraphQL developers to understand the schema of the GraphQL API and create
                          queries that are valid against the schema. This option allows for introspection queries to be sent to the
                          proxied GraphQL server. Introspection is disabled by default and introspection queries will be responded with errors
                          by the proxy. This should be disabled for production environments.
                        type: boolean
                    type: object
                  queryParams:
                    additionalProperties:
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - variable
                          - required:
                            - jq
                          - required:
                            - json
                      - required:
                        - variable
                      - required:
                        - jq
                      - required:
                        - json
                      properties:
                        jq:
                          description: |-
                            The [jq](https://jqlang.github.io/jq/manual/) filter which is used to provide a value.
                            variables defined in `variables` can be used in the jq filter via regular jq variable syntax.
                            For example, a variable named "userIdHeader" can be used in a jq filter as `$userIdHeader`
                            Jq filters must only result in one value, or an error will be sent back to the client.
                            For example, for the input `[1,2,3]`, the jq filter `'.[]'` is not a valid jq filter as it results
                            in multiple jq results. However, the jq filter `'. &#124; join(",")'` is valid as it results in one result: `"1,2,3"`.
                            Refer to the [jq manual](https://jqlang.github.io/jq/manual/) for jq syntax and tips.
                          type: string
                        json:
                          description: |-
                            Static JSON value.
                            For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#value).
                          x-kubernetes-preserve-unknown-fields: true
                        variable:
                          description: |-
                            The name of a variable declared in the `variables` field. The value of the variable
                            is returned with no transformation.
                          type: string
                      type: object
                    description: |-
                      map of query parameter name to a transformation on extracted variables which are declared
                      in the `variables` field.
                      The transformation must result in a string value, or an error will be sent back to the client.
                    type: object
                  spanName:
                    description: |-
                      The span name for the remote GraphQL request, used for tracing.
                      If empty or omitted, the request span name will be set to the upstream cluster name.
                    type: string
                  timeout:
                    description: |-
                      Set the timeout of the HTTP request to the REST service (default 5s)
                      For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#duration).
                    type: string
                  variables:
                    additionalProperties:
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - dynamicMetadata
                          - required:
                            - requestHeader
                          - required:
                            - json
                      - required:
                        - dynamicMetadata
                      - required:
                        - requestHeader
                      - required:
                        - json
                      properties:
                        dynamicMetadata:
                          description: Extract the value from envoy dynamic metadata.
                            The extracted value is an object.
                          properties:
                            key:
                              description: |-
                                The key under the envoy dynamic metadata namespace that the data lives under.
                                If the key doesn't exist in the namespace, the extraction yields null
                              type: string
                            metadataNamespace:
                              description: |-
                                The envoy dynamic metadata namespace that the data lives in. If the namespace doesn't exist in the
                                metadata, the extraction yields null
                              type: string
                          type: object
                        json:
                          description: |-
                            Assigns the variable to a JSON value specified here.
                            For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#value).
                          x-kubernetes-preserve-unknown-fields: true
                        requestHeader:
                          description: |-
                            Extract the value from the GraphQL HTTP request header. The extracted value is a string.
                            If the header doesn't exist, an empty string will be used.
                          type: string
                      type: object
                    description: |-
                      Declare variables that are used in variable transformations in the fields below for the GraphQL request to a remote server.
                      The keys to this map are the name of the variables. See the variable transformations specifically
                      for how to reference these variables.
                    type: object
                type: object
              resolved:
                description: |-
                  List of references to GraphQLResolverMap resources. GraphQLResolverMaps
                  contain a mapping from GraphQL fields to resolver configuration, so that those fields can be resolved
                  locally by this GraphQL-envoy instance.
                  Order of the references listed below does matter as resolver maps listed first
                  will be given priority over later ones when tie-breaking field resolver configurations.
                properties:
                  options:
                    properties:
                      enableIntrospection:
                        description: |-
                          Enable introspection queries on the GraphQL API served by this GraphQLSchema resource.
                          Introspection queries are used by GraphQL developers to understand the schema of the GraphQL API and create
                          queries that are valid against the schema. Introspection is disabled by default, and should be disabled for
                          production environments.
                        type: boolean
                      maxDepth:
                        description: |-
                          Max GraphQL operation (query/mutation/subscription) depth. This sets a limitation on the max nesting on a query that runs against this schema.
                          any GraphQL operation that runs past the `max_depth` will add an error message to the response and will return as `null`.
                          If not configured, or the value is 0, the query depth will be unbounded.
                          For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#u-int32-value).
                        maximum: 4294967295
                        minimum: 0
                        nullable: true
                        type: integer
                    type: object
                  resolverMapRefs:
                    description: |-
                      List of references to GraphQLResolverMap resources. GraphQLResolverMaps
                      contain a mapping from GraphQL fields to resolver configuration, so that those fields can be resolved
                      locally by this GraphQL-envoy instance.
                      Order of the references listed below does matter as resolver maps listed first
                      will be given priority over later ones when tie-breaking field resolver configurations.
                    items:
                      description: Resource reference for a cross-cluster-scoped object
                      properties:
                        clusterName:
                          description: name of the cluster in which the resource exists
                          type: string
                        name:
                          description: name of the resource being referenced
                          type: string
                        namespace:
                          description: namespace of the resource being referenced
                          type: string
                      type: object
                    type: array
                type: object
              schemaRef:
                description: |-
                  Required: Reference to the ApiSchema object which is of type GraphQL schema, which contains the [GraphQL SDL](https://graphql.org/learn/schema/)
                  defining this GraphQL schema.
                properties:
                  clusterName:
                    description: name of the cluster in which the resource exists
                    type: string
                  name:
                    description: name of the resource being referenced
                    type: string
                  namespace:
                    description: namespace of the resource being referenced
                    type: string
                type: object
            type: object
          status:
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              ownedByWorkspace:
                description: The name of the workspace that owns the GraphQL schema.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/apimanagement.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 853730077929f49c
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: graphqlstitchedschemas.apimanagement.gloo.solo.io
spec:
  group: apimanagement.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: GraphQLStitchedSchema
    listKind: GraphQLStitchedSchemaList
    plural: graphqlstitchedschemas
    shortNames:
    - gqlss
    - gss
    singular: graphqlstitchedschema
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              options:
                properties:
                  enableIntrospection:
                    description: |-
                      Enable introspection queries on this GraphQL Stitched API.
                      Introspection queries are used by GraphQL developers to understand the schema of the GraphQL API and create
                      queries that are valid against the schema. Introspection is disabled by default, and should be disabled for
                      production environments.
                    type: boolean
                type: object
              subschemas:
                description: List of GraphQL Subschemas that compose this GraphQL stitched
                  schema.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - schema
                      - required:
                        - stitchedSchema
                  - required:
                    - schema
                  - required:
                    - stitchedSchema
                  properties:
                    schema:
                      description: Reference to a GraphQLSchema resource that contains
                        the configuration for this subschema.
                      properties:
                        clusterName:
                          description: name of the cluster in which the resource exists
                          type: string
                        name:
                          description: name of the resource being referenced
                          type: string
                        namespace:
                          description: namespace of the resource being referenced
                          type: string
                      type: object
                    stitchedSchema:
                      description: Reference to a GraphQLStitchedSchema resource that
                        contains the configuration for this subschema.
                      properties:
                        clusterName:
                          description: name of the cluster in which the resource exists
                          type: string
                        name:
                          description: name of the resource being referenced
                          type: string
                        namespace:
                          description: namespace of the resource being referenced
                          type: string
                      type: object
                    typeMerge:
                      additionalProperties:
                        properties:
                          args:
                            additionalProperties:
                              type: string
                            description: The format to turn the initial object representation
                              into query arguments.
                            type: object
                          queryName:
                            description: specifies the root field from this subschema
                              used to request the local type
                            type: string
                          selectionSet:
                            description: |-
                              This specifies one or more key fields required from other services to perform this query.
                              Query planning will automatically resolve these fields from other subschemas in dependency order.
                              This is a graphql selection set specified as a string
                              e.g. '{ username }'
                            type: string
                        type: object
                      description: Type merge configuration for this subschema.
                      type: object
                  type: object
                type: array
            type: object
          status:
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              ownedByWorkspace:
                description: The name of the workspace that owns the GraphQL stitched
                  schema.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/apimanagement.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 8d40c8f3ff116d39
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: portals.apimanagement.gloo.solo.io
spec:
  group: apimanagement.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: Portal
    listKind: PortalList
    plural: portals
    shortNames:
    - portal
    singular: portal
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              The Portal resource configures a developer portal that you can use to securely expose your APIs to end users.
              Before you create the Portal, you bundle the APIs that you want to expose into a route table.
              Then, you prepare a usage plan to control access to your APIs
              by applying rate limiting and external auth policies to the routes in the route table.
              For more information, see the [Portal docs](https://docs.solo.io/gloo-mesh-gateway/latest/portal/).
    
              The following examples show a Portal resource that refers to usage plans
              that are named in the rate limit server config's descriptors, as well as a corresponding
              `RateLimitPolicy` and `ExternalAuthPolicy` that apply to a route in a route table.
    
              ```yaml
              apiVersion: apimanagement.gloo.solo.io/v2
              kind: Portal
                 metadata:
                   name: public-portal
                   namespace: gloo-mesh
              spec:
                 portalBackendSelectors:
                   - selector:
                       labels:
                         app: gloo-mesh-portal-server
                 usagePlans:
                   - name: bronze
                     displayName: "Bronze Plan"
                     description: "A basic usage plan"
                   - name: silver
                     description: "A better usage plan"
                   - name: gold
                     description: "The best usage plan!"
                 apis:
                   - name: productpage
                       namespace: bookinfo
                       cluster: cluster-1
                   - labels:
                         app: reviews
              ```
    
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: RateLimitServerConfig
                 metadata:
                   name: usage-plans
                   namespace: gloo-mesh
              spec:
                 destinationServers: [] # omitted, server refs
                 raw:
                   descriptors:
                     - key: usagePlan
                       value: bronze
                       descriptors:
                         - key: userId
                           rateLimit:
                             requestsPerUnit: 50
                             unit: MINUTE
                     - key: usagePlan
                       value: silver
                       descriptors:
                         - key: userId
                           rateLimit:
                             requestsPerUnit: 200
                             unit: MINUTE
                      - key: usagePlan
                        value: gold
                        descriptors:
                          - key: userId
                            rateLimit:
                              requestsPerUnit: 1000
                              unit: MINUTE
              ```
    
              ```yaml
              apiVersion: security.policy.gloo.solo.io/v2
              kind: ExtAuthPolicy
              metadata:
                name: petstore-apiauth
                namespace: petstore
              spec:
                applyToRoutes:
                  - route:
                      labels:
                         route: pets
                config:
                  server:
                    name: ext-auth-server
                    namespace: gloo-mesh
                    cluster: cluster-1
                  glooAuth:
                    configs:
                      - apiKeyAuth:
                          headersFromMetadata:
                            x-solo-plan:
                              name: plan
                              required: true
                          k8sSecretApikeyStorage:
                            labelSelector:
                              auth: api-key
              ```
    
              ```yaml
              apiVersion: trafficcontrol.policy.gloo.solo.io/v2
              kind: RateLimitPolicy
              metadata:
                name: pets-rate-limit
                namespace: petstore
              spec:
                applyToRoutes:
                  - route:
                      labels:
                         route: pets
                config:
                  ratelimitServerConfig:
                    name: usage-plans
                    namespace: gloo-mesh
                    cluster: cluster-1
                  raw:
                    rateLimits:
                      - actions:
                          - requestHeaders:
                              descriptorKey: usagePlan
                              headerName: x-solo-plan
                          - metadata:
                              descriptorKey: userId
                              metadataKey:
                                key: envoy.filters.http.ext_authz
                                path:
                                  - key: userId
              ```
            properties:
              apiProducts:
                description: A list of route metadata which select the ApiProducts you
                  want the developer portal to expose.
                items:
                  description: selects zero or more Kubernetes API resources by matching
                    on labels, name, namespace, cluster, and workspace.
                  properties:
                    cluster:
                      description: |-
                        Only select objects in the matching cluster. If omitted, Gloo selects
                        matching objects across all clusters available in the parent object's workspace.
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: labels matching those of the object
                      type: object
                    name:
                      description: |-
                        Only select objects with the matching name. If omitted, Gloo selects
                        matching objects with any name available in the parent object's workspace.
                      type: string
                    namespace:
                      description: |-
                        Only select objects in the matching namespace. If omitted, Gloo selects
                        matching objects across all namespaces available in the parent object's workspace.
                      type: string
                    workspace:
                      description: |-
                        Only select objects in the given workspace. If omitted, Gloo selects
                        matching objects across all workspaces available in the parent object's workspace.
                      type: string
                  type: object
                type: array
              apis:
                description: |-
                  A list of route tables with routes to the APIs you want the developer portal to expose.
                  The route table might also have 'portalMetadata' key-value fields that you want to display in the developer portal for end users.
                items:
                  description: selects zero or more Kubernetes API resources by matching
                    on labels, name, namespace, cluster, and workspace.
                  properties:
                    cluster:
                      description: |-
                        Only select objects in the matching cluster. If omitted, Gloo selects
                        matching objects across all clusters available in the parent object's workspace.
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: labels matching those of the object
                      type: object
                    name:
                      description: |-
                        Only select objects with the matching name. If omitted, Gloo selects
                        matching objects with any name available in the parent object's workspace.
                      type: string
                    namespace:
                      description: |-
                        Only select objects in the matching namespace. If omitted, Gloo selects
                        matching objects across all namespaces available in the parent object's workspace.
                      type: string
                    workspace:
                      description: |-
                        Only select objects in the given workspace. If omitted, Gloo selects
                        matching objects across all workspaces available in the parent object's workspace.
                      type: string
                  type: object
                type: array
              domains:
                description: |-
                  The domains on which this Portal will be served. The Host header received by the
                  Portal Web App will be matched to one of these domains in order to determine which Portal will be served.
    
                  If you are using the Gateway through which you are exposing the Portal
                  is listening on a port other than 80/443, you should include the port as part of the
                  domain string, e.g. "portal.solo.io:8443".
    
                  To prevent undefined behavior, creating a Portal whose domain conflicts with
                  an existing Portal will result in the Portal resource being placed into an 'Invalid' state.
                items:
                  type: string
                type: array
              portalBackendSelectors:
                description: The workloads where an existing portal backend is running.
                items:
                  description: |-
                    WorkloadSelector is a Selector specifically built for selecting individual workloads.
                    Workloads must have injected sidecar proxies or be standalone gateway proxies to be selected by Gloo Mesh policies.
    
                    This selector can be used to select Kubernetes workloads (KUBE) or sidecar-injected external endpoints (VM).
                  properties:
                    kind:
                      description: The kind of workload being selected. Defaults to Kube.
                      enum:
                      - KUBE
                      - VM
                      type: string
                    port:
                      description: |-
                        The port to select on the selected workloads.
                        Only applies to policies which select specific workload ports, such as the WasmDeploymentPolicy.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                    selector:
                      description: Selector used to match Workload objects by their metadata.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If omitted, Gloo selects
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If omitted, Gloo selects
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If omitted, Gloo selects
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If omitted, Gloo selects
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              usagePlans:
                description: The usage plans to control access to the APIs that the developer
                  portal exposes.
                items:
                  description: |-
                    A `UsagePlan` defined in the Portal resource is a reference to an existing `RateLimitPolicy` and `ExtAuthPolicy` that has been
                    applied to a route table.
                    The values of the descriptor key `usagePlan` in the `RateLimitServerConfig` used by an existing `RateLimitPolicy`
                    must match the `name` of the `UsagePlan` defined in the Portal resource, and will be used to determine which rate limiting
                    and ext auth options are available for this Portal.
                  properties:
                    description:
                      description: |-
                        Optional description for the usage plan to show end users in the developer portal.
                        You might include information about how to get the plan or what the plan includes and excludes.
                      type: string
                    displayName:
                      description: Optional display name for the usage plan to show end
                        users in the developer portal.
                      type: string
                    name:
                      description: Match the names of the usage plans with the descriptors
                        that you defined in the rate limit server config.
                      type: string
                  type: object
                type: array
              visibility:
                description: |-
                  Settings for controlling the visibility of the Portal's contents.
                  Default visibility for content in the Portal is private.
                  When a Portal is public, individual APIs can be made private, by specifying the labels for private APIs
                  and applying said labels to the route tables that need to be private.
                  When a Portal or its APIs are private, the Portal requires authentication. An external auth policy must be
                  applied to the Portal's route table in order to enable authentication. The external auth policy must use the
                  `idTokenHeader` field with the `id_token` to pass the user's ID token to the Portal.
                  For authentication to work, the `email` claim is required in the `id_token`.
                properties:
                  privateAPILabels:
                    additionalProperties:
                      type: string
                    description: |-
                      Custom labels for private APIs. Apply these labels to route tables that need to be private.
                      Has no effect if the public field is set to false in which case all APIs are private.
                    type: object
                  public:
                    description: |-
                      If true, all the APIs published in this portal are going to be public (i.e. visible to unauthenticated users);
                      individual APIs can still be made private using the privateAPILabels field.
                      Defaults to false, in which case the privateAPILabels field will have not effect.
                    type: boolean
                type: object
            type: object
          status:
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              extAuthPolicyCount:
                description: The number of ext-auth policies that this portal selects
                  with the usage plans that are defined in the portal resource.
                maximum: 4294967295
                minimum: 0
                type: integer
              ownerWorkspace:
                type: string
              portalBackendCount:
                description: The number of portal backends that are selected by this portal.
                maximum: 4294967295
                minimum: 0
                type: integer
              rateLimitPolicyCount:
                description: The number of rate limit policies that this portal selects
                  with the usage plans that are defined in the portal resource.
                maximum: 4294967295
                minimum: 0
                type: integer
              routeTablesCount:
                description: The number of route tables that are selected by this portal.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/apimanagement.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: a33ab197527ef6ce
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: portalgroups.apimanagement.gloo.solo.io
spec:
  group: apimanagement.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: PortalGroup
    listKind: PortalGroupList
    plural: portalgroups
    shortNames:
    - portalgroup
    singular: portalgroup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              A `PortalGroup` defines what APIs a group of users can view in the portal, and what usage plans they can manage API keys for.
    
              A `PortalGroup` consists of a set of permissions defined for the group defined in `AccessLevel`, and a set of claims that
              is used to determine whether a user belongs to this group.
    
              Below is an example of a `PortalGroup` that defines a group of users that can view the APIs (RouteTables) with the `customers-group: true` label,
              and manage API keys for the `bronze`, `silver`, and `gold` usage plans for said APIs.
              A user belongs to this group if they have the following claims in their JWT:
              ```json
              { "type": "customers", "region": "us-east-1" }
              ```
    
              ```yaml
              apiVersion: apimanagement.gloo.solo.io/v2
              kind: PortalGroup
              metadata:
                name: customers-group
                namespace: gloo-mesh
              labels:
                portal: sample-bank-portal
              spec:
                name: customers-group
                description: a group for users accessing the customers APIs
                membership:
                  - claims:
                      - key: type
                        value: customers
                      - key: region
                        value: us-east-1
                accessLevel:
                  apis:
                  - routeTable:
                      labels:
                        customers-group: true
                  usagePlans:
                  - name: bronze
                  - name: silver
                  - name: gold
              ```
            properties:
              accessLevel:
                description: Settings that control the list of APIs that this group can
                  view, and the usage plans that this group can manage API keys for.
                properties:
                  apis:
                    description: |-
                      The APIs that we want to allow this group to view in the portal. An API consists of all routes exposed by a route table,
                      so the apis field is a list of route table selectors.
                    items:
                      description: selects zero or more Kubernetes API resources by matching
                        on labels, name, namespace, cluster, and workspace.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If omitted, Gloo selects
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If omitted, Gloo selects
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If omitted, Gloo selects
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If omitted, Gloo selects
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                    type: array
                  usagePlans:
                    description: |-
                      The names of usage plans that we want to allow this group to manage API keys for. Note that if your usage plan is applied across
                      different route tables, granting the ability to manage API keys for a usage plan in a group will allow the created API keys
                      to also be used across all route tables that the usage plan applies to.
                    items:
                      type: string
                    type: array
                type: object
              description:
                description: The description of the group.
                type: string
              membership:
                description: |-
                  A list of `Membership` criteria that defines the claims that are used to determine whether a user belongs to this group.
                  A user is considered to be a member of this group if they have claims that match all the claims in any `Membership` criteria in this list.
                items:
                  description: |-
                    `Membership` contains a list of claims that is used to determine whether a user belongs to this group.
                    A user is considered to be a member of this group if their idToken has all the claims in this list.
                    For example, a user is considered to be a member of this group if they have defined the following list of membership criteria in their `PortalGroup`:
                    ```yaml
    
                    ...
                     membership:
                       - claims:
                           - key: type
                             value: customers
                           - key: region
                             value: us-east-1
                       - claims:
                           - key: type
                             value: customers
                           - key: region
                             value: us-west-1
                    ```
                    and the user has the following claims in their idToken:
                    ```json
                    { "type": "customers", "region": "us-east-1" } or { "type": "customers", "region": "us-west-1" }
                    ```
                    claims within a `Membership` criteria is an AND operation, and the list of `Membership` criteria is an OR operation.
                  properties:
                    claims:
                      description: |-
                        A list of claims that is used to determine whether a user belongs to this group.
                        A user is considered to be a member of this group if their idToken has claims that match all the claims in this list.
                      items:
                        description: A claim that can be used to define a group of users.
                        properties:
                          key:
                            description: The key of the claim. For example, `customers`
                              or `region`. This is the key that we will use to match against
                              the claims in the idToken.
                            type: string
                          value:
                            description: The value of the claim.
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              name:
                description: The name of the group.
                type: string
            type: object
          status:
            properties:
              common:
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              ownedByWorkspace:
                description: The name of the workspace that owns the PortalGroup schema.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/extauth.solo.io_v1_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: authconfigs.extauth.solo.io
spec:
  group: extauth.solo.io
  names:
    kind: AuthConfig
    listKind: AuthConfigList
    plural: authconfigs
    shortNames:
      - ac
    singular: authconfig
  scope: Namespaced
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: gloo-platform-crds/templates/extensions.policy.gloo.solo.io_crds.yaml
# Code generated by skv2. DO NOT EDIT.
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: f26269ae06ab258
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: wasmdeploymentpolicies.extensions.policy.gloo.solo.io
spec:
  group: extensions.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: WasmDeploymentPolicy
    listKind: WasmDeploymentPolicyList
    plural: wasmdeploymentpolicies
    shortNames:
    - wdp
    singular: wasmdeploymentpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: Specifications for the policy.
            properties:
              applyToWorkloads:
                description: |-
                  Select the workloads to apply the Wasm filter to.
                  If empty, the policy applies to all workloads in the workspace.
                items:
                  description: |-
                    WorkloadSelector is a Selector specifically built for selecting individual workloads.
                    Workloads must have injected sidecar proxies or be standalone gateway proxies to be selected by Gloo Mesh policies.
    
                    This selector can be used to select Kubernetes workloads (KUBE) or sidecar-injected external endpoints (VM).
                  properties:
                    kind:
                      description: The kind of workload being selected. Defaults to Kube.
                      enum:
                      - KUBE
                      - VM
                      type: string
                    port:
                      description: |-
                        The port to select on the selected workloads.
                        Only applies to policies which select specific workload ports, such as the WasmDeploymentPolicy.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                    selector:
                      description: Selector used to match Workload objects by their metadata.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If omitted, Gloo selects
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If omitted, Gloo selects
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If omitted, Gloo selects
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If omitted, Gloo selects
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: Details of the policy specifying the Wasm filters to apply
                  to the selected workloads.
                properties:
                  filters:
                    description: Wasm filter parameters.
                    items:
                      allOf:
                      - oneOf:
                        - not:
                            anyOf:
                            - required:
                              - localPathSource
                            - required:
                              - httpUriSource
                            - required:
                              - wasmImageSource
                        - required:
                          - localPathSource
                        - required:
                          - httpUriSource
                        - required:
                          - wasmImageSource
                      - oneOf:
                        - not:
                            anyOf:
                            - required:
                              - staticFilterConfig
                            - required:
                              - dynamicFilterConfig
                        - required:
                          - staticFilterConfig
                        - required:
                          - dynamicFilterConfig
                      description: Specify the Wasm filter to deploy.
                      properties:
                        dynamicFilterConfig:
                          description: |-
                            NOTE: **Not currently implemented.** This field serves as a placeholder.
                            Provide configuration from a dynamic configuration source.
                            This setting connects proxies to a configuration server to update filter
                            configuration instead of using a filter provided in the policy.
                            <ul><li>`google.protobuf.Struct` is serialized as JSON before it is passed to the plugin.</li>
                            <li>`google.protobuf.BytesValue` and `google.protobuf.StringValue` are passed directly without the wrapper.</li></ul>
    
                            <!--TODO(ilackarms): implement with dynamic filter config source (FCDS) https://github.com/envoyproxy/envoy/issues/7867-->
                          type: string
                        filterContext:
                          description: |-
                            The context that the filter is attached to:
                            <ul><li>Any workload context (`ANY`)</li>
                            <li>A gateway (`GATEWAY`)</li>
                            <li>Inbound traffic to a sidecar proxy (`SIDECAR_INBOUND`)</li>
                            <li>Outbound traffic from a sidecar (`SIDECAR_OUTBOUND`)</li></ul>
    
                            By default, the value is `ANY` to permit any context.
                          enum:
                          - ANY
                          - SIDECAR_INBOUND
                          - SIDECAR_OUTBOUND
                          - GATEWAY
                          type: string
                        httpUriSource:
                          description: |-
                            Select `http_uri_source` to deploy the filter from an HTTP/S URI accessible
                            to the workload proxy. Note that Gloo Mesh cannot verify
                            whether the target workload proxy containers have HTTP access the given URI.
                            If filters do not load, check the sidecar proxy logs.
                            <!--TODO(ilackarms): see if we can somehow verify the filter exists in the proxy container and surface that on the WasmDeployment status-->
                            <!--TODO(ilackarms): we may need to provide options for customizing the Cluster given to envoy along with the HTTP Fetch URI. currently Gloo Mesh will create a simple plaintext HTTP cluster from the Host/Port specified in the URI.-->
                          properties:
                            sha:
                              description: |-
                                Required: The sha256 checksum of the filter binary.
                                This value is verified by the proxy.
                              type: string
                            uri:
                              description: The HTTP URI from which to fetch the filter.
                              type: string
                          type: object
                        insertBeforeFilter:
                          description: |-
                            In the Envoy HTTP Filter Chain, the filter that the Wasm filter is inserted
                            immediately before. Note that not all filters might be applied to a
                            particular workload. Default value: `envoy.router`.
                          type: string
                        localPathSource:
                          description: |-
                            Select `local_path_source` to deploy the filter from a file accessible
                            to the workload proxy. Note that Gloo Mesh cannot verify
                            whether the target workload proxy containers contain the given path.
                            If filters do not load, check the sidecar proxy logs.
                            <!--TODO(ilackarms): see if we can somehow verify the filter exists in the proxy container and surface that on the WasmDeployment status-->
                          type: string
                        rootId:
                          description: |-
                            The `rootId` must match the `rootId` defined in the filter. If omitted,
                            Gloo Mesh pulls and sets the image from the `filter_conf` contained
                            in the image config. Note that if the `filter_source` is not set to
                            `wasm_image_source`, this field is required.
                          type: string
                        staticFilterConfig:
                          description: |-
                            Provide configuration as a static configuration source.
                            <ul><li>`google.protobuf.Struct` is serialized as JSON before it is passed to the plugin.</li>
                            <li>`google.protobuf.BytesValue` and `google.protobuf.StringValue` are passed directly without the wrapper.</li></ul>
    
                            For information about the value format, see the
                            [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#any).
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        vmId:
                          description: |-
                            Optional: A VM ID, used along with a hash of the Wasm code (or the name of the
                            registered Null VM plugin), to determine which VM loads the Wasm filter.
                            All filters on the same workload that use the same `vmId` and code within
                            use the same VM.
    
                            Note that sharing a VM between plugins can reduce memory
                            utilization and make sharing of data easier, which may have security implications.
                          type: string
                        wasmImageSource:
                          description: |-
                            Fetch the image from a WASM OCI Registry.
                            Images can be built and pushed to registries using `meshctl` and `wasme` CLI tool.
                          properties:
                            wasmImageTag:
                              description: |-
                                The full tag of the Wasm image. The tag must include the registry
                                address at the beginning, such as `webassemblyhub.io/ilackarms/helloworld:v0.1`.
                              type: string
                          type: object
                      type: object
                    type: array
                  weight:
                    description: |-
                      If you apply multiple Wasm filters to a single workload, add a `weight`
                      to specify the order in which the filters are applied.
                      Deployed Wasm filters are sorted in order of highest to lowest weight.
                      Wasm filters with equal weights are sorted non-deterministically.
                      Note that all Wasm filters are inserted immediately before the Envoy router filter
                      in the HTTP Connection Manager's HTTP Filter Chain.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
            type: object
          status:
            description: The status of the policy after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedWorkloads:
                description: The number of workloads selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/infrastructure.gloo.solo.io_crds.yaml
# Code generated by skv2. DO NOT EDIT.
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: d037fd3cff3c7046
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: cloudproviders.infrastructure.gloo.solo.io
spec:
  group: infrastructure.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: CloudProvider
    listKind: CloudProviderList
    plural: cloudproviders
    shortNames:
    - cp
    singular: cloudprovider
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              A CloudProvider is a representation of a cloud/infrastructure provider, and allows you to specify the configuration used to communicate
              with that cloud provider, as well as how to discover the set of backing functionality associated with that CloudProvider.
            oneOf:
            - not:
                anyOf:
                - required:
                  - aws
            - required:
              - aws
            properties:
              aws:
                description: AWS cloud provider configuration.
                properties:
                  accountId:
                    description: AWS account ID
                    type: string
                  lambda:
                    description: Lambda configuration
                    properties:
                      discovery:
                        description: Discovery of lambda functions
                        properties:
                          enabled:
                            description: Enable discovery of lambda functions.
                            type: boolean
                          filter:
                            description: Lambda function configuration specifies how lambda
                              functions will be discovered.
                            properties:
                              latestOnly:
                                description: |-
                                  select only Lambda functions with the $LATEST version, to reduce the amount of discovered functions. If disabled, the
                                  generated resources will contain all versions associated with the functions specified.
                                type: boolean
                              names:
                                description: filter by the names of the functions. Functions
                                  that do not match this selector will not be included.
                                  Regex supported.
                                items:
                                  type: string
                                type: array
                            type: object
                          roleName:
                            description: |-
                              Optional. The name of role to use for discovering CloudResources, associated with the account ID and region specified
                              on the CloudProvider. If set, this name will be used to override the value found in the $AWS_ROLE_ARN environment variable
                              on the mgmt-server pod.
                            type: string
                        type: object
                      invokeRoleName:
                        description: |-
                          Optional. The name of the IAM role to assume when calling the specified Cloud Function, associated with the account ID
                          and region specified on the CloudProvider. If omitted, the IAM role specified on the gateway is used,
                          unless referencing an imported CloudProvider. If importing a CloudProvider, you must specify this field. You can also
                          specify a default invokeRole in a RouteTable by using the 'gloo.solo.io/defaultInvokeRole' annotation.
                        type: string
                    type: object
                  region:
                    description: AWS region
                    type: string
                  stsEndpoint:
                    description: STS endpoint to reach out to for AWS credentials
                    type: string
                type: object
            type: object
          status:
            description: The status of the resource after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numAppliedRoutableFunctions:
                additionalProperties:
                  maximum: 4294967295
                  minimum: 0
                  type: integer
                description: |-
                  A map of CloudResources to the number of routable functions
                  provided by that CloudResource.
                type: object
              numChildCloudResources:
                description: The number of CloudResources that back this CloudProvider.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/infrastructure.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 4d8636be7ff0114a
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: cloudresources.infrastructure.gloo.solo.io
spec:
  group: infrastructure.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: CloudResources
    listKind: CloudResourcesList
    plural: cloudresources
    shortNames:
    - cr
    singular: cloudresources
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              CloudResources are units of functionality that back a referenced CloudProvider resource. These bits of functionality
              can be referenced in the route table to route to the corresponding backend service.
            oneOf:
            - not:
                anyOf:
                - required:
                  - aws
            - required:
              - aws
            properties:
              aws:
                description: AWSResources discovered resources from AWS
                properties:
                  lambda:
                    description: The list of lambda functions Gloo Mesh can route to for
                      the AWS provider.
                    items:
                      description: 'Each Lambda Function contains data necessary for Gloo
                        Mesh to invoke those functions:'
                      properties:
                        lambdaFunctionName:
                          description: The Name of the Lambda Function as it appears in
                            the AWS Lambda Portal
                          type: string
                        qualifier:
                          description: |-
                            The Qualifier for the Lambda Function. Qualifiers act as a kind of version
                            for Lambda Functions. See https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html for more info.
                          type: string
                      type: object
                    type: array
                type: object
              provider:
                description: |-
                  The name of the cloud provider that this configuration references. Must live in the same namespace as the
                  CloudResources.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: gloo-platform-crds/templates/install.istio.io_v1alpha1_crds.yaml
# We have logic here to detect when we need to install this CRD so its optional in case it was already installed by a manual Istio installation
# Manual override is in place for users using terraform until this is complete https://github.com/helm/helm/pull/9426 # crd not installed, install it
# SYNC WITH manifests/charts/base/files
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: istiooperators.install.istio.io
  labels:
    release: istio
spec:
  conversion:
    strategy: None
  group: install.istio.io
  names:
    kind: IstioOperator
    listKind: IstioOperatorList
    plural: istiooperators
    singular: istiooperator
    shortNames:
    - iop
    - io
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Istio control plane revision
      jsonPath: .spec.revision
      name: Revision
      type: string
    - description: IOP current state
      jsonPath: .status.status
      name: Status
      type: string
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
---
# Source: gloo-platform-crds/templates/internal.gloo.solo.io_crds.yaml
# Code generated by skv2. DO NOT EDIT.


apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 3ecc2e8b8236e3d6
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: certificaterequests.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: CertificateRequest
    listKind: CertificateRequestList
    plural: certificaterequests
    shortNames:
    - cr
    singular: certificaterequest
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              CertificateRequests are generated by the Gloo Mesh agent installed on workload clusters.
              They are used to request a signed certificate from the certificate issuer (the Gloo Mesh server) based on a private key
              generated by the agent (which never leaves the workload cluster).
    
              When Gloo Mesh server creates an IssuedCertificate on a workload cluster, the local Gloo Mesh agent
              will generate a CertificateRequest corresponding to it.
    
              Gloo Mesh will then process the certificate signing request contained in the
              `CertificateRequestSpec` and write the signed SSL certificate back as a Kubernetes secret in the workload cluster,
              and update the `CertificateRequestStatus` to point to that secret.
    
              The certificate requested here is for Gloo Mesh agents on workload clusters to securely establish communication
              with Gloo Mesh server. This is not related to certificates for services running in the mesh.
            properties:
              certificateSigningRequest:
                description: |-
                  Base64-encoded data for the PKCS#10 Certificate Signing Request issued
                  by the Gloo Mesh agent deployed in the workload cluster, corresponding
                  to the IssuedRequest received by the Gloo Mesh agent.
                format: byte
                type: string
            type: object
          status:
            properties:
              certChain:
                description: The cert chain of signing CA.
                format: byte
                type: string
              error:
                description: |-
                  Any error observed which prevented the CertificateRequest from being processed.
                  If the error is empty, the request has been processed successfully
                type: string
              observedGeneration:
                description: |-
                  The most recent generation observed in the CertificateRequest metadata.
                  If the `observedGeneration` does not match `metadata.generation`, the issuer has not processed the most
                  recent version of this request.
                format: int64
                type: integer
              signedCertificate:
                description: The signed intermediate certificate issued by the CA.
                format: byte
                type: string
              signingRootCa:
                description: The root CA used by the issuer to sign the certificate.
                format: byte
                type: string
              state:
                description: The current state of the CertificateRequest workflow reported
                  by the issuer.
                enum:
                - PENDING
                - FINISHED
                - FAILED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/internal.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 7654db8163625027
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: clusteristioinstallations.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ClusterIstioInstallation
    listKind: ClusterIstioInstallationList
    plural: clusteristioinstallations
    shortNames:
    - cii
    singular: clusteristioinstallation
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              helmGlobal:
                description: Optional global configuration applicable to all installations
                properties:
                  repo:
                    description: |-
                      The base URL to the Helm repository that stores the Istio charts.
                      Currently, only OCI registries are supported. Because of that, the base URL must begin with `oci://`.
                      This base URL is used to construct the URLs for specific charts. For example, if you specify `oci://gcr.io/istio/charts` as the base URL, it is used to construct the URL to a specific chart, such as `oci://gcr.io/istio/charts/istiod`.
    
                      If no base URL is specified, the IstioLifecycleManager attempts to pull the Istio charts from a set of known repositories,
                      including the official Istio upstream repository (`oci://gcr.io/istio-release/charts`).
                    type: string
                  repoSecrets:
                    description: |-
                      Optional. If present, the Gloo agent uses the credentials in the given secrets to log in to the OCI
                      registry to access Istio charts.
                      Similar to ImagePullSecrets, the secrets that you specify in this section must be of type `kubernetes.io/dockerconfigjson` and
                      must exist on all the clusters where you want the Gloo agent to install Istio.
                    items:
                      description: |-
                        ObjectReference contains enough information to let you inspect or modify the referred object.
                        ---
                        New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                         1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                         2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                            restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                            Those cannot be well described when embedded.
                         3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                         4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                            during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                            and the version of the actual struct is irrelevant.
                         5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                            will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.
                        Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                        For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                        +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
                        +structType=atomic
                      properties:
                        apiVersion:
                          description: |-
                            API version of the referent.
                            +optional
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                            TODO: this design is not final and this field is subject to change in the future.
                            +optional
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                            +optional
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            +optional
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            +optional
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                            +optional
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                            +optional
                          type: string
                      type: object
                    type: array
                  repoSkipTlsVerify:
                    description: |-
                      Optional. If true, skip TLS verification when pulling Helm charts from a given OCI repository.
                      Use this setting for testing, quick demos, and exploration purposes only. In production setup, make sure that each
                      node is configured to trust the certificate that is presented by the chart OCI registry.
                    type: boolean
                type: object
              istioOperatorSpec:
                description: |-
                  IstioOperator specification for the control plane.
                  For more info, see the [Istio documentation](https://istio.io/latest/docs/reference/config/istio.operator.v1alpha1/).
                properties:
                  addonComponents:
                    additionalProperties:
                      properties:
                        chartPath:
                          description: Chart path for addon components.
                          type: string
                        enabled:
                          description: Selects whether this component is installed.
                          nullable: true
                          type: boolean
                        k8s:
                          description: Kubernetes resource spec.
                          properties:
                            affinity:
                              description: |-
                                k8s affinity.
                                [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            env:
                              description: |-
                                Deployment environment variables.
                                [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                              items:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              type: array
                            hpaSpec:
                              description: |-
                                k8s HorizontalPodAutoscaler settings.
                                [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            imagePullPolicy:
                              description: |-
                                k8s imagePullPolicy.
                                [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                              type: string
                            nodeSelector:
                              additionalProperties:
                                type: string
                              description: |-
                                k8s nodeSelector.
                                [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                              type: object
                            overlays:
                              description: Overlays for k8s resources in rendered manifests.
                              items:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              type: array
                            podAnnotations:
                              additionalProperties:
                                type: string
                              description: |-
                                k8s pod annotations.
                                [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                              type: object
                            podDisruptionBudget:
                              description: |-
                                k8s PodDisruptionBudget settings.
                                [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            priorityClassName:
                              description: |-
                                k8s priority_class_name. Default for all resources unless overridden.
                                [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                              type: string
                            readinessProbe:
                              description: |-
                                k8s readinessProbe settings.
                                [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                k8s.io.api.core.v1.Probe readiness_probe = 9;
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            replicaCount:
                              description: |-
                                k8s Deployment replicas setting.
                                [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                            resources:
                              description: |-
                                k8s resources settings.
                                [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            securityContext:
                              description: |-
                                k8s pod security context
                                [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            service:
                              description: |-
                                k8s Service settings.
                                [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            serviceAnnotations:
                              additionalProperties:
                                type: string
                              description: |-
                                k8s service annotations.
                                [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                              type: object
                            strategy:
                              description: |-
                                k8s deployment strategy.
                                [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            tolerations:
                              description: |-
                                k8s toleration
                                [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                              items:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              type: array
                            volumeMounts:
                              description: |-
                                k8s volumeMounts
                                VolumeMounts defines the collection of VolumeMount to inject into containers.
                              items:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              type: array
                            volumes:
                              description: |-
                                k8s volume
                                [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                Volumes defines the collection of Volume to inject into the pod.
                              items:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              type: array
                          type: object
                        namespace:
                          description: Namespace for the component.
                          type: string
                        schema:
                          description: |-
                            Optional schema to validate spec against.
                            For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#any).
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        spec:
                          description: |-
                            Arbitrary install time configuration for the component.
                            For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                    description: |-
                      Deprecated.
                      Users should manage the installation of addon components on their own.
                      Refer to samples/addons for demo installation of addon components.
                    type: object
                  components:
                    description: |-
                      Kubernetes resource settings, enablement and component-specific settings that are not internal to the
                      component.
                    properties:
                      base:
                        properties:
                          enabled:
                            description: Selects whether this component is installed.
                            nullable: true
                            type: boolean
                          k8s:
                            description: Kubernetes resource spec.
                            properties:
                              affinity:
                                description: |-
                                  k8s affinity.
                                  [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              env:
                                description: |-
                                  Deployment environment variables.
                                  [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              hpaSpec:
                                description: |-
                                  k8s HorizontalPodAutoscaler settings.
                                  [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              imagePullPolicy:
                                description: |-
                                  k8s imagePullPolicy.
                                  [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                type: string
                              nodeSelector:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s nodeSelector.
                                  [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                type: object
                              overlays:
                                description: Overlays for k8s resources in rendered manifests.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              podAnnotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s pod annotations.
                                  [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                type: object
                              podDisruptionBudget:
                                description: |-
                                  k8s PodDisruptionBudget settings.
                                  [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              priorityClassName:
                                description: |-
                                  k8s priority_class_name. Default for all resources unless overridden.
                                  [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                type: string
                              readinessProbe:
                                description: |-
                                  k8s readinessProbe settings.
                                  [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                  k8s.io.api.core.v1.Probe readiness_probe = 9;
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              replicaCount:
                                description: |-
                                  k8s Deployment replicas setting.
                                  [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                              resources:
                                description: |-
                                  k8s resources settings.
                                  [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              securityContext:
                                description: |-
                                  k8s pod security context
                                  [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              service:
                                description: |-
                                  k8s Service settings.
                                  [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              serviceAnnotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s service annotations.
                                  [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                type: object
                              strategy:
                                description: |-
                                  k8s deployment strategy.
                                  [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              tolerations:
                                description: |-
                                  k8s toleration
                                  [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumeMounts:
                                description: |-
                                  k8s volumeMounts
                                  VolumeMounts defines the collection of VolumeMount to inject into containers.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumes:
                                description: |-
                                  k8s volume
                                  [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                  Volumes defines the collection of Volume to inject into the pod.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                            type: object
                        type: object
                      cni:
                        properties:
                          enabled:
                            description: Selects whether this component is installed.
                            nullable: true
                            type: boolean
                          hub:
                            description: Hub for the component (overrides top level hub
                              setting).
                            type: string
                          k8s:
                            description: Kubernetes resource spec.
                            properties:
                              affinity:
                                description: |-
                                  k8s affinity.
                                  [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              env:
                                description: |-
                                  Deployment environment variables.
                                  [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              hpaSpec:
                                description: |-
                                  k8s HorizontalPodAutoscaler settings.
                                  [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              imagePullPolicy:
                                description: |-
                                  k8s imagePullPolicy.
                                  [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                type: string
                              nodeSelector:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s nodeSelector.
                                  [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                type: object
                              overlays:
                                description: Overlays for k8s resources in rendered manifests.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              podAnnotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s pod annotations.
                                  [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                type: object
                              podDisruptionBudget:
                                description: |-
                                  k8s PodDisruptionBudget settings.
                                  [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              priorityClassName:
                                description: |-
                                  k8s priority_class_name. Default for all resources unless overridden.
                                  [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                type: string
                              readinessProbe:
                                description: |-
                                  k8s readinessProbe settings.
                                  [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                  k8s.io.api.core.v1.Probe readiness_probe = 9;
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              replicaCount:
                                description: |-
                                  k8s Deployment replicas setting.
                                  [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                              resources:
                                description: |-
                                  k8s resources settings.
                                  [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              securityContext:
                                description: |-
                                  k8s pod security context
                                  [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              service:
                                description: |-
                                  k8s Service settings.
                                  [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              serviceAnnotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s service annotations.
                                  [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                type: object
                              strategy:
                                description: |-
                                  k8s deployment strategy.
                                  [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              tolerations:
                                description: |-
                                  k8s toleration
                                  [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumeMounts:
                                description: |-
                                  k8s volumeMounts
                                  VolumeMounts defines the collection of VolumeMount to inject into containers.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumes:
                                description: |-
                                  k8s volume
                                  [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                  Volumes defines the collection of Volume to inject into the pod.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                            type: object
                          namespace:
                            description: Namespace for the component.
                            type: string
                          spec:
                            description: |-
                              Arbitrary install time configuration for the component.
                              For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          tag:
                            description: Tag for the component (overrides top level tag
                              setting).
                            type: string
                        type: object
                      egressGateways:
                        items:
                          description: Configuration for gateways.
                          properties:
                            enabled:
                              description: Selects whether this gateway is installed.
                              nullable: true
                              type: boolean
                            hub:
                              description: Hub for the component (overrides top level
                                hub setting).
                              type: string
                            k8s:
                              description: Kubernetes resource spec.
                              properties:
                                affinity:
                                  description: |-
                                    k8s affinity.
                                    [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                env:
                                  description: |-
                                    Deployment environment variables.
                                    [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                                hpaSpec:
                                  description: |-
                                    k8s HorizontalPodAutoscaler settings.
                                    [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                imagePullPolicy:
                                  description: |-
                                    k8s imagePullPolicy.
                                    [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                  type: string
                                nodeSelector:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    k8s nodeSelector.
                                    [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                  type: object
                                overlays:
                                  description: Overlays for k8s resources in rendered
                                    manifests.
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                                podAnnotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    k8s pod annotations.
                                    [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                  type: object
                                podDisruptionBudget:
                                  description: |-
                                    k8s PodDisruptionBudget settings.
                                    [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                priorityClassName:
                                  description: |-
                                    k8s priority_class_name. Default for all resources unless overridden.
                                    [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                  type: string
                                readinessProbe:
                                  description: |-
                                    k8s readinessProbe settings.
                                    [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                    k8s.io.api.core.v1.Probe readiness_probe = 9;
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                replicaCount:
                                  description: |-
                                    k8s Deployment replicas setting.
                                    [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                  maximum: 4294967295
                                  minimum: 0
                                  type: integer
                                resources:
                                  description: |-
                                    k8s resources settings.
                                    [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                securityContext:
                                  description: |-
                                    k8s pod security context
                                    [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                service:
                                  description: |-
                                    k8s Service settings.
                                    [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                serviceAnnotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    k8s service annotations.
                                    [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                  type: object
                                strategy:
                                  description: |-
                                    k8s deployment strategy.
                                    [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                tolerations:
                                  description: |-
                                    k8s toleration
                                    [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                                volumeMounts:
                                  description: |-
                                    k8s volumeMounts
                                    VolumeMounts defines the collection of VolumeMount to inject into containers.
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                                volumes:
                                  description: |-
                                    k8s volume
                                    [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                    Volumes defines the collection of Volume to inject into the pod.
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                              type: object
                            label:
                              additionalProperties:
                                type: string
                              description: Labels for the gateway.
                              type: object
                            name:
                              description: Name for the gateway.
                              type: string
                            namespace:
                              description: Namespace for the gateway.
                              type: string
                            tag:
                              description: Tag for the component (overrides top level
                                tag setting).
                              type: string
                          type: object
                        type: array
                      ingressGateways:
                        items:
                          description: Configuration for gateways.
                          properties:
                            enabled:
                              description: Selects whether this gateway is installed.
                              nullable: true
                              type: boolean
                            hub:
                              description: Hub for the component (overrides top level
                                hub setting).
                              type: string
                            k8s:
                              description: Kubernetes resource spec.
                              properties:
                                affinity:
                                  description: |-
                                    k8s affinity.
                                    [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                env:
                                  description: |-
                                    Deployment environment variables.
                                    [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                                hpaSpec:
                                  description: |-
                                    k8s HorizontalPodAutoscaler settings.
                                    [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                imagePullPolicy:
                                  description: |-
                                    k8s imagePullPolicy.
                                    [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                  type: string
                                nodeSelector:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    k8s nodeSelector.
                                    [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                  type: object
                                overlays:
                                  description: Overlays for k8s resources in rendered
                                    manifests.
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                                podAnnotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    k8s pod annotations.
                                    [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                  type: object
                                podDisruptionBudget:
                                  description: |-
                                    k8s PodDisruptionBudget settings.
                                    [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                priorityClassName:
                                  description: |-
                                    k8s priority_class_name. Default for all resources unless overridden.
                                    [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                  type: string
                                readinessProbe:
                                  description: |-
                                    k8s readinessProbe settings.
                                    [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                    k8s.io.api.core.v1.Probe readiness_probe = 9;
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                replicaCount:
                                  description: |-
                                    k8s Deployment replicas setting.
                                    [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                  maximum: 4294967295
                                  minimum: 0
                                  type: integer
                                resources:
                                  description: |-
                                    k8s resources settings.
                                    [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                securityContext:
                                  description: |-
                                    k8s pod security context
                                    [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                service:
                                  description: |-
                                    k8s Service settings.
                                    [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                serviceAnnotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    k8s service annotations.
                                    [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                  type: object
                                strategy:
                                  description: |-
                                    k8s deployment strategy.
                                    [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                tolerations:
                                  description: |-
                                    k8s toleration
                                    [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                                volumeMounts:
                                  description: |-
                                    k8s volumeMounts
                                    VolumeMounts defines the collection of VolumeMount to inject into containers.
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                                volumes:
                                  description: |-
                                    k8s volume
                                    [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                    Volumes defines the collection of Volume to inject into the pod.
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                              type: object
                            label:
                              additionalProperties:
                                type: string
                              description: Labels for the gateway.
                              type: object
                            name:
                              description: Name for the gateway.
                              type: string
                            namespace:
                              description: Namespace for the gateway.
                              type: string
                            tag:
                              description: Tag for the component (overrides top level
                                tag setting).
                              type: string
                          type: object
                        type: array
                      istiodRemote:
                        description: Remote cluster using an external control plane.
                        properties:
                          enabled:
                            description: Selects whether this component is installed.
                            nullable: true
                            type: boolean
                          hub:
                            description: Hub for the component (overrides top level hub
                              setting).
                            type: string
                          k8s:
                            description: Kubernetes resource spec.
                            properties:
                              affinity:
                                description: |-
                                  k8s affinity.
                                  [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              env:
                                description: |-
                                  Deployment environment variables.
                                  [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              hpaSpec:
                                description: |-
                                  k8s HorizontalPodAutoscaler settings.
                                  [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              imagePullPolicy:
                                description: |-
                                  k8s imagePullPolicy.
                                  [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                type: string
                              nodeSelector:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s nodeSelector.
                                  [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                type: object
                              overlays:
                                description: Overlays for k8s resources in rendered manifests.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              podAnnotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s pod annotations.
                                  [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                type: object
                              podDisruptionBudget:
                                description: |-
                                  k8s PodDisruptionBudget settings.
                                  [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              priorityClassName:
                                description: |-
                                  k8s priority_class_name. Default for all resources unless overridden.
                                  [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                type: string
                              readinessProbe:
                                description: |-
                                  k8s readinessProbe settings.
                                  [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                  k8s.io.api.core.v1.Probe readiness_probe = 9;
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              replicaCount:
                                description: |-
                                  k8s Deployment replicas setting.
                                  [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                              resources:
                                description: |-
                                  k8s resources settings.
                                  [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              securityContext:
                                description: |-
                                  k8s pod security context
                                  [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              service:
                                description: |-
                                  k8s Service settings.
                                  [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              serviceAnnotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s service annotations.
                                  [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                type: object
                              strategy:
                                description: |-
                                  k8s deployment strategy.
                                  [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              tolerations:
                                description: |-
                                  k8s toleration
                                  [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumeMounts:
                                description: |-
                                  k8s volumeMounts
                                  VolumeMounts defines the collection of VolumeMount to inject into containers.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumes:
                                description: |-
                                  k8s volume
                                  [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                  Volumes defines the collection of Volume to inject into the pod.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                            type: object
                          namespace:
                            description: Namespace for the component.
                            type: string
                          spec:
                            description: |-
                              Arbitrary install time configuration for the component.
                              For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          tag:
                            description: Tag for the component (overrides top level tag
                              setting).
                            type: string
                        type: object
                      pilot:
                        properties:
                          enabled:
                            description: Selects whether this component is installed.
                            nullable: true
                            type: boolean
                          hub:
                            description: Hub for the component (overrides top level hub
                              setting).
                            type: string
                          k8s:
                            description: Kubernetes resource spec.
                            properties:
                              affinity:
                                description: |-
                                  k8s affinity.
                                  [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              env:
                                description: |-
                                  Deployment environment variables.
                                  [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              hpaSpec:
                                description: |-
                                  k8s HorizontalPodAutoscaler settings.
                                  [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              imagePullPolicy:
                                description: |-
                                  k8s imagePullPolicy.
                                  [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                type: string
                              nodeSelector:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s nodeSelector.
                                  [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                type: object
                              overlays:
                                description: Overlays for k8s resources in rendered manifests.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              podAnnotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s pod annotations.
                                  [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                type: object
                              podDisruptionBudget:
                                description: |-
                                  k8s PodDisruptionBudget settings.
                                  [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              priorityClassName:
                                description: |-
                                  k8s priority_class_name. Default for all resources unless overridden.
                                  [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                type: string
                              readinessProbe:
                                description: |-
                                  k8s readinessProbe settings.
                                  [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                  k8s.io.api.core.v1.Probe readiness_probe = 9;
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              replicaCount:
                                description: |-
                                  k8s Deployment replicas setting.
                                  [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                              resources:
                                description: |-
                                  k8s resources settings.
                                  [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              securityContext:
                                description: |-
                                  k8s pod security context
                                  [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              service:
                                description: |-
                                  k8s Service settings.
                                  [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              serviceAnnotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s service annotations.
                                  [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                type: object
                              strategy:
                                description: |-
                                  k8s deployment strategy.
                                  [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              tolerations:
                                description: |-
                                  k8s toleration
                                  [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumeMounts:
                                description: |-
                                  k8s volumeMounts
                                  VolumeMounts defines the collection of VolumeMount to inject into containers.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumes:
                                description: |-
                                  k8s volume
                                  [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                  Volumes defines the collection of Volume to inject into the pod.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                            type: object
                          namespace:
                            description: Namespace for the component.
                            type: string
                          spec:
                            description: |-
                              Arbitrary install time configuration for the component.
                              For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          tag:
                            description: Tag for the component (overrides top level tag
                              setting).
                            type: string
                        type: object
                      ztunnel:
                        properties:
                          enabled:
                            description: Selects whether this component is installed.
                            nullable: true
                            type: boolean
                          hub:
                            description: Hub for the component (overrides top level hub
                              setting).
                            type: string
                          k8s:
                            description: Kubernetes resource spec.
                            properties:
                              affinity:
                                description: |-
                                  k8s affinity.
                                  [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              env:
                                description: |-
                                  Deployment environment variables.
                                  [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              hpaSpec:
                                description: |-
                                  k8s HorizontalPodAutoscaler settings.
                                  [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              imagePullPolicy:
                                description: |-
                                  k8s imagePullPolicy.
                                  [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                type: string
                              nodeSelector:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s nodeSelector.
                                  [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                type: object
                              overlays:
                                description: Overlays for k8s resources in rendered manifests.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              podAnnotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s pod annotations.
                                  [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                type: object
                              podDisruptionBudget:
                                description: |-
                                  k8s PodDisruptionBudget settings.
                                  [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              priorityClassName:
                                description: |-
                                  k8s priority_class_name. Default for all resources unless overridden.
                                  [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                type: string
                              readinessProbe:
                                description: |-
                                  k8s readinessProbe settings.
                                  [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                  k8s.io.api.core.v1.Probe readiness_probe = 9;
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              replicaCount:
                                description: |-
                                  k8s Deployment replicas setting.
                                  [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                              resources:
                                description: |-
                                  k8s resources settings.
                                  [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              securityContext:
                                description: |-
                                  k8s pod security context
                                  [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              service:
                                description: |-
                                  k8s Service settings.
                                  [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              serviceAnnotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s service annotations.
                                  [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                type: object
                              strategy:
                                description: |-
                                  k8s deployment strategy.
                                  [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              tolerations:
                                description: |-
                                  k8s toleration
                                  [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumeMounts:
                                description: |-
                                  k8s volumeMounts
                                  VolumeMounts defines the collection of VolumeMount to inject into containers.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumes:
                                description: |-
                                  k8s volume
                                  [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                  Volumes defines the collection of Volume to inject into the pod.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                            type: object
                          namespace:
                            description: Namespace for the component.
                            type: string
                          spec:
                            description: |-
                              Arbitrary install time configuration for the component.
                              For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          tag:
                            description: Tag for the component (overrides top level tag
                              setting).
                            type: string
                        type: object
                    type: object
                  defaultRevision:
                    description: |-
                      Identify whether this revision is the default revision for the cluster
                      This option is currently experimental.
                    type: boolean
                  hub:
                    description: Root for docker image paths e.g. `docker.io/istio`
                    type: string
                  installPackagePath:
                    description: |-
                      Path for the install package. e.g.
    
                      * /tmp/istio-installer/nightly (local file path)
                    type: string
                  meshConfig:
                    description: |-
                      Config used by control plane components internally.
                      For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  namespace:
                    description: |-
                      Namespace to install control plane resources into. If unset, Istio will be installed into the same namespace
                      as the `IstioOperator` CR. You must also set `values.global.istioNamespace` if you wish to install Istio in
                      a custom namespace.
                      If you have enabled CNI, you must  exclude this namespace by adding it to the list `values.cni.excludeNamespaces`.
                    type: string
                  profile:
                    description: |-
                      Path or name for the profile e.g.
    
                      * minimal (looks in profiles dir for a file called minimal.yaml)
                      * /tmp/istio/install/values/custom/custom-install.yaml (local file path)
    
                      default profile is used if this field is unset.
                    type: string
                  resourceSuffix:
                    type: string
                  revision:
                    description: |-
                      Identify the revision this installation is associated with.
                      This option is currently experimental.
                    type: string
                  tag:
                    description: Version tag for docker images e.g. `1.7.2`
                    type: string
                  unvalidatedValues:
                    description: |-
                      Unvalidated overrides for default `values.yaml`. Used for custom templates where new parameters are added.
                      For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  values:
                    description: |-
                      Overrides for default `values.yaml`. This is a validated pass-through to Helm templates.
                      See the [Helm installation options](https://istio.io/v1.5/docs/reference/config/installation-options/) for schema details.
                      Anything that is available in `IstioOperatorSpec` should be set above rather than using the passthrough. This
                      includes Kubernetes resource settings for components in `KubernetesResourcesSpec`.
                      For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                type: object
            type: object
          status:
            properties:
              helm:
                description: For helm-based installations, report the content and status
                  of each
                properties:
                  uninstall:
                    items:
                      properties:
                        releases:
                          description: Helm releases that share common values
                          items:
                            properties:
                              chartUrl:
                                description: URL to the chart used for this release (typically
                                  an OCI repo)
                                type: string
                              helmRevision:
                                description: Helm release revision once applying this
                                  istio instalation is finished
                                format: int32
                                type: integer
                              name:
                                description: Helm release name
                                type: string
                              namespace:
                                description: Namespace where helm release resides
                                type: string
                              state:
                                description: State of an individual helm release
                                enum:
                                - PENDING
                                - INSTALLING
                                - UPGRADING
                                - UNINSTALLING
                                - FINISHED
                                - FAILED
                                type: string
                              version:
                                description: Helm chart version for this release
                                type: string
                            type: object
                          type: array
                        values:
                          description: Values used for all releases in this batch
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                    type: array
                  upgradeInstall:
                    description: Releases created or updated by this Istio installation
                    items:
                      properties:
                        releases:
                          description: Helm releases that share common values
                          items:
                            properties:
                              chartUrl:
                                description: URL to the chart used for this release (typically
                                  an OCI repo)
                                type: string
                              helmRevision:
                                description: Helm release revision once applying this
                                  istio instalation is finished
                                format: int32
                                type: integer
                              name:
                                description: Helm release name
                                type: string
                              namespace:
                                description: Namespace where helm release resides
                                type: string
                              state:
                                description: State of an individual helm release
                                enum:
                                - PENDING
                                - INSTALLING
                                - UPGRADING
                                - UNINSTALLING
                                - FINISHED
                                - FAILED
                                type: string
                              version:
                                description: Helm chart version for this release
                                type: string
                            type: object
                          type: array
                        values:
                          description: Values used for all releases in this batch
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                    type: array
                type: object
              message:
                description: A human readable message about the current state of the installation.
                type: string
              observedOperator:
                description: |-
                  The IstioOperator spec that is currently deployed for this revision.
                  TODO(birkland) may want helm values instead,
                properties:
                  addonComponents:
                    additionalProperties:
                      properties:
                        chartPath:
                          description: Chart path for addon components.
                          type: string
                        enabled:
                          description: Selects whether this component is installed.
                          nullable: true
                          type: boolean
                        k8s:
                          description: Kubernetes resource spec.
                          properties:
                            affinity:
                              description: |-
                                k8s affinity.
                                [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            env:
                              description: |-
                                Deployment environment variables.
                                [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                              items:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              type: array
                            hpaSpec:
                              description: |-
                                k8s HorizontalPodAutoscaler settings.
                                [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            imagePullPolicy:
                              description: |-
                                k8s imagePullPolicy.
                                [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                              type: string
                            nodeSelector:
                              additionalProperties:
                                type: string
                              description: |-
                                k8s nodeSelector.
                                [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                              type: object
                            overlays:
                              description: Overlays for k8s resources in rendered manifests.
                              items:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              type: array
                            podAnnotations:
                              additionalProperties:
                                type: string
                              description: |-
                                k8s pod annotations.
                                [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                              type: object
                            podDisruptionBudget:
                              description: |-
                                k8s PodDisruptionBudget settings.
                                [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            priorityClassName:
                              description: |-
                                k8s priority_class_name. Default for all resources unless overridden.
                                [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                              type: string
                            readinessProbe:
                              description: |-
                                k8s readinessProbe settings.
                                [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                k8s.io.api.core.v1.Probe readiness_probe = 9;
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            replicaCount:
                              description: |-
                                k8s Deployment replicas setting.
                                [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                            resources:
                              description: |-
                                k8s resources settings.
                                [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            securityContext:
                              description: |-
                                k8s pod security context
                                [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            service:
                              description: |-
                                k8s Service settings.
                                [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            serviceAnnotations:
                              additionalProperties:
                                type: string
                              description: |-
                                k8s service annotations.
                                [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                              type: object
                            strategy:
                              description: |-
                                k8s deployment strategy.
                                [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            tolerations:
                              description: |-
                                k8s toleration
                                [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                              items:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              type: array
                            volumeMounts:
                              description: |-
                                k8s volumeMounts
                                VolumeMounts defines the collection of VolumeMount to inject into containers.
                              items:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              type: array
                            volumes:
                              description: |-
                                k8s volume
                                [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                Volumes defines the collection of Volume to inject into the pod.
                              items:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              type: array
                          type: object
                        namespace:
                          description: Namespace for the component.
                          type: string
                        schema:
                          description: |-
                            Optional schema to validate spec against.
                            For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#any).
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        spec:
                          description: |-
                            Arbitrary install time configuration for the component.
                            For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                    description: |-
                      Deprecated.
                      Users should manage the installation of addon components on their own.
                      Refer to samples/addons for demo installation of addon components.
                    type: object
                  components:
                    description: |-
                      Kubernetes resource settings, enablement and component-specific settings that are not internal to the
                      component.
                    properties:
                      base:
                        properties:
                          enabled:
                            description: Selects whether this component is installed.
                            nullable: true
                            type: boolean
                          k8s:
                            description: Kubernetes resource spec.
                            properties:
                              affinity:
                                description: |-
                                  k8s affinity.
                                  [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              env:
                                description: |-
                                  Deployment environment variables.
                                  [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              hpaSpec:
                                description: |-
                                  k8s HorizontalPodAutoscaler settings.
                                  [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              imagePullPolicy:
                                description: |-
                                  k8s imagePullPolicy.
                                  [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                type: string
                              nodeSelector:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s nodeSelector.
                                  [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                type: object
                              overlays:
                                description: Overlays for k8s resources in rendered manifests.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              podAnnotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s pod annotations.
                                  [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                type: object
                              podDisruptionBudget:
                                description: |-
                                  k8s PodDisruptionBudget settings.
                                  [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              priorityClassName:
                                description: |-
                                  k8s priority_class_name. Default for all resources unless overridden.
                                  [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                type: string
                              readinessProbe:
                                description: |-
                                  k8s readinessProbe settings.
                                  [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                  k8s.io.api.core.v1.Probe readiness_probe = 9;
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              replicaCount:
                                description: |-
                                  k8s Deployment replicas setting.
                                  [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                              resources:
                                description: |-
                                  k8s resources settings.
                                  [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              securityContext:
                                description: |-
                                  k8s pod security context
                                  [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              service:
                                description: |-
                                  k8s Service settings.
                                  [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              serviceAnnotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s service annotations.
                                  [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                type: object
                              strategy:
                                description: |-
                                  k8s deployment strategy.
                                  [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              tolerations:
                                description: |-
                                  k8s toleration
                                  [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumeMounts:
                                description: |-
                                  k8s volumeMounts
                                  VolumeMounts defines the collection of VolumeMount to inject into containers.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumes:
                                description: |-
                                  k8s volume
                                  [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                  Volumes defines the collection of Volume to inject into the pod.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                            type: object
                        type: object
                      cni:
                        properties:
                          enabled:
                            description: Selects whether this component is installed.
                            nullable: true
                            type: boolean
                          hub:
                            description: Hub for the component (overrides top level hub
                              setting).
                            type: string
                          k8s:
                            description: Kubernetes resource spec.
                            properties:
                              affinity:
                                description: |-
                                  k8s affinity.
                                  [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              env:
                                description: |-
                                  Deployment environment variables.
                                  [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              hpaSpec:
                                description: |-
                                  k8s HorizontalPodAutoscaler settings.
                                  [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              imagePullPolicy:
                                description: |-
                                  k8s imagePullPolicy.
                                  [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                type: string
                              nodeSelector:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s nodeSelector.
                                  [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                type: object
                              overlays:
                                description: Overlays for k8s resources in rendered manifests.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              podAnnotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s pod annotations.
                                  [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                type: object
                              podDisruptionBudget:
                                description: |-
                                  k8s PodDisruptionBudget settings.
                                  [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              priorityClassName:
                                description: |-
                                  k8s priority_class_name. Default for all resources unless overridden.
                                  [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                type: string
                              readinessProbe:
                                description: |-
                                  k8s readinessProbe settings.
                                  [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                  k8s.io.api.core.v1.Probe readiness_probe = 9;
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              replicaCount:
                                description: |-
                                  k8s Deployment replicas setting.
                                  [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                              resources:
                                description: |-
                                  k8s resources settings.
                                  [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              securityContext:
                                description: |-
                                  k8s pod security context
                                  [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              service:
                                description: |-
                                  k8s Service settings.
                                  [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              serviceAnnotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s service annotations.
                                  [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                type: object
                              strategy:
                                description: |-
                                  k8s deployment strategy.
                                  [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              tolerations:
                                description: |-
                                  k8s toleration
                                  [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumeMounts:
                                description: |-
                                  k8s volumeMounts
                                  VolumeMounts defines the collection of VolumeMount to inject into containers.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumes:
                                description: |-
                                  k8s volume
                                  [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                  Volumes defines the collection of Volume to inject into the pod.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                            type: object
                          namespace:
                            description: Namespace for the component.
                            type: string
                          spec:
                            description: |-
                              Arbitrary install time configuration for the component.
                              For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          tag:
                            description: Tag for the component (overrides top level tag
                              setting).
                            type: string
                        type: object
                      egressGateways:
                        items:
                          description: Configuration for gateways.
                          properties:
                            enabled:
                              description: Selects whether this gateway is installed.
                              nullable: true
                              type: boolean
                            hub:
                              description: Hub for the component (overrides top level
                                hub setting).
                              type: string
                            k8s:
                              description: Kubernetes resource spec.
                              properties:
                                affinity:
                                  description: |-
                                    k8s affinity.
                                    [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                env:
                                  description: |-
                                    Deployment environment variables.
                                    [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                                hpaSpec:
                                  description: |-
                                    k8s HorizontalPodAutoscaler settings.
                                    [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                imagePullPolicy:
                                  description: |-
                                    k8s imagePullPolicy.
                                    [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                  type: string
                                nodeSelector:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    k8s nodeSelector.
                                    [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                  type: object
                                overlays:
                                  description: Overlays for k8s resources in rendered
                                    manifests.
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                                podAnnotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    k8s pod annotations.
                                    [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                  type: object
                                podDisruptionBudget:
                                  description: |-
                                    k8s PodDisruptionBudget settings.
                                    [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                priorityClassName:
                                  description: |-
                                    k8s priority_class_name. Default for all resources unless overridden.
                                    [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                  type: string
                                readinessProbe:
                                  description: |-
                                    k8s readinessProbe settings.
                                    [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                    k8s.io.api.core.v1.Probe readiness_probe = 9;
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                replicaCount:
                                  description: |-
                                    k8s Deployment replicas setting.
                                    [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                  maximum: 4294967295
                                  minimum: 0
                                  type: integer
                                resources:
                                  description: |-
                                    k8s resources settings.
                                    [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                securityContext:
                                  description: |-
                                    k8s pod security context
                                    [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                service:
                                  description: |-
                                    k8s Service settings.
                                    [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                serviceAnnotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    k8s service annotations.
                                    [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                  type: object
                                strategy:
                                  description: |-
                                    k8s deployment strategy.
                                    [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                tolerations:
                                  description: |-
                                    k8s toleration
                                    [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                                volumeMounts:
                                  description: |-
                                    k8s volumeMounts
                                    VolumeMounts defines the collection of VolumeMount to inject into containers.
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                                volumes:
                                  description: |-
                                    k8s volume
                                    [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                    Volumes defines the collection of Volume to inject into the pod.
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                              type: object
                            label:
                              additionalProperties:
                                type: string
                              description: Labels for the gateway.
                              type: object
                            name:
                              description: Name for the gateway.
                              type: string
                            namespace:
                              description: Namespace for the gateway.
                              type: string
                            tag:
                              description: Tag for the component (overrides top level
                                tag setting).
                              type: string
                          type: object
                        type: array
                      ingressGateways:
                        items:
                          description: Configuration for gateways.
                          properties:
                            enabled:
                              description: Selects whether this gateway is installed.
                              nullable: true
                              type: boolean
                            hub:
                              description: Hub for the component (overrides top level
                                hub setting).
                              type: string
                            k8s:
                              description: Kubernetes resource spec.
                              properties:
                                affinity:
                                  description: |-
                                    k8s affinity.
                                    [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                env:
                                  description: |-
                                    Deployment environment variables.
                                    [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                                hpaSpec:
                                  description: |-
                                    k8s HorizontalPodAutoscaler settings.
                                    [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                imagePullPolicy:
                                  description: |-
                                    k8s imagePullPolicy.
                                    [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                  type: string
                                nodeSelector:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    k8s nodeSelector.
                                    [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                  type: object
                                overlays:
                                  description: Overlays for k8s resources in rendered
                                    manifests.
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                                podAnnotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    k8s pod annotations.
                                    [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                  type: object
                                podDisruptionBudget:
                                  description: |-
                                    k8s PodDisruptionBudget settings.
                                    [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                priorityClassName:
                                  description: |-
                                    k8s priority_class_name. Default for all resources unless overridden.
                                    [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                  type: string
                                readinessProbe:
                                  description: |-
                                    k8s readinessProbe settings.
                                    [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                    k8s.io.api.core.v1.Probe readiness_probe = 9;
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                replicaCount:
                                  description: |-
                                    k8s Deployment replicas setting.
                                    [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                  maximum: 4294967295
                                  minimum: 0
                                  type: integer
                                resources:
                                  description: |-
                                    k8s resources settings.
                                    [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                securityContext:
                                  description: |-
                                    k8s pod security context
                                    [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                service:
                                  description: |-
                                    k8s Service settings.
                                    [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                serviceAnnotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    k8s service annotations.
                                    [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                  type: object
                                strategy:
                                  description: |-
                                    k8s deployment strategy.
                                    [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                tolerations:
                                  description: |-
                                    k8s toleration
                                    [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                                volumeMounts:
                                  description: |-
                                    k8s volumeMounts
                                    VolumeMounts defines the collection of VolumeMount to inject into containers.
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                                volumes:
                                  description: |-
                                    k8s volume
                                    [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                    Volumes defines the collection of Volume to inject into the pod.
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                              type: object
                            label:
                              additionalProperties:
                                type: string
                              description: Labels for the gateway.
                              type: object
                            name:
                              description: Name for the gateway.
                              type: string
                            namespace:
                              description: Namespace for the gateway.
                              type: string
                            tag:
                              description: Tag for the component (overrides top level
                                tag setting).
                              type: string
                          type: object
                        type: array
                      istiodRemote:
                        description: Remote cluster using an external control plane.
                        properties:
                          enabled:
                            description: Selects whether this component is installed.
                            nullable: true
                            type: boolean
                          hub:
                            description: Hub for the component (overrides top level hub
                              setting).
                            type: string
                          k8s:
                            description: Kubernetes resource spec.
                            properties:
                              affinity:
                                description: |-
                                  k8s affinity.
                                  [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              env:
                                description: |-
                                  Deployment environment variables.
                                  [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              hpaSpec:
                                description: |-
                                  k8s HorizontalPodAutoscaler settings.
                                  [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              imagePullPolicy:
                                description: |-
                                  k8s imagePullPolicy.
                                  [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                type: string
                              nodeSelector:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s nodeSelector.
                                  [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                type: object
                              overlays:
                                description: Overlays for k8s resources in rendered manifests.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              podAnnotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s pod annotations.
                                  [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                type: object
                              podDisruptionBudget:
                                description: |-
                                  k8s PodDisruptionBudget settings.
                                  [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              priorityClassName:
                                description: |-
                                  k8s priority_class_name. Default for all resources unless overridden.
                                  [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                type: string
                              readinessProbe:
                                description: |-
                                  k8s readinessProbe settings.
                                  [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                  k8s.io.api.core.v1.Probe readiness_probe = 9;
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              replicaCount:
                                description: |-
                                  k8s Deployment replicas setting.
                                  [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                              resources:
                                description: |-
                                  k8s resources settings.
                                  [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              securityContext:
                                description: |-
                                  k8s pod security context
                                  [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              service:
                                description: |-
                                  k8s Service settings.
                                  [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              serviceAnnotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s service annotations.
                                  [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                type: object
                              strategy:
                                description: |-
                                  k8s deployment strategy.
                                  [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              tolerations:
                                description: |-
                                  k8s toleration
                                  [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumeMounts:
                                description: |-
                                  k8s volumeMounts
                                  VolumeMounts defines the collection of VolumeMount to inject into containers.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumes:
                                description: |-
                                  k8s volume
                                  [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                  Volumes defines the collection of Volume to inject into the pod.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                            type: object
                          namespace:
                            description: Namespace for the component.
                            type: string
                          spec:
                            description: |-
                              Arbitrary install time configuration for the component.
                              For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          tag:
                            description: Tag for the component (overrides top level tag
                              setting).
                            type: string
                        type: object
                      pilot:
                        properties:
                          enabled:
                            description: Selects whether this component is installed.
                            nullable: true
                            type: boolean
                          hub:
                            description: Hub for the component (overrides top level hub
                              setting).
                            type: string
                          k8s:
                            description: Kubernetes resource spec.
                            properties:
                              affinity:
                                description: |-
                                  k8s affinity.
                                  [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              env:
                                description: |-
                                  Deployment environment variables.
                                  [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              hpaSpec:
                                description: |-
                                  k8s HorizontalPodAutoscaler settings.
                                  [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              imagePullPolicy:
                                description: |-
                                  k8s imagePullPolicy.
                                  [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                type: string
                              nodeSelector:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s nodeSelector.
                                  [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                type: object
                              overlays:
                                description: Overlays for k8s resources in rendered manifests.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              podAnnotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s pod annotations.
                                  [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                type: object
                              podDisruptionBudget:
                                description: |-
                                  k8s PodDisruptionBudget settings.
                                  [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              priorityClassName:
                                description: |-
                                  k8s priority_class_name. Default for all resources unless overridden.
                                  [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                type: string
                              readinessProbe:
                                description: |-
                                  k8s readinessProbe settings.
                                  [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                  k8s.io.api.core.v1.Probe readiness_probe = 9;
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              replicaCount:
                                description: |-
                                  k8s Deployment replicas setting.
                                  [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                              resources:
                                description: |-
                                  k8s resources settings.
                                  [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              securityContext:
                                description: |-
                                  k8s pod security context
                                  [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              service:
                                description: |-
                                  k8s Service settings.
                                  [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              serviceAnnotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s service annotations.
                                  [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                type: object
                              strategy:
                                description: |-
                                  k8s deployment strategy.
                                  [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              tolerations:
                                description: |-
                                  k8s toleration
                                  [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumeMounts:
                                description: |-
                                  k8s volumeMounts
                                  VolumeMounts defines the collection of VolumeMount to inject into containers.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumes:
                                description: |-
                                  k8s volume
                                  [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                  Volumes defines the collection of Volume to inject into the pod.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                            type: object
                          namespace:
                            description: Namespace for the component.
                            type: string
                          spec:
                            description: |-
                              Arbitrary install time configuration for the component.
                              For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          tag:
                            description: Tag for the component (overrides top level tag
                              setting).
                            type: string
                        type: object
                      ztunnel:
                        properties:
                          enabled:
                            description: Selects whether this component is installed.
                            nullable: true
                            type: boolean
                          hub:
                            description: Hub for the component (overrides top level hub
                              setting).
                            type: string
                          k8s:
                            description: Kubernetes resource spec.
                            properties:
                              affinity:
                                description: |-
                                  k8s affinity.
                                  [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              env:
                                description: |-
                                  Deployment environment variables.
                                  [https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              hpaSpec:
                                description: |-
                                  k8s HorizontalPodAutoscaler settings.
                                  [https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              imagePullPolicy:
                                description: |-
                                  k8s imagePullPolicy.
                                  [https://kubernetes.io/docs/concepts/containers/images/](https://kubernetes.io/docs/concepts/containers/images/)
                                type: string
                              nodeSelector:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s nodeSelector.
                                  [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
                                type: object
                              overlays:
                                description: Overlays for k8s resources in rendered manifests.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              podAnnotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s pod annotations.
                                  [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                type: object
                              podDisruptionBudget:
                                description: |-
                                  k8s PodDisruptionBudget settings.
                                  [https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              priorityClassName:
                                description: |-
                                  k8s priority_class_name. Default for all resources unless overridden.
                                  [https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
                                type: string
                              readinessProbe:
                                description: |-
                                  k8s readinessProbe settings.
                                  [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/)
                                  k8s.io.api.core.v1.Probe readiness_probe = 9;
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              replicaCount:
                                description: |-
                                  k8s Deployment replicas setting.
                                  [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                              resources:
                                description: |-
                                  k8s resources settings.
                                  [https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              securityContext:
                                description: |-
                                  k8s pod security context
                                  [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              service:
                                description: |-
                                  k8s Service settings.
                                  [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              serviceAnnotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  k8s service annotations.
                                  [https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                                type: object
                              strategy:
                                description: |-
                                  k8s deployment strategy.
                                  [https://kubernetes.io/docs/concepts/workloads/controllers/deployment/](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              tolerations:
                                description: |-
                                  k8s toleration
                                  [https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumeMounts:
                                description: |-
                                  k8s volumeMounts
                                  VolumeMounts defines the collection of VolumeMount to inject into containers.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumes:
                                description: |-
                                  k8s volume
                                  [https://kubernetes.io/docs/concepts/storage/volumes/](https://kubernetes.io/docs/concepts/storage/volumes/)
                                  Volumes defines the collection of Volume to inject into the pod.
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                            type: object
                          namespace:
                            description: Namespace for the component.
                            type: string
                          spec:
                            description: |-
                              Arbitrary install time configuration for the component.
                              For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          tag:
                            description: Tag for the component (overrides top level tag
                              setting).
                            type: string
                        type: object
                    type: object
                  defaultRevision:
                    description: |-
                      Identify whether this revision is the default revision for the cluster
                      This option is currently experimental.
                    type: boolean
                  hub:
                    description: Root for docker image paths e.g. `docker.io/istio`
                    type: string
                  installPackagePath:
                    description: |-
                      Path for the install package. e.g.
    
                      * /tmp/istio-installer/nightly (local file path)
                    type: string
                  meshConfig:
                    description: |-
                      Config used by control plane components internally.
                      For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  namespace:
                    description: |-
                      Namespace to install control plane resources into. If unset, Istio will be installed into the same namespace
                      as the `IstioOperator` CR. You must also set `values.global.istioNamespace` if you wish to install Istio in
                      a custom namespace.
                      If you have enabled CNI, you must  exclude this namespace by adding it to the list `values.cni.excludeNamespaces`.
                    type: string
                  profile:
                    description: |-
                      Path or name for the profile e.g.
    
                      * minimal (looks in profiles dir for a file called minimal.yaml)
                      * /tmp/istio/install/values/custom/custom-install.yaml (local file path)
    
                      default profile is used if this field is unset.
                    type: string
                  resourceSuffix:
                    type: string
                  revision:
                    description: |-
                      Identify the revision this installation is associated with.
                      This option is currently experimental.
                    type: string
                  tag:
                    description: Version tag for docker images e.g. `1.7.2`
                    type: string
                  unvalidatedValues:
                    description: |-
                      Unvalidated overrides for default `values.yaml`. Used for custom templates where new parameters are added.
                      For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  values:
                    description: |-
                      Overrides for default `values.yaml`. This is a validated pass-through to Helm templates.
                      See the [Helm installation options](https://istio.io/v1.5/docs/reference/config/installation-options/) for schema details.
                      Anything that is available in `IstioOperatorSpec` should be set above rather than using the passthrough. This
                      includes Kubernetes resource settings for components in `KubernetesResourcesSpec`.
                      For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#struct).
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              observedRevision:
                description: The observed revision of the Istio installation.
                type: string
              state:
                description: The current state of the Istio installation.
                enum:
                - PENDING
                - INSTALLING
                - UPGRADING
                - UNINSTALLING
                - FINISHED
                - FAILED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/internal.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 964797310b5d56ba
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: discoveredcnis.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: DiscoveredCNI
    listKind: DiscoveredCNIList
    plural: discoveredcnis
    shortNames:
    - dcni
    singular: discoveredcni
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              A DiscoveredCNISpec is an internal representation of a CNI discovered to be running in a cluster.
              DiscoveredCNIs are automatically detected from the node agent (DaemonSet) which runs on each CNI-networked cluster.
            oneOf:
            - not:
                anyOf:
                - required:
                  - ciliumConfig
            - required:
              - ciliumConfig
            properties:
              agent:
                description: Reference to the Kubernetes DaemonSet that runs throughout
                  the cluster.
                properties:
                  clusterName:
                    description: name of the cluster in which the resource exists
                    type: string
                  name:
                    description: name of the resource being referenced
                    type: string
                  namespace:
                    description: namespace of the resource being referenced
                    type: string
                type: object
              ciliumConfig:
                description: Cilium CNI configuration.
                properties:
                  data:
                    additionalProperties:
                      type: string
                    description: Cilium CNI ConfigMap data.
                    type: object
                type: object
              metricsPortNumber:
                description: the port number used to service CNI metrics.
                maximum: 4294967295
                minimum: 0
                type: integer
              provider:
                description: The provider of CNI installed.
                enum:
                - CILIUM
                - CALICO
                type: string
              version:
                description: the version of the CNI installed.
                type: string
            type: object
          status:
            properties:
              observedGeneration:
                description: |-
                  The observed generation of the DiscoveredCNI.
                  When this matches the DiscoveredCNI metadata.generation, it indicates that Gloo Mesh
                  has processed the latest version of the DiscoveredCNI.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/internal.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: a2ff3def5233e56a
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: discoveredgateways.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: DiscoveredGateway
    listKind: DiscoveredGatewayList
    plural: discoveredgateways
    shortNames:
    - dg
    singular: discoveredgateway
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              A DiscoveredGateway is an internal representation of an Istio Gateway workload.
              DiscoveredGateways are automatically detected from Istio Gateway deployments and services.
            properties:
              externalAddresses:
                description: The externally-reachable addresses on which the gateway is
                  listening for connections.
                items:
                  properties:
                    address:
                      description: |-
                        The externally-reachable address on which the gateway is listening for connections.
                        Depending on the gateway service type and its properties, this can be a LoadBalancer address
                        reported by Kubernetes, an externally-reachable Node address, and a user-defined external IP set on the service.
                      type: string
                    locality:
                      description: The locality in which the node serving this address
                        resides, typically representing a large geographic area.
                      properties:
                        region:
                          description: |-
                            Represents a large geographic area, such as us-east1. A region typically contains a number of availability zones.
                            A workload's region is determined by the value of the "topology.kubernetes.io/region" label (or the deprecated
                            "failure-domain.beta.kubernetes.io/region" one) of the Node
                            that is running it.
                          type: string
                        subZone:
                          description: |-
                            A zone can be divided into sub-zones to have even more fine-grained control over load balancing behavior.
                            The sub-zone concept doesn't exist in Kubernetes. This value is derived by the Istio-specific
                            "topology.istio.io/subzone" Node label.
                          type: string
                        zone:
                          description: |-
                            Represents an availability zone within a region, e.g. us-east-1a.
                            A workload's zone is determined by the value of the "topology.kubernetes.io/zone" label (or the deprecated
                            "failure-domain.beta.kubernetes.io/zone" one) of the Node that is running it.
                          type: string
                      type: object
                    ports:
                      description: The externally-reachable ports on which the gateway
                        is listening for connections.
                      items:
                        description: Port describes a port accessible on a DiscoveredGateway.
                        properties:
                          name:
                            description: |-
                              A label for the port, eg "http".
                              This will match the port name from the underlying gateway k8s Service.
                            type: string
                          number:
                            description: The port number exposed on the underlying gateway
                              k8s Service.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          protocol:
                            description: |-
                              The protocol used in communication with this destination
                              MUST be one of the following: HTTP, HTTPS, GRPC, HTTP2, MONGO, TCP, TLS.
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              service:
                description: Reference to the Kubernetes service that exposes the gateway
                  workloads.
                properties:
                  clusterName:
                    description: name of the cluster in which the resource exists
                    type: string
                  name:
                    description: name of the resource being referenced
                    type: string
                  namespace:
                    description: namespace of the resource being referenced
                    type: string
                type: object
              serviceAccountRefs:
                description: References to any service accounts selected by the service
                  that exposes the gateway workloads.
                items:
                  description: Resource reference for a cross-cluster-scoped object
                  properties:
                    clusterName:
                      description: name of the cluster in which the resource exists
                      type: string
                    name:
                      description: name of the resource being referenced
                      type: string
                    namespace:
                      description: namespace of the resource being referenced
                      type: string
                  type: object
                type: array
              serviceType:
                description: gateway resource type
                enum:
                - CLUSTER_IP
                - NODE_PORT
                - LOAD_BALANCER
                - EXTERNAL_NAME
                type: string
              workloadLabels:
                additionalProperties:
                  type: string
                description: The labels used by the Kubernetes service to select the gateway
                  workloads.
                type: object
            type: object
          status:
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numVirtualGateways:
                description: A count of virtual gateways that select this discovered gateway.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/internal.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 77faaa3eb22310fe
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: issuedcertificates.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: IssuedCertificate
    listKind: IssuedCertificateList
    plural: issuedcertificates
    shortNames:
    - ic
    singular: issuedcertificate
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              IssuedCertificates are used to issue SSL certificates
              to workload Kubernetes clusters from a central (out-of-cluster) Certificate Authority.
    
              When an IssuedCertificate is created, a certificate is issued to a workload cluster by
              a central Certificate Authority via the following workflow:
    
              1. The Certificate Issuer creates the IssuedCertificate resource on the remote cluster
              2. The Certificate Signature Requesting agent installed to the remote cluster generates
              a Certificate Signing Request (CSR) and writes it to the status of the IssuedCertificate
              3. Finally, the Certificate Issuer generates a signed certificate for the CSR and writes
              it back as Kubernetes Secret in the remote cluster.
    
              Trust can therefore be established across the Gloo Mesh server cluster and agents on workload clusters
              without requiring private keys to ever leave workload clusters.
    
              The certificate requested here is for Gloo Mesh agents on workload clusters to securely establish communication
              with Gloo Mesh server. This is not related to certificates for services running in the mesh.
            oneOf:
            - not:
                anyOf:
                - required:
                  - mgmtServerCa
                - required:
                  - agentCa
            - required:
              - mgmtServerCa
            - required:
              - agentCa
            properties:
              agentCa:
                description: Agent CA options
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - vault
                - required:
                  - vault
                properties:
                  vault:
                    allOf:
                    - oneOf:
                      - not:
                          anyOf:
                          - required:
                            - caBundle
                          - required:
                            - caSecretRef
                          - required:
                            - caLocalPath
                      - required:
                        - caBundle
                      - required:
                        - caSecretRef
                      - required:
                        - caLocalPath
                    - oneOf:
                      - not:
                          anyOf:
                          - required:
                            - tokenSecretRef
                          - required:
                            - kubernetesAuth
                      - required:
                        - tokenSecretRef
                      - required:
                        - kubernetesAuth
                    description: Use vault as the intermediate CA source
                    properties:
                      caBundle:
                        description: Inline CA bytes
                        format: byte
                        type: string
                      caLocalPath:
                        description: Path to a local file containing the CA bytes
                        type: string
                      caPath:
                        description: |-
                          `ca_path` is the mount path of the Vault PKI backend's `sign` endpoint, e.g:
                          "my_pki_mount/sign/my-role-name".
                        type: string
                      caSecretRef:
                        description: |-
                          Reference to a secret containing the CA bytes.
                          The CA should be stored by the key `root-cert.pem`
                        properties:
                          name:
                            description: name of the resource being referenced
                            type: string
                          namespace:
                            description: namespace of the resource being referenced
                            type: string
                        type: object
                      csrPath:
                        description: |-
                          `csr_path` is the mount path of the Vault PKI backend's `generate` endpoint, e.g:
                          "my_pki_mount/intermediate/generate/exported".
                          "exported" is necessary here as istio needs access to the private key
                          See vault docs here: https://developer.hashicorp.com/vault/api-docs/secret/pki#parameters-4
                        type: string
                      kubernetesAuth:
                        description: |-
                          Kubernetes authenticates with Vault by passing the ServiceAccount
                          token stored in the named Secret resource to the Vault server.
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - serviceAccountRef
                            - required:
                              - mountedSaPath
                        - required:
                          - serviceAccountRef
                        - required:
                          - mountedSaPath
                        properties:
                          mountPath:
                            description: |-
                              The Vault mountPath here is the mount path to use when authenticating with
                              Vault. For example, setting a value to `/v1/auth/foo`, will use the path
                              `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
                              default value "/v1/auth/kubernetes" will be used.
                            type: string
                          mountedSaPath:
                            description: |-
                              File System path to grab the service account token from.
                              Defaults to /var/run/secrets/kubernetes.io/serviceaccount
                            type: string
                          role:
                            description: |-
                              A required field containing the Vault Role to assume. A Role binds a
                              Kubernetes ServiceAccount with a set of Vault policies.
                            type: string
                          secretTokenKey:
                            description: |-
                              Key to search for the sa_token
                              Default to "token"
                            type: string
                          serviceAccountRef:
                            description: Reference to service account, other than the
                              one mounted to the current pod.
                            properties:
                              name:
                                description: name of the resource being referenced
                                type: string
                              namespace:
                                description: namespace of the resource being referenced
                                type: string
                            type: object
                        type: object
                      namespace:
                        description: |-
                          Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1"
                          More about namespaces can be found [here](https://www.vaultproject.io/docs/enterprise/namespaces)
                        type: string
                      server:
                        description: 'Server is the connection address for the Vault server,
                          e.g: "https://vault.example.com:8200".'
                        type: string
                      tokenSecretRef:
                        description: TokenSecretRef authenticates with Vault by presenting
                          a token.
                        properties:
                          name:
                            description: name of the resource being referenced
                            type: string
                          namespace:
                            description: namespace of the resource being referenced
                            type: string
                        type: object
                    type: object
                type: object
              autoRestartPods:
                description: |-
                  Signals whether or not the workload pods should be restarted
                  to pick up the new cert.
                type: boolean
              certOptions:
                description: Set of options to configure the intermediate certificate
                  being generated
                properties:
                  orgName:
                    description: The organization name of the certificate. Defaults to
                      "gloo-mesh".
                    type: string
                  rsaKeySizeBytes:
                    description: Size in bytes of the certificate's private key. Defaults
                      to 4096.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  secretRotationGracePeriodRatio:
                    description: |-
                      The ratio of the certificate lifetime to when Gloo starts the certificate rotation process.
                      The ratio must be between 0 and 1 (exclusive). For example, if a certificate is valid for
                      1 day (or 24 hours), and you specify a ratio of 0.1, Gloo starts the certificate rotation
                      process 2.4 hours before it expires (24x0.1).
                    type: number
                  ttlDays:
                    description: Number of days before the certificate expires. Defaults
                      to 365.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
              hosts:
                description: |-
                  A list of hostnames and IPs to generate a certificate for.
                  This can also be set to the identity running the workload,
                  e.g. a Kubernetes service account.
    
                  Generally for an Istio CA this will take the form `spiffe://cluster.local/ns/istio-system/sa/citadel`.
    
                  "cluster.local" may be replaced by the root of trust domain for the mesh.
                items:
                  type: string
                type: array
              issuedCertificateSecret:
                description: |-
                  The secret containing the SSL certificate to be generated for this IssuedCertificate (located in the Gloo Mesh agent's cluster).
                  If nil, the sidecar agent stores the signing certificate in memory. (Enterprise only)
                properties:
                  name:
                    description: name of the resource being referenced
                    type: string
                  namespace:
                    description: namespace of the resource being referenced
                    type: string
                type: object
              meshRef:
                description: Reference to the mesh on which this cert is being issued
                  for.
                properties:
                  name:
                    description: name of the resource being referenced
                    type: string
                  namespace:
                    description: namespace of the resource being referenced
                    type: string
                type: object
              mgmtServerCa:
                description: Gloo Mesh CA options
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - signingCertificateSecret
                - required:
                  - signingCertificateSecret
                properties:
                  signingCertificateSecret:
                    properties:
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                type: object
              passiveCertificateAuthorities:
                description: A list of certificate authorities that should also be trusted
                  by workloads
                items:
                  description: |-
                    Set of options which represent the certificate authorities the management cluster can use
                    to sign the intermediate certs.
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - signingCertificateSecret
                  - required:
                    - signingCertificateSecret
                  properties:
                    signingCertificateSecret:
                      properties:
                        name:
                          description: name of the resource being referenced
                          type: string
                        namespace:
                          description: namespace of the resource being referenced
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          status:
            description: The IssuedCertificate status is written by the CertificateRequesting
              agent.
            properties:
              error:
                description: |-
                  Any error observed which prevented the CertificateRequest from being processed.
                  If the error is empty, the request has been processed successfully.
                type: string
              observedGeneration:
                description: |-
                  The most recent generation observed in the IssuedCertificate metadata.
                  If the `observedGeneration` does not match `metadata.generation`, the Gloo Mesh agent has not processed the most
                  recent version of this IssuedCertificate.
                format: int64
                type: integer
              state:
                description: The current state of the IssuedCertificate workflow, reported
                  by the agent.
                enum:
                - PENDING
                - REQUESTED
                - ISSUED
                - FINISHED
                - FAILED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/internal.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 5c64db01a7774d6c
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: meshes.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: Mesh
    listKind: MeshList
    plural: meshes
    singular: mesh
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: A Mesh is an internal representation of a service mesh control
              plane deployment.
            properties:
              agentInfo:
                description: Describes the Gloo Mesh agent if it has been installed to
                  the managed cluster.
                properties:
                  namespace:
                    description: The namespace in which the Gloo Mesh agent is installed.
                    type: string
                  relayRootTlsSecret:
                    description: The location of the relay root tls secret
                    properties:
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                  version:
                    description: The version of the Gloo Mesh agent.
                    type: string
                type: object
              ambientCapable:
                description: If true, the mesh is capable of ambient dataplane mode.
                type: boolean
              discoveryNamespaces:
                description: |-
                  The list of namespaces that are part of the mesh, which is computed based
                  on the [discovery selectors](https://istio.io/latest/blog/2021/discovery-selectors/)
                  defined in the Istio Mesh Config.
                  And empty value implies that the Istio control place processes resources from all namespaces.
                items:
                  type: string
                type: array
              hub:
                description: istiod image hub
                type: string
              installation:
                description: Describes the Istio control plane deployment.
                properties:
                  cluster:
                    description: The Gloo Mesh cluster in which the control plane has
                      been installed.
                    type: string
                  namespace:
                    description: Namespace in which the control plane has been installed.
                    type: string
                  podLabels:
                    additionalProperties:
                      type: string
                    description: The labels on the control plane pods (read from the deployment).
                    type: object
                  revision:
                    description: The revision of the Istio control plane that has been
                      installed.
                    type: string
                  version:
                    description: |-
                      The version of the Mesh that has been installed, which is determined using the image tag on the
                      mesh's primary control plane image (e.g. the istio-pilot image tag).
                    type: string
                type: object
              ipFamily:
                description: 'Optional: The IPFamily supported by the cluster. Defaults
                  to ''IPV4''.'
                enum:
                - IPV4
                - IPV6
                - DUAL
                type: string
              istiodServiceAccount:
                description: The istiod service account which determines identity for
                  the Istio CA cert.
                type: string
              rootNamespace:
                description: |-
                  Root Namespace as specified in the Istio Mesh Config.
                  This namespace will be treated as the home for all root Istio config.
                type: string
              smartDnsProxyingEnabled:
                description: True if smart DNS proxying is enabled, which allows for arbitrary
                  DNS domains.
                type: boolean
              spire:
                description: If set, SPIRE is installed.
                maxProperties: 0
                type: object
              tag:
                description: istiod image tag
                type: string
              trustDomain:
                description: |-
                  The Istio trust domain used for https/[spiffe](https://spiffe.io/spiffe/concepts/#trust-domain) [identity](https://istio.io/docs/reference/glossary/#identity).
                  If empty will default to ["cluster.local"](https://github.com/istio/istio/blob/e768f408a7de224e64ccdfb2634442541ce08e6a/pilot/cmd/pilot-agent/main.go#L118).
                type: string
            type: object
          status:
            properties:
              observedGeneration:
                description: |-
                  The observed generation of the Mesh.
                  When this matches the Mesh's metadata.generation, it indicates that Gloo Mesh
                  has processed the latest version of the Mesh.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/internal.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: dd3e13e97320cd10
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: podbouncedirectives.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: PodBounceDirective
    listKind: PodBounceDirectiveList
    plural: podbouncedirectives
    shortNames:
    - pbd
    singular: podbouncedirective
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              When certificates are issued, Istio-controlled pods need to be bounced (restarted) to ensure they pick up the
              new certificates due to [this issue](https://github.com/istio/istio/issues/22993).
              The certificate issuer will create a PodBounceDirective containing the namespaces and labels
              of the pods that need to be bounced in order to pick up the new certs.
            properties:
              meshRef:
                description: Reference to the mesh on which this cert is being issued
                  for
                properties:
                  name:
                    description: name of the resource being referenced
                    type: string
                  namespace:
                    description: namespace of the resource being referenced
                    type: string
                type: object
              podsToBounce:
                description: |-
                  A list of Kubernetes pods to bounce (delete and cause a restart)
                  when the certificate is issued.
                  This will include the control plane pods as well as any Pods
                  which share a data plane with the target mesh.
                items:
                  description: pods that will be restarted.
                  properties:
                    labels:
                      additionalProperties:
                        type: string
                      description: Any labels shared by the Pods.
                      type: object
                    namespace:
                      description: The namespace in which the pods live.
                      type: string
                    rootCertSync:
                      description: |-
                        Wait for the control plane to have synced all root cert configmaps in data plane namespaces before
                        bouncing these Pods.
                      properties:
                        configMapKey:
                          type: string
                        configMapRef:
                          properties:
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                        secretKey:
                          type: string
                        secretRef:
                          properties:
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                      type: object
                    waitForReplicas:
                      description: |-
                        Wait for this number of replacement pods to reach be fully ready before
                        deleting the next set of selected Pods.
                        This is used to ensure the control plane pods are allowed to restart
                        before sidecars and gateways are restarted.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                type: array
            type: object
          status:
            description: PodBounceDirectiveStatus reports the status for stateful Pod
              bounces (when bouncing pods requires waiting for readiness).
            properties:
              error:
                type: string
              observedGeneration:
                description: |-
                  The most recent generation observed in the PodBounceDirective metadata.
                  If the `observedGeneration` does not match `metadata.generation`, the Gloo Mesh agent has not processed the most
                  recent version of this IssuedCertificate.
                format: int64
                type: integer
              podsBounced:
                description: |-
                  A list of Kubernetes pods to bounce (delete and cause a restart)
                  when the certificate is issued.
                  This will include the control plane pods as well as any Pods
                  which share a data plane with the target mesh.
                items:
                  description: A set of pods that were restarted.
                  properties:
                    bouncedPods:
                      description: The names of the pods that were bounced for the corresponding
                        selector specified in `PodBounceDirectiveSpec.PodSelector.labels`.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              state:
                description: The current state of the IssuedCertificate workflow, reported
                  by the agent.
                enum:
                - PENDING
                - BOUNCING_PODS
                - FAILED
                - FINISHED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/internal.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: b04251b2e1b80b8d
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: portalconfigs.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: PortalConfig
    listKind: PortalConfigList
    plural: portalconfigs
    shortNames:
    - pcfg
    singular: portalconfig
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              PortalConfig is a internal representation of the user facing Portal resource.
              It is used to provide configuration information for a single Portal backend.
              The PortalConfig contains a list of all API resources that are exposed by the Portal,
              the associated usage plans for each API, and all usage plans available
              across the Portal.
            properties:
              apis:
                description: The list of API resources that are exposed by the Portal.
                items:
                  description: |-
                    TODO(jmhbh): Update this doc when we decide to support operation level usage plans.
                    An API that is exposed by the Portal. API metadata is sourced from the
                    referenced RouteTable and api_schema is a reference to the stitched API schema for the RouteTable.
                    Also references a list of usage plan names that are associated with the API.
                  properties:
                    apiId:
                      description: The ID for this API.
                      type: string
                    apiProductDisplayName:
                      description: The api product display name
                      type: string
                    apiProductId:
                      description: |-
                        When set, the [/apis](https://docs.solo.io/gloo-mesh-gateway/latest/portal/redocly.html#tag/APIs/operation/ListAPIs)
                        endpoint in the portal will return `apiProduct` in the response which can be used to group multiple APIs together.
                      type: string
                    apiSchema:
                      properties:
                        cluster:
                          description: the cluster of the object. If omitted, Gloo Mesh
                            will use the same cluster as the parent object containing
                            this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. If omitted, Gloo Mesh
                            will use the same namespace as the parent object containing
                            this reference.
                          type: string
                      type: object
                    apiVersion:
                      description: |-
                        The version of the openAPI specification for this route table. Must be unique within the apiProduct.
                        `apiProduct` is required if `apiVersion` is set.
                      type: string
                    contact:
                      type: string
                    customMetadata:
                      additionalProperties:
                        type: string
                      type: object
                    description:
                      type: string
                    isPrivate:
                      description: |-
                        The API is private if its associated route table contains labels matching the privateAPILabels specified
                        in the portal resource
                      type: boolean
                    license:
                      type: string
                    lifecycle:
                      type: string
                    routeTable:
                      properties:
                        cluster:
                          description: the cluster of the object. If omitted, Gloo Mesh
                            will use the same cluster as the parent object containing
                            this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. If omitted, Gloo Mesh
                            will use the same namespace as the parent object containing
                            this reference.
                          type: string
                      type: object
                    termsOfService:
                      type: string
                    title:
                      type: string
                    usagePlans:
                      items:
                        description: Reference to a usage plan by name.
                        properties:
                          name:
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              domains:
                description: |-
                  The domains on which this Portal will be served. The Host header received by the
                  Portal Web App will be matched to one of these domains in order to determine which Portal will be served.
                items:
                  type: string
                type: array
              groups:
                description: The list of groups that are available across the Portal.
                items:
                  description: |-
                    A Portal group represents a set of group names, which has visibility into a set of APIs and the ability
                    to manage API keys selected usage plans.
                  properties:
                    apis:
                      description: The apis that are visible to this group
                      items:
                        description: |-
                          reference to a Kubernetes API object.
                          Kube API objects are referenced explicitly by the namespace and cluster containing them.
                        properties:
                          cluster:
                            description: the cluster of the object. If omitted, Gloo Mesh
                              will use the same cluster as the parent object containing
                              this reference.
                            type: string
                          name:
                            description: the name of the object
                            type: string
                          namespace:
                            description: the namespace of the object. If omitted, Gloo
                              Mesh will use the same namespace as the parent object containing
                              this reference.
                            type: string
                        type: object
                      type: array
                    membershipClaims:
                      description: The list of membership claims that are used to determine
                        whether a user is a member of this group
                      items:
                        description: |-
                          `Membership` contains a list of claims that is used to determine whether a user belongs to this group.
                          A user is considered to be a member of this group if their idToken has all the claims in this list.
                          For example, a user is considered to be a member of this group if they have defined the following list of membership criteria in their `PortalGroup`:
                          ```yaml
    
                          ...
                           membership:
                             - claims:
                                 - key: type
                                   value: customers
                                 - key: region
                                   value: us-east-1
                             - claims:
                                 - key: type
                                   value: customers
                                 - key: region
                                   value: us-west-1
                          ```
                          and the user has the following claims in their idToken:
                          ```json
                          { "type": "customers", "region": "us-east-1" } or { "type": "customers", "region": "us-west-1" }
                          ```
                          claims within a `Membership` criteria is an AND operation, and the list of `Membership` criteria is an OR operation.
                        properties:
                          claims:
                            description: |-
                              A list of claims that is used to determine whether a user belongs to this group.
                              A user is considered to be a member of this group if their idToken has claims that match all the claims in this list.
                            items:
                              description: A claim that can be used to define a group
                                of users.
                              properties:
                                key:
                                  description: The key of the claim. For example, `customers`
                                    or `region`. This is the key that we will use to match
                                    against the claims in the idToken.
                                  type: string
                                value:
                                  description: The value of the claim.
                                  type: string
                              type: object
                            type: array
                        type: object
                      type: array
                    name:
                      description: The name of the group this is derived from the `PortalGroup`
                        resource
                      type: string
                    usagePlans:
                      description: The names of the usage plans that are visible to this
                        group
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              portalCustomMetadata:
                description: |-
                  Portal level metadata configured by the user in the user facing Portal resource as a JSON value.
                  For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#value).
                x-kubernetes-preserve-unknown-fields: true
              portalRef:
                description: Reference to the Portal resource that this PortalConfig resource
                  is derived from.
                properties:
                  cluster:
                    description: the cluster of the object. If omitted, Gloo Mesh will
                      use the same cluster as the parent object containing this reference.
                    type: string
                  name:
                    description: the name of the object
                    type: string
                  namespace:
                    description: the namespace of the object. If omitted, Gloo Mesh will
                      use the same namespace as the parent object containing this reference.
                    type: string
                type: object
              public:
                description: |-
                  Indicates whether the Portal is public or private, this is based on the visibility setting specified in the
                  `Portal` resource
                type: boolean
              usagePlans:
                description: The list of usage plans that are available across the Portal.
                items:
                  description: A usage plan contains a list of auth policies and one rate
                    limit policy.
                  properties:
                    description:
                      type: string
                    displayName:
                      type: string
                    extAuthPolicies:
                      items:
                        description: |-
                          An ext auth policy identified by its authentication type and contains a list of
                          unique label selectors that are used to identify the set of clients that
                          are authorized to use the auth policy.
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - apiKeyAuth
                            - required:
                              - oidcAuth
                            - required:
                              - accessTokenValidation
                        - required:
                          - apiKeyAuth
                        - required:
                          - oidcAuth
                        - required:
                          - accessTokenValidation
                        properties:
                          accessTokenValidation:
                            properties:
                              bearerFormat:
                                type: string
                            type: object
                          apiKeyAuth:
                            properties:
                              extAuthLabelSelector:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                          authConfigId:
                            type: string
                          extAuthPolicyRef:
                            properties:
                              cluster:
                                description: the cluster of the object. If omitted, Gloo
                                  Mesh will use the same cluster as the parent object
                                  containing this reference.
                                type: string
                              name:
                                description: the name of the object
                                type: string
                              namespace:
                                description: the namespace of the object. If omitted,
                                  Gloo Mesh will use the same namespace as the parent
                                  object containing this reference.
                                type: string
                            type: object
                          oidcAuth:
                            properties:
                              wellKnownOpenidConfig:
                                type: string
                            type: object
                        type: object
                      type: array
                    name:
                      type: string
                    rateLimitPolicy:
                      properties:
                        rateLimitPolicyRef:
                          properties:
                            cluster:
                              description: the cluster of the object. If omitted, Gloo
                                Mesh will use the same cluster as the parent object containing
                                this reference.
                              type: string
                            name:
                              description: the name of the object
                              type: string
                            namespace:
                              description: the namespace of the object. If omitted, Gloo
                                Mesh will use the same namespace as the parent object
                                containing this reference.
                              type: string
                          type: object
                        requestsPerUnit:
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        unit:
                          enum:
                          - UNKNOWN
                          - SECOND
                          - MINUTE
                          - HOUR
                          - DAY
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          status:
            description: The status of the resource after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              ownedByWorkspace:
                description: The name of the workspace that owns the PortalConfig schema.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/internal.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 9f657752618d8112
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: xdsconfigs.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: XdsConfig
    listKind: XdsConfigList
    plural: xdsconfigs
    shortNames:
    - xc
    singular: xdsconfig
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              XdsConfigs are used to issue xDS Configuration Resources to running Envoy instances.
              They are created by Gloo Mesh for processing by an agent running on managed clusters.
    
              The agent will serve the specified xDS configuration resources on its grpc-xds port (default 9977)
              to the Envoy instances (nodes) defined in the XDSConfigSpec.
    
              This feature is currently only available in Gloo Mesh Enterprise.
            properties:
              types:
                description: |-
                  The xDS resources to serve to the nodes.
                  Mapped by type URL.
                items:
                  description: A set of resources of a single type (typeURL).
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              workloads:
                description: The Workloads that will receive this xDS Configuration.
                items:
                  description: Resource reference for an object
                  properties:
                    name:
                      description: name of the resource being referenced
                      type: string
                    namespace:
                      description: namespace of the resource being referenced
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: The XdsConfig status is written by the CertificateRequesting
              agent.
            properties:
              error:
                description: |-
                  Any error observed which prevented the XdsConfig from being processed.
                  If the error is empty, the request has been processed successfully.
                type: string
              observedGeneration:
                description: |-
                  The most recent generation observed in the XdsConfig metadata.
                  If the `observedGeneration` does not match `metadata.generation`, the Gloo Mesh agent has not processed the most
                  recent version of this XdsConfig.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/networking.gloo.solo.io_crds.yaml
# Code generated by skv2. DO NOT EDIT.
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 5f561ac167d344ea
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: externalendpoints.networking.gloo.solo.io
spec:
  group: networking.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ExternalEndpoint
    listKind: ExternalEndpointList
    plural: externalendpoints
    shortNames:
    - ep
    singular: externalendpoint
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: ExternalEndpoint defines a static IP for routing which exist
              outside the mesh. ExternalEndpoints provide a mechanism for direct resolution
              of the addresses backing ExternalServices.
            properties:
              address:
                description: |-
                  Address associated with the network endpoint without the
                  port.  Domain names can be used if and only if the resolution is set
                  to DNS, and must be fully-qualified without wildcards. Use the form
                  unix:///absolute/path/to/socket for Unix domain socket endpoints.
                type: string
              locality:
                description: |-
                  The locality associated with the endpoint. A locality corresponds
                  to a failure domain (e.g., country/region/zone). Arbitrary failure
                  domain hierarchies can be represented by separating each
                  encapsulating failure domain by /. For example, the locality of an
                  an endpoint in US, in US-East-1 region, within availability zone
                  az-1, in data center rack r11 can be represented as
                  us/us-east-1/az-1/r11. Istio will configure the sidecar to route to
                  endpoints within the same locality as the sidecar. If none of the
                  endpoints in the locality are available, endpoints parent locality
                  (but within the same network ID) will be chosen. For example, if
                  there are two endpoints in same network (networkID "n1"), say e1
                  with locality us/us-east-1/az-1/r11 and e2 with locality
                  us/us-east-1/az-2/r12, a sidecar from us/us-east-1/az-1/r11 locality
                  will prefer e1 from the same locality over e2 from a different
                  locality. Endpoint e2 could be the IP associated with a gateway
                  (that bridges networks n1 and n2), or the IP associated with a
                  standard service endpoint.
                properties:
                  region:
                    description: |-
                      Represents a large geographic area, such as us-east1. A region typically contains a number of availability zones.
                      A workload's region is determined by the value of the "topology.kubernetes.io/region" label (or the deprecated
                      "failure-domain.beta.kubernetes.io/region" one) of the Node
                      that is running it.
                    type: string
                  subZone:
                    description: |-
                      A zone can be divided into sub-zones to have even more fine-grained control over load balancing behavior.
                      The sub-zone concept doesn't exist in Kubernetes. This value is derived by the Istio-specific
                      "topology.istio.io/subzone" Node label.
                    type: string
                  zone:
                    description: |-
                      Represents an availability zone within a region, e.g. us-east-1a.
                      A workload's zone is determined by the value of the "topology.kubernetes.io/zone" label (or the deprecated
                      "failure-domain.beta.kubernetes.io/zone" one) of the Node that is running it.
                    type: string
                type: object
              ports:
                description: Set of ports on which the ExternalEndpoint's address receives
                  traffic.
                items:
                  description: a port on an ExternalEndpoint
                  properties:
                    name:
                      description: name of the port. required if more then one port is
                        specified on the ExternalEndpoint
                      type: string
                    number:
                      description: the port number.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                type: array
            type: object
          status:
            description: The status of the resource after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/networking.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 9f65d167c95799ed
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: externalservices.networking.gloo.solo.io
spec:
  group: networking.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ExternalService
    listKind: ExternalServiceList
    plural: externalservices
    shortNames:
    - es
    singular: externalservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              ExternalService defines a destination for routing which exist outside the mesh.
              This could for example be a web API or a set of virtual machines that are not running in Kubernetes.
              When an ExternalService is defined for a given workspace, it can be used as a
              Destination in Routes, as well as called directly via its specified hostname.
              Resolution of the IP addresses for external services can be done via DNS
              or provided statically using the ExternalEndpoint object.
            properties:
              addresses:
                description: |-
                  (mutually exclusive with hosts): The List of ipv4 or ipv6 addresses which will be associated to this service. Can be CIDR prefixes.
                  These addresses must be unique among all ExternalServices within a workspace.
                items:
                  type: string
                type: array
              hosts:
                description: |-
                  (mutually exclusive with addresses): The List of hostnames which will resolve to this service.
                  Both FQDN and wildcard prefix domains are supported.
                  TLS origination to ExternalServices is supported with use of the ClientsideTls property.
                  **Warning**: If you do not use an egress gateway to route all egress traffic through, and you
                  use a wildcard prefix domain for the host without selecting any ExternalEndpoints,
                  the `REGISTRY_ONLY` outbound traffic policy can be bypassed and traffic can be sent to any
                  external service by using a TCP passthrough listener on the sidecar proxy.
                items:
                  type: string
                type: array
              ports:
                description: The associated ports of the external service.
                items:
                  description: Port establishes a new port that will be exposed on an
                    ExternalService.
                  properties:
                    clientsideTls:
                      description: |-
                        The tls config for the given port.
                        If the protocol is HTTPS or TLS, the ExternalService will be configured to use TLS automatically.
                        If used in conjunction with targetPort this can be used for TLS Origination.
                        For example, port: 80, targetPort: 443, with ClientsideTls will cause port 80 traffic from workloads to be forwarded to 443 resulting in HTTPS traffic over the internet with TLS originating at the sidecar proxy.
                      properties:
                        caCertificates:
                          description: |-
                            Should be empty if mode is `ISTIO_MUTUAL`.
                            The file path to the file containing CA certificates used to verify server certificates, which should be mounted onto the proxy of the specific workload communicating with the external service.
                            If omitted, the proxy will not verify the server’s certificate.
                          type: string
                        clientCertificate:
                          description: |-
                            REQUIRED if mode is `MUTUAL`.
                            Should be empty if mode is `ISTIO_MUTUAL`.
                            The file path to the client-side TLS certificate to use, which should be mounted onto the proxy of the specific workload communicating with the external service.
                          type: string
                        credentialName:
                          description: |-
                            The path to the file containing certificate authority certificates to use in verifying a presented server certificate.
                            Should be empty if mode is ISTIO_MUTUAL.
                          type: string
                        insecureSkipVerify:
                          description: |-
                            insecureSkipVerify specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host.
                            The default value of this field is false.
                          nullable: true
                          type: boolean
                        mode:
                          description: |-
                            tls mode passed to corresponding DestinationRules' tls traffic policy
                            MUST be one of the following: SIMPLE, MUTUAL, ISTIO_MUTUAL, DISABLED
                          enum:
                          - SIMPLE
                          - DISABLE
                          - MUTUAL
                          - ISTIO_MUTUAL
                          type: string
                        privateKey:
                          description: |-
                            REQUIRED if mode is `MUTUAL`.
                            Should be empty if mode is `ISTIO_MUTUAL`.
                            The file path to the client’s private key, which should be mounted onto the proxy of the specific workload communicating with the external service.
                          type: string
                        sni:
                          description: |-
                            SNI string to present to the server during TLS handshake.
                            If there is a single host in the hosts list, this will be used as the SNI string.
                          type: string
                      type: object
                    egressGatewayRoutes:
                      description: |-
                        A list of egress VirtualGateways via which this ExternalService is reachable.
                        This is required in meshes that are configured to deny all traffic that is not explicitly allowed.
                        Requires the ExternalService to use Hosts rather than Addresses.
                        Currently only supported for ExternalService ports with HTTP, HTTP2, and HTTPS protocols.
                      properties:
                        portMatch:
                          description: |-
                            The port number to match for traffic originating from the mesh.
                            default to 80.
                            must be unique for each ExternalService port.
                            Note that if this field matches any ExternalService non-egress port (spec.ports.number),
                            requests to this port may not be routed through the egress gateway.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        virtualGatewayRefs:
                          description: |-
                            Reference to the virtual gateways to use for egress.
                            Multiple gateways selected in this way will have egress traffic load-balanced across them.
                          items:
                            description: |-
                              reference to a Kubernetes API object.
                              Kube API objects are referenced explicitly by the namespace and cluster containing them.
                            properties:
                              cluster:
                                description: the cluster of the object. If omitted, Gloo
                                  Mesh will use the same cluster as the parent object
                                  containing this reference.
                                type: string
                              name:
                                description: the name of the object
                                type: string
                              namespace:
                                description: the namespace of the object. If omitted,
                                  Gloo Mesh will use the same namespace as the parent
                                  object containing this reference.
                                type: string
                            type: object
                          type: array
                      type: object
                    name:
                      description: A label for the port, eg "http".
                      type: string
                    number:
                      description: The port number. Must be a valid, non-negative integer
                        port number.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    protocol:
                      description: |-
                        The protocol used in communication with this destination
                        MUST be one of the following: HTTP, HTTPS, GRPC, HTTP2, MONGO, TCP, TLS.
                      type: string
                    targetPort:
                      description: |-
                        (optional): The port number or name used to match the corresponding port on the ExternalService's backing ExternalEndpoints.
                        All of the backing ExternalEndpoints for this ExternalService must contain
                        this port, matching by name or number.
                        If no backing ExternalEndpoints are provided, a name selector is invalid,
                        and requests will be routed to the provided hosts on the port number specified.
                        If unspecified, will default to the value of the port number field above.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                  type: object
                type: array
              selector:
                additionalProperties:
                  type: string
                description: |-
                  Selecting ExternalEndpoints will provide the addresses used for routing traffic to on the ExternalService's hosts.
                  An empty selector will not select any endpoints.
                  If no endpoints are selected, requests will be routed to the provided hosts using dns resolution.
                type: object
              subjectAltNames:
                description: |-
                  A list of alternate names to verify the subject identity in the
                  certificate. If specified, the proxy will verify that the server
                  certificate's subject alt name matches one of the specified values.
                  Only applicable when using TLS to communicate with the ExternalService.
                items:
                  type: string
                type: array
            type: object
          status:
            description: The status of the resource after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numAppliedDestinationPolicies:
                additionalProperties:
                  maximum: 4294967295
                  minimum: 0
                  type: integer
                description: |-
                  A map of policy GVK to policy references for all policies that are applied on this
                  resource.
                type: object
              numSelectedExternalEndpoints:
                description: The number of external endpoints selected by this ExternalService.
                maximum: 4294967295
                minimum: 0
                type: integer
              numSelectedVirtualGateways:
                description: The number of VirtualGateways selected by this ExternalService.
                maximum: 4294967295
                minimum: 0
                type: integer
              ownedByWorkspace:
                description: The name of the workspace that owns this ExternalService.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/networking.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 45e656ce4e08cb56
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: routetables.networking.gloo.solo.io
spec:
  group: networking.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: RouteTable
    listKind: RouteTableList
    plural: routetables
    shortNames:
    - rt
    singular: routetable
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: Specifications for the `RouteTable` resource.
            properties:
              applyToDestinations:
                description: |-
                  Optional: Selectors for destinations that route traffic for this route table via a producer-side policy, such as on waypoint proxies.
    
                  </br>**Implementation notes**: Selecting external workloads (such as VMs), external services, or destinations with sidecars is currently not supported.
    
                  </br>**Configuration constraints**:<ul>
                  <li>If this field is set, `applyToDestinations.kind` must be set to `KUBE`.</li>
                  <li>For delegated child route tables, this field must be empty or unset.
                  The values from the parent route table are always used for destination selection.</li></ul>
                items:
                  description: |-
                    DestinationSelector is a selector for matching routable destinations for routes.
                    DestinationSelectors can select a variety of object types. The behavior of the route action
                    will vary depending on the type of destination selected. Defaults to the kubernetes `v1/Service`.
                    Currently supported destination types:
                    - v1 Service
                    - networking.gloo.solo.io/v2 VirtualDestination (route traffic to a group of backing destinations)
                    - networking.gloo.solo.io/v2 ExternalService (route traffic to a static set of service endpoints external to the mesh)
                  properties:
                    kind:
                      description: The kind of destination being selected. defaults to
                        Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: |-
                        The port on the Destination which receives traffic.
                        All ports on the Destination will be selected if left empty.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                    selector:
                      description: The selector used to match destination objects by their
                        metadata
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If omitted, Gloo selects
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If omitted, Gloo selects
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If omitted, Gloo selects
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If omitted, Gloo selects
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
                x-kubernetes-validations:
                - message: Selector kind must be KUBE or not set.
                  rule: self.all(s, !has(s.kind) || s.kind == 'KUBE')
              defaultDestination:
                description: |-
                  Optional: Routes that do not specify a destination forward traffic to this destination.
                  This field applies only to `forwardTo` routes.
    
                  </br>**Configuration constraints**:<ul>
                  <li>If you define a `http.forwardTo`, `tcp.forwardTo`, or `tls.forwardTo` action that does not specify at least one destination, you must set this field.</li>
                  <li>The `subset` must not be set to the empty object `{}`.</li></ul>
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - ref
                    - required:
                      - awsLambda
                - required:
                  - ref
                - required:
                  - awsLambda
                properties:
                  awsLambda:
                    description: Reference an AWS Lambda function.
                    properties:
                      cloudProvider:
                        description: Reference to the AWS Cloud Provider.
                        properties:
                          cluster:
                            description: the cluster of the object. If omitted, Gloo Mesh
                              will use the same cluster as the parent object containing
                              this reference.
                            type: string
                          name:
                            description: the name of the object
                            type: string
                          namespace:
                            description: the namespace of the object. If omitted, Gloo
                              Mesh will use the same namespace as the parent object containing
                              this reference.
                            type: string
                        type: object
                      function:
                        description: Name of the function to reference.
                        type: string
                      options:
                        description: |-
                          Specify how the destinations should be configured, for configuring lambda functions.
                          If the destination config is required for the destination and not provided by the user, Gloo will invalidate the
                          destination and its parent resources.
                        properties:
                          invocationStyle:
                            description: |-
                              Can be either Sync or Async. See [AWS Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html)
                              for more details.
                            enum:
                            - SYNC
                            - ASYNC
                            type: string
                          requestTransformation:
                            enum:
                            - REQUEST_DEFAULT
                            - REQUEST_DISABLE
                            type: string
                          responseTransformation:
                            enum:
                            - RESPONSE_DEFAULT
                            - RESPONSE_DISABLE
                            type: string
                        type: object
                      qualifier:
                        description: Qualifier of the function to reference. Defaults
                          to $LATEST
                        type: string
                    type: object
                  kind:
                    description: |-
                      the kind of Kubernetes destination being referenced. defaults to Service.
                      Only applicable for Kubernetes destinations. For non Kubernetes destinations, this field is ignored.
                    enum:
                    - SERVICE
                    - VIRTUAL_DESTINATION
                    - EXTERNAL_SERVICE
                    type: string
                  port:
                    description: the port on the destination object being targeted. required
                      if the object provides more than one port.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - number
                        - required:
                          - name
                    - required:
                      - number
                    - required:
                      - name
                    properties:
                      name:
                        description: the name of the port on the destination objects being
                          targeted.
                        type: string
                      number:
                        description: the number of the port on the destination objects
                          being targeted.
                        maximum: 65535
                        minimum: 1
                        type: integer
                    type: object
                  ref:
                    description: reference to a Kubernetes destination object by its metadata
                    properties:
                      cluster:
                        description: the cluster of the object. If omitted, Gloo Mesh
                          will use the same cluster as the parent object containing this
                          reference.
                        type: string
                      name:
                        description: the name of the object
                        type: string
                      namespace:
                        description: the namespace of the object. If omitted, Gloo Mesh
                          will use the same namespace as the parent object containing
                          this reference.
                        type: string
                    type: object
                  subset:
                    additionalProperties:
                      type: string
                    description: |-
                      select a subset of the destination's endpoints for routing based on their labels.
                      Only applicable for Kubernetes destinations.
                    type: object
                  weight:
                    description: |-
                      Specify the proportion of traffic to be forwarded to this destination.
                      Weights across all of the `destinations` must sum to 100.
                      Weight is only relevant when used in the context of a route with multiple destinations.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
                x-kubernetes-validations:
                - message: subset must not be an empty map.
                  rule: '!has(self.subset) || self.subset.size() > 0'
              failureMode:
                description: |-
                  The desired behavior when one or more routes in the route table are misconfigured.
    
                  </br>**Configuration constraints**: For delegated child route tables, this field must be empty or unset.
                  This setting is supported only for the parent route table,
                  which controls the behavior for each child route table.
                enum:
                - ROUTE_REPLACEMENT
                - FREEZE_CONFIG
                type: string
              hosts:
                description: |-
                  Optional: One or more hosts for which this route table routes traffic.
                  To avoid potential misconfigurations, fully
                  qualified domain names are recommended instead of short names.
    
                  </br>**Configuration constraints**:<ul>
                  <li>For regular (non-delegated) route tables, this field is required and must specify at least one host.</li>
                  <li>For delegated child route tables, this field must be empty or unset.</li>
                  <li>Wildcards (`*`) are supported only for the left-most segment. Full wildcards (`"*"`) are not supported. For example,
                  `*.foo.com`, `*bar.foo.com`, and `*-bar.foo.com` are valid; `bar.*.com`, `bar*.foo.com`, `bar.foo.*`, and `*` are invalid.</li>
                  <li>Each hostname must follow these requirements:<ul>
                    <li>Hostnames must be 1 - 255 characters in length.</li>
                    <li>The hostname cannot be an empty string.</li>
                    <li>Supported characters are `a-z`, `A-Z`, `0-9`, `-`, and `.`.</li>
                    <li>Each segment separated by a period (`.`) must be 1 - 63 characters in length and cannot start with the `-` character.</li>
                    <li>Each segment must meet the regex `^[a-zA-Z0-9](?:[-a-zA-Z0-9]*[a-zA-Z0-9])?$`.</li>
                    <li>The top-level domain (last segment), such as `com` in `www.example.com`, cannot be all numeric characters.</li>
                    <li>The top-level domain (last segment) can be empty, such as `"istio.io."`.</li></ul></li></ul>
                items:
                  type: string
                type: array
              http:
                description: |-
                  The HTTP routes that this route table serves. If no routes match the client request,
                  the client receives a 404 error code. For more information on supported HTTP features, see the
                  [Routing overview concept docs]({{< link path="/traffic_management/concepts/routes/" >}}).
    
                  </br>**Configuration constraints**: At least one of `http`, `tcp`, or `tls` must be set.
                items:
                  description: |-
                    Use HTTP routes to control Layer 7 application level traffic to your services. To configure HTTP routes, you pair together
                    HTTP request `matchers` with certain actions. Matchers are criteria such as a route name, port, header, or method to match
                    with an incoming request. Actions describe what to do with a matching request, such as `forwardTo` a destination or `delegate`
                    to another route table. You can add metadata such as names and labels to your HTTP routes so that you can apply policies,
                    track metrics, and better manage the routes.
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - forwardTo
                      - required:
                        - delegate
                      - required:
                        - redirect
                      - required:
                        - directResponse
                      - required:
                        - graphql
                  - required:
                    - forwardTo
                  - required:
                    - delegate
                  - required:
                    - redirect
                  - required:
                    - directResponse
                  - required:
                    - graphql
                  properties:
                    delegate:
                      description: Delegate routing decisions to one or more HTTP route
                        tables.
                      properties:
                        allowedRoutes:
                          description: |-
                            Optional: Restrict delegation to the route tables that match the set of route filter criteria specified.
                            If omitted, any route can be referenced by this route table.
                          items:
                            properties:
                              cloudProvider:
                                description: 'Optional: filter out route tables that specify
                                  CloudProvider functionality, if provided.'
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - aws
                                - required:
                                  - aws
                                properties:
                                  aws:
                                    description: |-
                                      Optional: filter out route tables that use AWS functionality, if provided. Each evaluated route must match at
                                      at least one of every repeated field provided, if not empty.
                                    properties:
                                      accountIds:
                                        description: 'Optional: filter out route tables
                                          that use an AWS account ID which does not match
                                          the selector, if provided.'
                                        items:
                                          type: string
                                        type: array
                                      iamRoles:
                                        description: |-
                                          Optional: filter out route tables that use IAM invoke roles which do not match the selector, if provided.
                                          Regex supported.
                                        items:
                                          type: string
                                        type: array
                                      lambdaFunctions:
                                        description: |-
                                          Optional: filter out route tables that use backend Lambda functions that do no match the selector,
                                          if provided. Regex supported.
                                        items:
                                          type: string
                                        type: array
                                      regions:
                                        description: 'Optional: filter out route tables
                                          that use regions which do not match the selector,
                                          if provided.'
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                type: object
                            type: object
                          type: array
                        routeTables:
                          description: |-
                            Delegate to the route tables that match the given selectors.
                            Selected route tables are ordered by creation time stamp in ascending order.
                            Route tables are selected from both the tables defined within the current workspace and any tables imported into the workspace.
                          items:
                            description: selects zero or more Kubernetes API resources
                              by matching on labels, name, namespace, cluster, and workspace.
                            properties:
                              cluster:
                                description: |-
                                  Only select objects in the matching cluster. If omitted, Gloo selects
                                  matching objects across all clusters available in the parent object's workspace.
                                type: string
                              labels:
                                additionalProperties:
                                  type: string
                                description: labels matching those of the object
                                type: object
                              name:
                                description: |-
                                  Only select objects with the matching name. If omitted, Gloo selects
                                  matching objects with any name available in the parent object's workspace.
                                type: string
                              namespace:
                                description: |-
                                  Only select objects in the matching namespace. If omitted, Gloo selects
                                  matching objects across all namespaces available in the parent object's workspace.
                                type: string
                              workspace:
                                description: |-
                                  Only select objects in the given workspace. If omitted, Gloo selects
                                  matching objects across all workspaces available in the parent object's workspace.
                                type: string
                            type: object
                          type: array
                        sortMethod:
                          description: The method by which routes across delegated route
                            tables are sorted.
                          enum:
                          - TABLE_WEIGHT
                          - ROUTE_SPECIFICITY
                          type: string
                      type: object
                    directResponse:
                      description: Respond directly to the client from the proxy.
                      properties:
                        body:
                          description: |-
                            The content of the response body. If omitted,
                            no body is included in the generated response.
    
                            </br>**Configuration constraints**: Must be less than 1MB in size.
                          maxLength: 1048576
                          type: string
                        status:
                          description: |-
                            The HTTP response status code to return.
    
                            </br>**Configuration constraints**:<ul>
                            <li>This field is required.</li>
                            <li>The value must be 200 - 599, inclusive.</li>
                          maximum: 599
                          minimum: 100
                          type: integer
                      required:
                      - status
                      type: object
                    forwardTo:
                      allOf:
                      - oneOf:
                        - not:
                            anyOf:
                            - required:
                              - pathRewrite
                            - required:
                              - regexRewrite
                        - required:
                          - pathRewrite
                        - required:
                          - regexRewrite
                      - oneOf:
                        - not:
                            anyOf:
                            - required:
                              - hostRewrite
                            - required:
                              - autoHostRewrite
                        - required:
                          - hostRewrite
                        - required:
                          - autoHostRewrite
                      description: Forward traffic to one or more destination services.
                      properties:
                        autoHostRewrite:
                          description: |-
                            Automatically replace the Authority/Host header with the hostname of the upstream destination. Note
                            that host rewrites are available for HTTP routes only and are not supported for TCP routes.
                          type: boolean
                        destinations:
                          description: |-
                            Define the upstream destination to route the request to. Some destinations require additional configuration for
                            the route. For example, to forward requests to a CloudProvider for an AWS Lambda, you must also set a `function`.
                            HTTP routes support all destinations types. TCP routes support only Kubernetes services and Gloo VirtualDestinations.
    
                            </br>**Configuration constraints**:<ul>
                            <li>If `defaultDestination` is empty, you must specify at least one destination in this field.</li>
                            <li>A destination `subset` must not be set to the empty object `{}`.</li>
                            <li>You can optionally specify a destination `weight` to indicate the proportion of traffic
                            to forward to this destination. Weights across all destinations must sum to 100.
                            If the sum is less than 100, the remainder is distributed across destinations that do not specify a weight,
                            with a minimum of 1 weight per destination. Destination weight examples:<ul>
                            <li>Valid example: Port 80 specifies a weight of `50`, port 81 a weight of `25`, and port 82 a weight of `25`.
                            All weights equal 100. 50% of traffic is forwarded to port 80,
                            25% to 81, and 25% to 82.</li>
                            <li>Valid example: Port 80 specifies a weight of `50`, port 81 a weight of `25`, and port 82 does not
                            specify a weight. All weights equal 75, and the remaining 25% is assigned to port 82.</li>
                            <li>Invalid example: Port 80 specifies a weight of `50`, port 81 a weight of `50`, and port 82 a weight
                            of `25`. All weights equal 125.</li>
                            <li>Invalid example: Port 80 specifies a weight of `50`, port 81 a weight of `50`, and port 82 does not
                            specify a weight. All weights equal 100, but no remainder exists for port 82.</li></ul></li></ul>
                          items:
                            description: |-
                              Destinations point to the upstream services that fulfill client requests on matching routes that you set up, such as in a route table. Each destination must resolve to one and only one hostname.
    
                              Destinations can refer to a variety of resources. The behavior of the route action
                              varies depending on the kind of destination.
    
                              Currently supported destination types are:
                              - Kubernetes `Service`, the default destination.
                              - Gloo `VirtualDestination` to route traffic to one of the VirtualDestination's backing Kubernetes services.
                              - Gloo `ExternalService` to route traffic to a static set of service endpoints that are external to your mesh setup.
                              - Gloo `ExternalWorkload` to route traffic to external workloads that are part of your mesh.
                              - Gloo `CloudProvider` to route traffic to a cloud provider function such as AWS Lambdas, selected by using the `functionCall` field.
    
                              HTTP routes support all destinations. TCP routes support only Kubernetes `Service` and Gloo `VirtualDestination` destinations.
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - ref
                                - required:
                                  - awsLambda
                            - required:
                              - ref
                            - required:
                              - awsLambda
                            properties:
                              awsLambda:
                                description: Reference an AWS Lambda function.
                                properties:
                                  cloudProvider:
                                    description: Reference to the AWS Cloud Provider.
                                    properties:
                                      cluster:
                                        description: the cluster of the object. If omitted,
                                          Gloo Mesh will use the same cluster as the parent
                                          object containing this reference.
                                        type: string
                                      name:
                                        description: the name of the object
                                        type: string
                                      namespace:
                                        description: the namespace of the object. If omitted,
                                          Gloo Mesh will use the same namespace as the
                                          parent object containing this reference.
                                        type: string
                                    type: object
                                  function:
                                    description: Name of the function to reference.
                                    type: string
                                  options:
                                    description: |-
                                      Specify how the destinations should be configured, for configuring lambda functions.
                                      If the destination config is required for the destination and not provided by the user, Gloo will invalidate the
                                      destination and its parent resources.
                                    properties:
                                      invocationStyle:
                                        description: |-
                                          Can be either Sync or Async. See [AWS Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html)
                                          for more details.
                                        enum:
                                        - SYNC
                                        - ASYNC
                                        type: string
                                      requestTransformation:
                                        enum:
                                        - REQUEST_DEFAULT
                                        - REQUEST_DISABLE
                                        type: string
                                      responseTransformation:
                                        enum:
                                        - RESPONSE_DEFAULT
                                        - RESPONSE_DISABLE
                                        type: string
                                    type: object
                                  qualifier:
                                    description: Qualifier of the function to reference.
                                      Defaults to $LATEST
                                    type: string
                                type: object
                              kind:
                                description: |-
                                  the kind of Kubernetes destination being referenced. defaults to Service.
                                  Only applicable for Kubernetes destinations. For non Kubernetes destinations, this field is ignored.
                                enum:
                                - SERVICE
                                - VIRTUAL_DESTINATION
                                - EXTERNAL_SERVICE
                                type: string
                              port:
                                description: the port on the destination object being
                                  targeted. required if the object provides more than
                                  one port.
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - number
                                    - required:
                                      - name
                                - required:
                                  - number
                                - required:
                                  - name
                                properties:
                                  name:
                                    description: the name of the port on the destination
                                      objects being targeted.
                                    type: string
                                  number:
                                    description: the number of the port on the destination
                                      objects being targeted.
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                type: object
                              ref:
                                description: reference to a Kubernetes destination object
                                  by its metadata
                                properties:
                                  cluster:
                                    description: the cluster of the object. If omitted,
                                      Gloo Mesh will use the same cluster as the parent
                                      object containing this reference.
                                    type: string
                                  name:
                                    description: the name of the object
                                    type: string
                                  namespace:
                                    description: the namespace of the object. If omitted,
                                      Gloo Mesh will use the same namespace as the parent
                                      object containing this reference.
                                    type: string
                                type: object
                              subset:
                                additionalProperties:
                                  type: string
                                description: |-
                                  select a subset of the destination's endpoints for routing based on their labels.
                                  Only applicable for Kubernetes destinations.
                                type: object
                              weight:
                                description: |-
                                  Specify the proportion of traffic to be forwarded to this destination.
                                  Weights across all of the `destinations` must sum to 100.
                                  Weight is only relevant when used in the context of a route with multiple destinations.
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                            type: object
                          maxItems: 99
                          type: array
                          x-kubernetes-validations:
                          - message: Destination subset must not be an empty map.
                            rule: self.all(d, !has(d.subset) || d.subset.size() > 0)
                        hostRewrite:
                          description: |-
                            Replace the Authority/Host header with this value before forwarding the request to the upstream destination.
    
                            </br>**Configuration constraints**:<ul>
                            <li>Supported for HTTP routes only. Unsupported for TCP routes.</li>
                            <li>Hostnames must be 1 - 255 characters in length.</li>
                            <li>Supported characters are `a-z`, `A-Z`, `0-9`, `-`, and `.`.</li>
                            <li>Each segment separated by a period (`.`) must be 1 - 63 characters in length and cannot start with the `-` character.</li></ul>
                          type: string
                        pathRewrite:
                          description: |-
                            Replace the path specified in the matcher with this value before forwarding the request to the upstream destination.
                            When a prefix matcher is used, only the prefix portion of the path is rewritten. When an exact matcher is used,
                            the whole path is replaced. Rewriting the path when a regex matcher is used is currently unsupported. Note that path
                            rewrites are available for HTTP routes only and are not supported for TCP routes.
                          type: string
                        regexRewrite:
                          description: |-
                            During forwarding, portions of the path that match the pattern are rewritten, even allowing the substitution
                            of capture groups from the pattern into the new path as specified by the rewrite substitution string. This substitution is useful
                            to allow application paths to be rewritten in a way that is aware of segments with variable content like identifiers.
                            Note that regex rewrites are available for RE2 syntax and HTTP routes only.
    
                            </br>**Configuration constraints**: The value must follow a valid RE2 regex pattern.
                          properties:
                            pattern:
                              description: |-
                                The regular expression used to find portions of a string (hereafter called
                                the "subject string") that should be replaced. When a new string is
                                produced during the substitution operation, the new string is initially
                                the same as the subject string, but then all matches in the subject string
                                are replaced by the substitution string. If replacing all matches isn't
                                desired, regular expression anchors can be used to ensure a single match,
                                so as to replace just one occurrence of a pattern. Capture groups can be
                                used in the pattern to extract portions of the subject string, and then
                                referenced in the substitution string.
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - googleRe2
                              - required:
                                - googleRe2
                              properties:
                                googleRe2:
                                  description: Google's RE2 regex engine.
                                  properties:
                                    maxProgramSize:
                                      description: |-
                                        This field controls the RE2 "program size" which is a rough estimate of how complex a
                                        compiled regex is to evaluate. A regex that has a program size greater than the configured
                                        value will fail to compile. In this case, the configured max program size can be increased
                                        or the regex can be simplified. If not specified, the default is 100.
    
                                        This field is deprecated; regexp validation should be performed on the management server
                                        instead of being done by each individual client.
                                      maximum: 4294967295
                                      minimum: 0
                                      nullable: true
                                      type: integer
                                  type: object
                                regex:
                                  description: The regex match string. The string must
                                    be supported by the configured engine.
                                  type: string
                              type: object
                            substitution:
                              description: |-
                                The string that should be substituted into matching portions of the
                                subject string during a substitution operation to produce a new string.
                                Capture groups in the pattern can be referenced in the substitution
                                string. Note, however, that the syntax for referring to capture groups is
                                defined by the chosen regular expression engine. Google's `RE2
                                <https://github.com/google/re2>`_ regular expression engine uses a
                                backslash followed by the capture group number to denote a numbered
                                capture group. E.g., ``\1`` refers to capture group 1, and ``\2`` refers
                                to capture group 2.
                              type: string
                          type: object
                      type: object
                    graphql:
                      description: Handle the HTTP request as a GraphQL request, including
                        query validation and execution of the GraphQL request.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - schema
                          - required:
                            - stitchedSchema
                      - required:
                        - schema
                      - required:
                        - stitchedSchema
                      properties:
                        options:
                          description: Options that apply to this GraphQL Schema.
                          properties:
                            logSensitiveInfo:
                              description: |-
                                Include information about request/response in the envoy debug logs.
                                This is helpful for debugging GraphQL.
                                Defaults to false.
                              nullable: true
                              type: boolean
                          type: object
                        schema:
                          description: Reference to a GraphQLSchema resource that contains
                            the configuration for this subschema.
                          properties:
                            clusterName:
                              description: name of the cluster in which the resource exists
                              type: string
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                        stitchedSchema:
                          description: Reference to a GraphQLStitchedSchema resource that
                            contains the configuration for this subschema.
                          properties:
                            clusterName:
                              description: name of the cluster in which the resource exists
                              type: string
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: |-
                        Labels for the route, which you can use to apply policies that support `routeSelectors`.
    
                        For enhanced security, include the special label `gateway.gloo.solo.io/require_auth=true`
                        on the route. To activate this security feature, enable the `gatewayDefaultDenyAllHTTPRequests`
                        feature flag for your Gloo installation. When both the label and feature flag are in place, Gloo
                        requires an authentication policy, such as ExtAuthPolicy or JWTPolicy, to be applied to the route.
                        If the authentication policy is removed or has an error, Gloo rejects all requests to the route.
    
                        For more information about the value format, see
                        [Syntax and character set in the Kubernetes docs](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set).
    
                        </br>**Configuration constraints**:<ul>
                        <li>Key constraints:<ul>
                          <li>Cannot be empty</li>
                          <li>Must have two segments separated by a slash (`/`)</li>
                          <li>First segment constraints:<ul>
                            <li>Cannot be empty</li>
                            <li>Max length of 253 characters</li>
                            <li>Supported characters include `a-z`, `A-Z`, `0-9`, `-`, and `.`</li></ul></li>
                          <li>Second segment constraints:<ul>
                            <li>Cannot be empty</li>
                            <li>Max length of 63 characters</li>
                            <li>Must begin and end with an alphanumeric character (`a-z`, `A-Z`, or `0-9`)</li>
                            <li>Supported characters include `a-z`, `A-Z`, `0-9`, `-`, `_`, and `.`</li></ul></li></ul></li>
                        <li>Value constraints:<ul>
                          <li>Can be empty</li>
                          <li>Max length of 63 characters</li>
                          <li>Unless empty, must begin and end with an alphanumeric character (`a-z`, `A-Z`, or `0-9`)</li>
                          <li>Supported characters include `a-z`, `A-Z`, `0-9`, `-`, `_`, and `.`</li></ul></li></ul>
                      type: object
                    matchers:
                      description: |-
                        Request matchers that this route matches on. If none are specified, the route matches any HTTP traffic.
                        For delegated child route tables, this route matches only traffic that includes both the parent and child's matchers.
                        If these matchers conflict, the delegating route on the parent table is replaced with a `directResponse` that indicates the misconfiguration.
                      items:
                        description: Specify HTTP request level match criteria. All specified
                          conditions must be satisfied for a match to occur.
                        properties:
                          headers:
                            description: 'Optional: Specify a set of headers which requests
                              must match in entirety (all headers must match).'
                            items:
                              description: Describes a matcher against HTTP request headers.
                              properties:
                                invertMatch:
                                  description: |-
                                    If set to true, the result of the match will be inverted. Defaults to false.
    
                                    Examples:
    
                                    - name=foo, invert_match=true: matches if no header named `foo` is present
                                    - name=foo, value=bar, invert_match=true: matches if no header named `foo` with value `bar` is present
                                    - name=foo, value=``\d{3}``, regex=true, invert_match=true: matches if no header named `foo` with a value consisting of three integers is present.
                                  type: boolean
                                name:
                                  description: Specify the name of the header in the request.
                                  type: string
                                regex:
                                  description: Specify whether the header value should
                                    be treated as regex.
                                  type: boolean
                                value:
                                  description: |-
                                    Specify the value of the header. If the value is absent a request that
                                    has the name header will match, regardless of the header’s value.
                                  type: string
                              type: object
                            type: array
                          method:
                            description: 'Optional: Specify an HTTP method to match against.'
                            type: string
                          name:
                            description: 'UNSUPPORTED: Name matching is currently unsupported.'
                            type: string
                          port:
                            description: 'Optional: Specifies ports on the host to match
                              against.'
                            maximum: 65535
                            minimum: 0
                            type: integer
                          queryParameters:
                            description: 'Optional: Specify a set of URL query parameters
                              which requests must match in entirety (all query params
                              must match).'
                            items:
                              description: Specify match criteria against the target URL's
                                query parameters.
                              properties:
                                name:
                                  description: Specify the name of a key that must be
                                    present in the requested path's query string.
                                  type: string
                                regex:
                                  description: If true, treat `value` as a regular expression.
                                  type: boolean
                                value:
                                  description: Specify the value of the query parameter
                                    keyed on `name`.
                                  type: string
                              type: object
                            type: array
                          uri:
                            description: 'Optional: Specify match criteria against the
                              targeted path.'
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - exact
                                - required:
                                  - prefix
                                - required:
                                  - regex
                                - required:
                                  - suffix
                            - required:
                              - exact
                            - required:
                              - prefix
                            - required:
                              - regex
                            - required:
                              - suffix
                            properties:
                              exact:
                                description: Exact string match.
                                type: string
                              ignoreCase:
                                description: If true, indicates the exact/prefix/suffix
                                  matching should be case insensitive. This has no effect
                                  for the regex match.
                                type: boolean
                              prefix:
                                description: Prefix-based match.
                                type: string
                              regex:
                                description: '[Re2 style regex-based match](https://github.com/google/re2/wiki/).'
                                type: string
                              suffix:
                                description: Warning! Suffix-based matching is not currently
                                  supported in Gloo Platform.
                                type: string
                            type: object
                        type: object
                      type: array
                    name:
                      description: |-
                        Unique name of the route within the route table. This name is used to identify the route in metrics collection.
    
                        </br>**Configuration constraints**:<ul>
                        <li>If the value begins with the prefix `insecure-`, this prefix is trimmed.</li>
                        <li>The value must be unique to other routes that are listed in the `http` section of this route table.
                        If it is not unique, it is renamed to `duplicate-<previous-name>-<increment>`,
                        such as `duplicate-myname-1`.</li></ul>
                      type: string
                    redirect:
                      description: Return a redirect response to the downstream client.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - pathRedirect
                      - required:
                        - pathRedirect
                      properties:
                        hostRedirect:
                          description: |-
                            The host portion of the URL is swapped with this value.
    
                            </br>**Configuration constraints**:<ul>
                            <li>Hostnames must be 1 - 255 characters in length</li>
                            <li>Supported characters are `a-z`, `A-Z`, `0-9`, `-`, and `.`.</li>
                            <li>Each segment separated by a period (`.`) must be 1 - 63 characters in length and cannot start with the `-` character.</li></ul>
                          type: string
                        pathRedirect:
                          description: The entire path portion of the URL is overwritten
                            with this value.
                          type: string
                        responseCode:
                          description: |-
                            The HTTP status code to use in the redirect response. The default response
                            code is MOVED_PERMANENTLY (301).
                          enum:
                          - MOVED_PERMANENTLY
                          - FOUND
                          - SEE_OTHER
                          - TEMPORARY_REDIRECT
                          - PERMANENT_REDIRECT
                          type: string
                      type: object
                  type: object
                maxItems: 10000
                type: array
              portalMetadata:
                description: |-
                  Optional: If this route table bundles APIs that you want to expose in a developer portal, you can set portal metadata.
                  Portal metadata is a set of key-value pairs that describe your APIs.
                  Later, your developer portal displays this information in the end-user facing API documentation.
                properties:
                  apiProductDisplayName:
                    description: |-
                      Give a name for the API product to display in the frontend portal. If omitted, the `apiProductId` value is used as the display name.
                      If `api_product_display_name` is set to a different value in each route table that has the same `apiProductId` value,
                      then the `api_product_display_name` value from the route table with the oldest creation timestamp is used.
                    type: string
                  apiProductId:
                    description: |-
                      Group APIs from multiple route tables together as an API product in the portal.
                      For example, you might have separate route tables that route to different `v1` and `v2` versions of your `billing` services that have their own OpenAPI specs.
                      By setting the `apiProductId` metadata to the same `billing-api` value in each route table,
                      the [/apis](https://docs.solo.io/gloo-mesh-gateway/main/portal/redocly.html#tag/APIs/operation/ListAPIs) endpoint in the portal server returns the same `apiProduct` in the response.
                      Then, these APIs are grouped together and shown as a single `billing` API product with multiple `v1` and `v2` versions in the frontend portal for your end users to discover and use.
    
                      </br>**Configuration constraints**:<ul>
                      <li>This field is required when using Gloo Portal.</li>
                      <li>The value cannot contain spaces.</li></ul>
                    type: string
                    x-kubernetes-validations:
                    - message: Must not contain spaces.
                      rule: '!self.contains('' '')'
                  apiVersion:
                    description: |-
                      The version of the API in context of the API Product.
                      You cannot have multiple `apiVersion` values for the same `apiProductId` value, and you must set `apiProductId` to use `apiVersion`.
                      For example, if you have two route tables that both set `apiProductId` to `billing-api`,
                      then one route table can also set `apiVersion` to `v1` and the other to `v2`.
                      However, both route tables cannot set the `apiVersion` to `v1`.
    
                      </br>**Configuration constraints**: This field is required when using Gloo Portal.
                    type: string
                  contact:
                    description: |-
                      Contact information for the openAPI specification for this API.
    
                      </br>**Configuration constraints**: The value must be an email address.
                    type: string
                  customMetadata:
                    additionalProperties:
                      type: string
                    description: |-
                      Key-value pairs of any custom metadata that you want to show end users in the frontend portal for this API product.
                      In particular, you might provide information about your API lifecycle management policies,
                      such as `phase=supported`, `phase=deprecated`, `compatibility=backwards`, or other product information.
                      Furthermore, the key-value pairs are added to the API Usage & Analytics data for incoming requests to this API product.
                    type: object
                  description:
                    description: |-
                      The description of the openAPI specification for this API.
                      For rich text representation, you can use [CommonMark](https://spec.commonmark.org/) syntax.
                    type: string
                  license:
                    description: |-
                      The license of the openAPI specification for this API.
                      </br></br>**Note**: Currently, the value must be the license name, not a URL.
                    type: string
                  lifecycle:
                    description: The current lifecycle stage of the API.
                    type: string
                  termsOfService:
                    description: |-
                      The terms of service of the openAPI specification for this API.
    
                      </br>**Configuration constraints**: The value must be a URL.
                    type: string
                  title:
                    description: The title of the openAPI specification for this API.
                    type: string
                required:
                - apiProductId
                - apiVersion
                type: object
              tcp:
                description: |-
                  The TCP routes that this route table serves. TCP routes are available only for internal
                  traffic within the cluster, not for ingress gateway traffic. For more information on supported
                  TCP features, see the [Routing overview concept docs]({{< link path="/traffic_management/concepts/routes/" >}}).
    
                  </br>**Configuration constraints**: At least one of `http`, `tcp`, or `tls` must be set.
                items:
                  description: |-
                    Use TCP routes to control lower-level, connection-based traffic to services such as a local database.
                    TCP routes are available only for internal traffic within the cluster, not for ingress gateway traffic.
                    To configure TCP routes, you pair together TCP request `matchers` with certain actions.
                    Matchers are criteria, such as a port, to match with an incoming request.
                    Actions describe what to do with a matching request, such as `forwardTo` a destination.
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - forwardTo
                  - required:
                    - forwardTo
                  properties:
                    forwardTo:
                      allOf:
                      - oneOf:
                        - not:
                            anyOf:
                            - required:
                              - pathRewrite
                            - required:
                              - regexRewrite
                        - required:
                          - pathRewrite
                        - required:
                          - regexRewrite
                      - oneOf:
                        - not:
                            anyOf:
                            - required:
                              - hostRewrite
                            - required:
                              - autoHostRewrite
                        - required:
                          - hostRewrite
                        - required:
                          - autoHostRewrite
                      description: |-
                        Forward traffic to one or more destination services. Note that some `forwardTo` actions, such as path or host rewrite, are not
                        supported for TCP routes.
    
                        </br>**Configuration constraints**: This field is required, and you must specify at least one destination.
                      properties:
                        autoHostRewrite:
                          description: |-
                            Automatically replace the Authority/Host header with the hostname of the upstream destination. Note
                            that host rewrites are available for HTTP routes only and are not supported for TCP routes.
                          type: boolean
                        destinations:
                          description: |-
                            Define the upstream destination to route the request to. Some destinations require additional configuration for
                            the route. For example, to forward requests to a CloudProvider for an AWS Lambda, you must also set a `function`.
                            HTTP routes support all destinations types. TCP routes support only Kubernetes services and Gloo VirtualDestinations.
    
                            </br>**Configuration constraints**:<ul>
                            <li>If `defaultDestination` is empty, you must specify at least one destination in this field.</li>
                            <li>A destination `subset` must not be set to the empty object `{}`.</li>
                            <li>You can optionally specify a destination `weight` to indicate the proportion of traffic
                            to forward to this destination. Weights across all destinations must sum to 100.
                            If the sum is less than 100, the remainder is distributed across destinations that do not specify a weight,
                            with a minimum of 1 weight per destination. Destination weight examples:<ul>
                            <li>Valid example: Port 80 specifies a weight of `50`, port 81 a weight of `25`, and port 82 a weight of `25`.
                            All weights equal 100. 50% of traffic is forwarded to port 80,
                            25% to 81, and 25% to 82.</li>
                            <li>Valid example: Port 80 specifies a weight of `50`, port 81 a weight of `25`, and port 82 does not
                            specify a weight. All weights equal 75, and the remaining 25% is assigned to port 82.</li>
                            <li>Invalid example: Port 80 specifies a weight of `50`, port 81 a weight of `50`, and port 82 a weight
                            of `25`. All weights equal 125.</li>
                            <li>Invalid example: Port 80 specifies a weight of `50`, port 81 a weight of `50`, and port 82 does not
                            specify a weight. All weights equal 100, but no remainder exists for port 82.</li></ul></li></ul>
                          items:
                            description: |-
                              Destinations point to the upstream services that fulfill client requests on matching routes that you set up, such as in a route table. Each destination must resolve to one and only one hostname.
    
                              Destinations can refer to a variety of resources. The behavior of the route action
                              varies depending on the kind of destination.
    
                              Currently supported destination types are:
                              - Kubernetes `Service`, the default destination.
                              - Gloo `VirtualDestination` to route traffic to one of the VirtualDestination's backing Kubernetes services.
                              - Gloo `ExternalService` to route traffic to a static set of service endpoints that are external to your mesh setup.
                              - Gloo `ExternalWorkload` to route traffic to external workloads that are part of your mesh.
                              - Gloo `CloudProvider` to route traffic to a cloud provider function such as AWS Lambdas, selected by using the `functionCall` field.
    
                              HTTP routes support all destinations. TCP routes support only Kubernetes `Service` and Gloo `VirtualDestination` destinations.
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - ref
                                - required:
                                  - awsLambda
                            - required:
                              - ref
                            - required:
                              - awsLambda
                            properties:
                              awsLambda:
                                description: Reference an AWS Lambda function.
                                properties:
                                  cloudProvider:
                                    description: Reference to the AWS Cloud Provider.
                                    properties:
                                      cluster:
                                        description: the cluster of the object. If omitted,
                                          Gloo Mesh will use the same cluster as the parent
                                          object containing this reference.
                                        type: string
                                      name:
                                        description: the name of the object
                                        type: string
                                      namespace:
                                        description: the namespace of the object. If omitted,
                                          Gloo Mesh will use the same namespace as the
                                          parent object containing this reference.
                                        type: string
                                    type: object
                                  function:
                                    description: Name of the function to reference.
                                    type: string
                                  options:
                                    description: |-
                                      Specify how the destinations should be configured, for configuring lambda functions.
                                      If the destination config is required for the destination and not provided by the user, Gloo will invalidate the
                                      destination and its parent resources.
                                    properties:
                                      invocationStyle:
                                        description: |-
                                          Can be either Sync or Async. See [AWS Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html)
                                          for more details.
                                        enum:
                                        - SYNC
                                        - ASYNC
                                        type: string
                                      requestTransformation:
                                        enum:
                                        - REQUEST_DEFAULT
                                        - REQUEST_DISABLE
                                        type: string
                                      responseTransformation:
                                        enum:
                                        - RESPONSE_DEFAULT
                                        - RESPONSE_DISABLE
                                        type: string
                                    type: object
                                  qualifier:
                                    description: Qualifier of the function to reference.
                                      Defaults to $LATEST
                                    type: string
                                type: object
                              kind:
                                description: |-
                                  the kind of Kubernetes destination being referenced. defaults to Service.
                                  Only applicable for Kubernetes destinations. For non Kubernetes destinations, this field is ignored.
                                enum:
                                - SERVICE
                                - VIRTUAL_DESTINATION
                                - EXTERNAL_SERVICE
                                type: string
                              port:
                                description: the port on the destination object being
                                  targeted. required if the object provides more than
                                  one port.
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - number
                                    - required:
                                      - name
                                - required:
                                  - number
                                - required:
                                  - name
                                properties:
                                  name:
                                    description: the name of the port on the destination
                                      objects being targeted.
                                    type: string
                                  number:
                                    description: the number of the port on the destination
                                      objects being targeted.
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                type: object
                              ref:
                                description: reference to a Kubernetes destination object
                                  by its metadata
                                properties:
                                  cluster:
                                    description: the cluster of the object. If omitted,
                                      Gloo Mesh will use the same cluster as the parent
                                      object containing this reference.
                                    type: string
                                  name:
                                    description: the name of the object
                                    type: string
                                  namespace:
                                    description: the namespace of the object. If omitted,
                                      Gloo Mesh will use the same namespace as the parent
                                      object containing this reference.
                                    type: string
                                type: object
                              subset:
                                additionalProperties:
                                  type: string
                                description: |-
                                  select a subset of the destination's endpoints for routing based on their labels.
                                  Only applicable for Kubernetes destinations.
                                type: object
                              weight:
                                description: |-
                                  Specify the proportion of traffic to be forwarded to this destination.
                                  Weights across all of the `destinations` must sum to 100.
                                  Weight is only relevant when used in the context of a route with multiple destinations.
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                            type: object
                          maxItems: 99
                          type: array
                          x-kubernetes-validations:
                          - message: Destination subset must not be an empty map.
                            rule: self.all(d, !has(d.subset) || d.subset.size() > 0)
                        hostRewrite:
                          description: |-
                            Replace the Authority/Host header with this value before forwarding the request to the upstream destination.
    
                            </br>**Configuration constraints**:<ul>
                            <li>Supported for HTTP routes only. Unsupported for TCP routes.</li>
                            <li>Hostnames must be 1 - 255 characters in length.</li>
                            <li>Supported characters are `a-z`, `A-Z`, `0-9`, `-`, and `.`.</li>
                            <li>Each segment separated by a period (`.`) must be 1 - 63 characters in length and cannot start with the `-` character.</li></ul>
                          type: string
                        pathRewrite:
                          description: |-
                            Replace the path specified in the matcher with this value before forwarding the request to the upstream destination.
                            When a prefix matcher is used, only the prefix portion of the path is rewritten. When an exact matcher is used,
                            the whole path is replaced. Rewriting the path when a regex matcher is used is currently unsupported. Note that path
                            rewrites are available for HTTP routes only and are not supported for TCP routes.
                          type: string
                        regexRewrite:
                          description: |-
                            During forwarding, portions of the path that match the pattern are rewritten, even allowing the substitution
                            of capture groups from the pattern into the new path as specified by the rewrite substitution string. This substitution is useful
                            to allow application paths to be rewritten in a way that is aware of segments with variable content like identifiers.
                            Note that regex rewrites are available for RE2 syntax and HTTP routes only.
    
                            </br>**Configuration constraints**: The value must follow a valid RE2 regex pattern.
                          properties:
                            pattern:
                              description: |-
                                The regular expression used to find portions of a string (hereafter called
                                the "subject string") that should be replaced. When a new string is
                                produced during the substitution operation, the new string is initially
                                the same as the subject string, but then all matches in the subject string
                                are replaced by the substitution string. If replacing all matches isn't
                                desired, regular expression anchors can be used to ensure a single match,
                                so as to replace just one occurrence of a pattern. Capture groups can be
                                used in the pattern to extract portions of the subject string, and then
                                referenced in the substitution string.
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - googleRe2
                              - required:
                                - googleRe2
                              properties:
                                googleRe2:
                                  description: Google's RE2 regex engine.
                                  properties:
                                    maxProgramSize:
                                      description: |-
                                        This field controls the RE2 "program size" which is a rough estimate of how complex a
                                        compiled regex is to evaluate. A regex that has a program size greater than the configured
                                        value will fail to compile. In this case, the configured max program size can be increased
                                        or the regex can be simplified. If not specified, the default is 100.
    
                                        This field is deprecated; regexp validation should be performed on the management server
                                        instead of being done by each individual client.
                                      maximum: 4294967295
                                      minimum: 0
                                      nullable: true
                                      type: integer
                                  type: object
                                regex:
                                  description: The regex match string. The string must
                                    be supported by the configured engine.
                                  type: string
                              type: object
                            substitution:
                              description: |-
                                The string that should be substituted into matching portions of the
                                subject string during a substitution operation to produce a new string.
                                Capture groups in the pattern can be referenced in the substitution
                                string. Note, however, that the syntax for referring to capture groups is
                                defined by the chosen regular expression engine. Google's `RE2
                                <https://github.com/google/re2>`_ regular expression engine uses a
                                backslash followed by the capture group number to denote a numbered
                                capture group. E.g., ``\1`` refers to capture group 1, and ``\2`` refers
                                to capture group 2.
                              type: string
                          type: object
                      type: object
                      x-kubernetes-validations:
                      - message: At least one destination must be specified.
                        rule: has(self.destinations) && 1 <= self.destinations.size()
                          && self.destinations.size() <= 100
                    matchers:
                      description: The set of request matchers for this route to match
                        on.
                      items:
                        description: Specify TCP request matchers. Matchers are criteria
                          such as a port to match with an incoming request.
                        properties:
                          port:
                            description: Specify the port on the host defined in the route
                              table to match with incoming TCP requests.
                            maximum: 65535
                            minimum: 0
                            type: integer
                        type: object
                      type: array
                  required:
                  - forwardTo
                  type: object
                maxItems: 10000
                type: array
              tls:
                description: |-
                  The TLS routes that this route table serves. For more information on supported
                  TLS features, see the [Routing overview concept docs]({{< link path="/traffic_management/concepts/routes/" >}}).
    
                  </br>**Configuration constraints**: At least one of `http`, `tcp`, or `tls` must be set.
                items:
                  description: |-
                    Use TLS routes to route unterminated TLS traffic (TLS/HTTPS) through an ingress gateway or within the cluster, such as for pass-through SNI-routing.
                    You must specify an SNI host in the matcher, and optionally a port on the host.
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - forwardTo
                  - required:
                    - forwardTo
                  properties:
                    forwardTo:
                      description: |-
                        Forward traffic to one or more destination services.
    
                        </br>**Configuration constraints**: This field is required.
                      properties:
                        destinations:
                          description: |-
                            Define the upstream destination to route the request to.
    
                            </br>**Configuration constraints**:<ul>
                            <li>If `defaultDestination` is empty, you must specify at least one destination in this field.</li>
                            <li>A destination `subset` must not be set to the empty object `{}`.</li>
                            <li>You can optionally specify a destination `weight` to indicate the proportion of traffic
                            to forward to this destination. Weights across all destinations must sum to 100.
                            If the sum is less than 100, the remainder is distributed across destinations that do not specify a weight,
                            with a minimum of 1 weight per destination. Destination weight examples:<ul>
                            <li>Valid example: Port 80 specifies a weight of `50`, port 81 a weight of `25`, and port 82 a weight of `25`.
                            All weights equal 100. 50% of traffic is forwarded to port 80,
                            25% to 81, and 25% to 82.</li>
                            <li>Valid example: Port 80 specifies a weight of `50`, port 81 a weight of `25`, and port 82 does not
                            specify a weight. All weights equal 75, and the remaining 25% is assigned to port 82.</li>
                            <li>Invalid example: Port 80 specifies a weight of `50`, port 81 a weight of `50`, and port 82 a weight
                            of `25`. All weights equal 125.</li>
                            <li>Invalid example: Port 80 specifies a weight of `50`, port 81 a weight of `50`, and port 82 does not
                            specify a weight. All weights equal 100, but no remainder exists for port 82.</li></ul></li></ul>
                          items:
                            description: |-
                              Destinations point to the upstream services that fulfill client requests on matching routes that you set up, such as in a route table. Each destination must resolve to one and only one hostname.
    
                              Destinations can refer to a variety of resources. The behavior of the route action
                              varies depending on the kind of destination.
    
                              Currently supported destination types are:
                              - Kubernetes `Service`, the default destination.
                              - Gloo `VirtualDestination` to route traffic to one of the VirtualDestination's backing Kubernetes services.
                              - Gloo `ExternalService` to route traffic to a static set of service endpoints that are external to your mesh setup.
                              - Gloo `ExternalWorkload` to route traffic to external workloads that are part of your mesh.
                              - Gloo `CloudProvider` to route traffic to a cloud provider function such as AWS Lambdas, selected by using the `functionCall` field.
    
                              HTTP routes support all destinations. TCP routes support only Kubernetes `Service` and Gloo `VirtualDestination` destinations.
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - ref
                                - required:
                                  - awsLambda
                            - required:
                              - ref
                            - required:
                              - awsLambda
                            properties:
                              awsLambda:
                                description: Reference an AWS Lambda function.
                                properties:
                                  cloudProvider:
                                    description: Reference to the AWS Cloud Provider.
                                    properties:
                                      cluster:
                                        description: the cluster of the object. If omitted,
                                          Gloo Mesh will use the same cluster as the parent
                                          object containing this reference.
                                        type: string
                                      name:
                                        description: the name of the object
                                        type: string
                                      namespace:
                                        description: the namespace of the object. If omitted,
                                          Gloo Mesh will use the same namespace as the
                                          parent object containing this reference.
                                        type: string
                                    type: object
                                  function:
                                    description: Name of the function to reference.
                                    type: string
                                  options:
                                    description: |-
                                      Specify how the destinations should be configured, for configuring lambda functions.
                                      If the destination config is required for the destination and not provided by the user, Gloo will invalidate the
                                      destination and its parent resources.
                                    properties:
                                      invocationStyle:
                                        description: |-
                                          Can be either Sync or Async. See [AWS Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html)
                                          for more details.
                                        enum:
                                        - SYNC
                                        - ASYNC
                                        type: string
                                      requestTransformation:
                                        enum:
                                        - REQUEST_DEFAULT
                                        - REQUEST_DISABLE
                                        type: string
                                      responseTransformation:
                                        enum:
                                        - RESPONSE_DEFAULT
                                        - RESPONSE_DISABLE
                                        type: string
                                    type: object
                                  qualifier:
                                    description: Qualifier of the function to reference.
                                      Defaults to $LATEST
                                    type: string
                                type: object
                              kind:
                                description: |-
                                  the kind of Kubernetes destination being referenced. defaults to Service.
                                  Only applicable for Kubernetes destinations. For non Kubernetes destinations, this field is ignored.
                                enum:
                                - SERVICE
                                - VIRTUAL_DESTINATION
                                - EXTERNAL_SERVICE
                                type: string
                              port:
                                description: the port on the destination object being
                                  targeted. required if the object provides more than
                                  one port.
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - number
                                    - required:
                                      - name
                                - required:
                                  - number
                                - required:
                                  - name
                                properties:
                                  name:
                                    description: the name of the port on the destination
                                      objects being targeted.
                                    type: string
                                  number:
                                    description: the number of the port on the destination
                                      objects being targeted.
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                type: object
                              ref:
                                description: reference to a Kubernetes destination object
                                  by its metadata
                                properties:
                                  cluster:
                                    description: the cluster of the object. If omitted,
                                      Gloo Mesh will use the same cluster as the parent
                                      object containing this reference.
                                    type: string
                                  name:
                                    description: the name of the object
                                    type: string
                                  namespace:
                                    description: the namespace of the object. If omitted,
                                      Gloo Mesh will use the same namespace as the parent
                                      object containing this reference.
                                    type: string
                                type: object
                              subset:
                                additionalProperties:
                                  type: string
                                description: |-
                                  select a subset of the destination's endpoints for routing based on their labels.
                                  Only applicable for Kubernetes destinations.
                                type: object
                              weight:
                                description: |-
                                  Specify the proportion of traffic to be forwarded to this destination.
                                  Weights across all of the `destinations` must sum to 100.
                                  Weight is only relevant when used in the context of a route with multiple destinations.
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                            type: object
                          maxItems: 99
                          minItems: 1
                          type: array
                          x-kubernetes-validations:
                          - message: Destination subset must not be an empty map.
                            rule: self.all(d, !has(d.subset) || d.subset.size() > 0)
                      required:
                      - destinations
                      type: object
                    matchers:
                      description: The set of request matchers for this route to match
                        on.
                      items:
                        description: Specify TLS request matchers. Must provide an SNI
                          host to match with an incoming request.
                        properties:
                          port:
                            description: 'Optional: Port on the host to match against.'
                            maximum: 65535
                            minimum: 0
                            type: integer
                          sniHosts:
                            description: |-
                              Required: SNI (server name indicator) to match on. Wildcard prefixes can be used in the SNI value.
                              For example, '*.com' matches 'foo.example.com' as well as 'example.com'.
                              The SNI value must be a subset of the corresponding virtual service’s hosts.
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                  required:
                  - forwardTo
                  type: object
                maxItems: 10000
                type: array
              virtualGateways:
                description: |-
                  Optional: A list of virtual gateways that serve this route table.
                  When not specified, the route table applies either to all sidecars in the workspace
                  or only to sidecars for selected workloads (via the `workloadSelectors` field) in the workspace where
                  the route table is deployed or imported.
    
                  </br>**Examples**:<ul>
                  <li>The following applies to sidecars of all the workloads for the workspace where the route table is
                  deployed or imported: set `virtualGateways` to `null` and `workloadSelectors` to `[]`.</li>
                  <li>The following applies to the `my-gateway` virtual gateway in the `gateway` workspace and
                  no sidecars: set `virtualGateways.name` to `my-gateway`, `virtualGateways.namespace` to `gateway`, and `workloadSelectors` to `[]`.</li>
                  <li>The following applies to the `my-gateway` virtual gateway in the `gateway` workspace and
                  sidecars of all the workloads for the workspace where the route table is
                  deployed or imported: set `virtualGateways.name` to `my-gateway`, `virtualGateways.namespace` to `gateway`, and `workloadSelectors` to `{}`.</li>
                  <li>The following applies to sidecars of all the `app: foo` workloads for the workspace where the route table
                  is deployed or imported: set `virtualGateways` to `null` and `workloadSelectors.selector.labels` to `app: foo`.</li>
                  <li>The following applies to the `my-gateway` virtual gateway in the `gateway` workspace and
                  sidecars of all the `app: foo` workloads for the workspace where the route table is deployed or imported:
                  set `virtualGateways.name` to `my-gateway`, `virtualGateways.namespace` to `gateway`, and `workloadSelectors.selector.labels` to `app: foo`.</li></ul>
    
                  </br>**Configuration constraints**: For delegated child route tables, this field must be empty or unset.
                  This setting is supported only for the parent route table,
                  which controls the behavior for each child route table.
                items:
                  description: |-
                    reference to a Kubernetes API object.
                    Kube API objects are referenced explicitly by the namespace and cluster containing them.
                  properties:
                    cluster:
                      description: the cluster of the object. If omitted, Gloo Mesh will
                        use the same cluster as the parent object containing this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. If omitted, Gloo Mesh
                        will use the same namespace as the parent object containing this
                        reference.
                      type: string
                  type: object
                type: array
              virtualServiceAnnotations:
                additionalProperties:
                  type: string
                description: |-
                  Annotations to add to the metadata of the VirtualService generated by this RouteTable.
    
                  </br>**Configuration constraints**:<ul>
                  <li>For delegated child route tables, this field must be empty or unset.
                  This setting is supported only for the parent route table,
                  which controls the VirtualService that corresponds to all child route tables.</li>
                  <li>Designated annotation keys that might already be in use on the VirtualService, such as "cluster.solo.io/cluster", are not supported.</li></ul>
                type: object
              weight:
                description: |-
                  Weight is used to sort delegated route tables by priority.
                  Higher integer values indicate a higher priority.
                  Individual routes are kept in the order that they appear relative to their tables,
                  but tables are sorted by the weight that you assign to them.
    
                  <br>When a request is sent to a service in your Gloo setup,
                  the request is matched against the routes in the highest-weighted route table first.
                  If the request doesn’t match a route in the first sub-table,
                  it is matched against the routes in the second-highest-weighted table, and so on.
    
                  <br>For example, if you have two sub-tables with weights of 100 and 90,
                  Gloo will attempt to match a request against the routes in the sub-table with the weight of 100
                  first. If the request does not match, Gloo then attempts to match the request
                  against the routes in the sub-table with the weight of 90.
    
                  <br>Note that tables of the same weight stay in the same order that you list them in the parent route table,
                  which is the list order when you specify sub-tables by name, or the creation timestamp when you select sub-tables by label.
    
                  <br>The default value is 0.
                format: int32
                type: integer
              workloadSelectors:
                description: |-
                  Optional: Selectors for source workloads (with sidecars) that route traffic for this route table.
    
                  </br>**Implementation notes**:<ul>
                  <li>You can specify workload selectors only for east-west routing. Workload selectors do not apply to ingress (north-south) routing.</li>
                  <li>If do not specify virtual gateways or workload selectors, all workloads in the workspace are selected for east-west routing by default.</li>
                  <li>If you specify a virtual gateway, workloads are not automatically selected for east-west routing. To make them also available for east-west routing, configure this `workloadSelectors` option to select the workloads that you want, such as `{}` for all workloads in the workspace.</li>
                  <li>Selecting external workloads, such as VMs, is currently not supported.</li>
                  <li>You can select workloads by using labels only. Selecting workloads by using other references, such as the name, namespace, cluster or workspace, is not supported.</li>
                  <li>Delegated child route tables inherit the workload selectors of the parent route table, such as `value:foo`.
                  The delegated child route table can also have its own workload selectors, such as `env:prod`.
                  These workload selectors are logically AND'd together. As a result, the child route table routes traffic only to workloads
                  with both `value:foo` and `env:prod` labels. Note that the child route table cannot override the parent's workload selectors,
                  such as by setting `value:bar`. In that case, the child route gets an error until the conflict is resolved.</li></ul>
    
                  **Configuration constraints**: If this field is set, `workloadSelectors.kind` must be set to `KUBE`,
                  and `workloadSelectors.selector.name`, `.namespace`, `.cluster`, and `.workspace` must be empty.
                items:
                  description: |-
                    WorkloadSelector is a Selector specifically built for selecting individual workloads.
                    Workloads must have injected sidecar proxies or be standalone gateway proxies to be selected by Gloo Mesh policies.
    
                    This selector can be used to select Kubernetes workloads (KUBE) or sidecar-injected external endpoints (VM).
                  properties:
                    kind:
                      description: The kind of workload being selected. Defaults to Kube.
                      enum:
                      - KUBE
                      - VM
                      type: string
                    port:
                      description: |-
                        The port to select on the selected workloads.
                        Only applies to policies which select specific workload ports, such as the WasmDeploymentPolicy.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                    selector:
                      description: Selector used to match Workload objects by their metadata.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If omitted, Gloo selects
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If omitted, Gloo selects
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If omitted, Gloo selects
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If omitted, Gloo selects
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                maxItems: 10000
                type: array
                x-kubernetes-validations:
                - message: Selector kind must be KUBE or not set.
                  rule: self.all(s, !has(s.kind) || s.kind == 'KUBE')
            type: object
            x-kubernetes-validations:
            - message: The virtualGateways field must be empty or unset for delegated
                RouteTables.
              rule: has(self.hosts) || !has(self.virtualGateways)
            - message: The applyToDestinations field must be empty or unset for delegated
                RouteTables.
              rule: has(self.hosts) || !has(self.applyToDestinations)
            - message: The failureMode field must be empty or unset for delegated RouteTables.
              rule: has(self.hosts) || !has(self.failureMode)
            - message: At least one of http, tcp, or tls keys must be set.
              rule: has(self.http) || has(self.tcp) || has(self.tls)
            - message: defaultDestination can only be set for http routes with forwardTo
                actions.
              rule: 'has(self.defaultDestination) ? has(self.http) && self.http.exists(r,
                has(r.forwardTo)) : true'
            - message: defaultDestination must be set when http forwardTo actions without
                destinations are specified.
              rule: 'has(self.http) && self.http.exists(r, has(r.forwardTo) && has(r.forwardTo.destinations)
                && r.forwardTo.destinations.size() == 0) ? has(self.defaultDestination)
                : true'
          status:
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numAllowedVirtualGateways:
                description: The number virtual gateways that this route table can select.
                maximum: 4294967295
                minimum: 0
                type: integer
              numAppliedRoutePolicies:
                additionalProperties:
                  maximum: 4294967295
                  minimum: 0
                  type: integer
                description: |-
                  A map of policy GVK to the number of policies that are applied on this resource,
                  sorted by GVK.
                type: object
              numParentRouteTables:
                description: The number of parent route tables for this route table, if
                  it is a delegated route table.
                maximum: 4294967295
                minimum: 0
                type: integer
              ownedByWorkspace:
                description: The name of the workspace that this route table belongs to.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/networking.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: efde5b249e30db40
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: virtualdestinations.networking.gloo.solo.io
spec:
  group: networking.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: VirtualDestination
    listKind: VirtualDestinationList
    plural: virtualdestinations
    shortNames:
    - vd
    singular: virtualdestination
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              Specifications for the `VirtualDestination` resource.
    
              <br>**Note**: If `services`, `externalServices`, and `externalWorkloads` are all empty,
              then you must also create a RouteTable resource to accompany this VirtualDestination.
    
              </br>**Configuration constraints**: At least one of `hosts`, `services`, `externalServices`, or `externalWorkloads` must be set.
            properties:
              clientMode:
                description: |-
                  Optional: The way in which the VirtualDestination is translated.
                  If nil, the mode is inherited from the WorkspaceSettings resource for the workspace.
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - auto
                    - required:
                      - sniRouting
                    - required:
                      - tlsTermination
                - required:
                  - auto
                - required:
                  - sniRouting
                - required:
                  - tlsTermination
                properties:
                  auto:
                    description: |-
                      The default mode is to use sni routing via tls passthrough at the East/West Gateway to route to services across clusters.
                      In the future, this may change to become smarter (e.g., detect if any pods backing the virtual destination don't have sidecars,
                      if so, then use tls termination so all pods are routeable).
                      For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#empty).
                    maxProperties: 0
                    type: object
                  sniRouting:
                    description: |-
                      Sni routing mode uses tls passthrough to route traffic to the proper pod (with sidecar) from the East/West Gateway.
                      For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#empty).
                    maxProperties: 0
                    type: object
                  tlsTermination:
                    description: |-
                      Tls termination mode uses tls termination at the East/West Gateway to route traffic to the correct pod.
                      This mode is ideal for Gloo Mesh Gateway, i.e. some backing pods don't have sidecars.
                      Since TLS is terminated at the East/West Gateway, the backing service (if it has a sidecar) will not be able to
                      verify the istio mTLS identity of the originating client; rather it will verify the istio mTLS cert of the East/West Gateway.
                      For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#empty).
                    maxProperties: 0
                    type: object
                type: object
              externalServices:
                description: |-
                  Selectors for the backing External services that comprise this VirtualDestination.
                  An external service is selected when it matches any of the provided selectors.
                  Multiple External Services can be selected.
                items:
                  description: selects zero or more Kubernetes API resources by matching
                    on labels, name, namespace, cluster, and workspace.
                  properties:
                    cluster:
                      description: |-
                        Only select objects in the matching cluster. If omitted, Gloo selects
                        matching objects across all clusters available in the parent object's workspace.
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: labels matching those of the object
                      type: object
                    name:
                      description: |-
                        Only select objects with the matching name. If omitted, Gloo selects
                        matching objects with any name available in the parent object's workspace.
                      type: string
                    namespace:
                      description: |-
                        Only select objects in the matching namespace. If omitted, Gloo selects
                        matching objects across all namespaces available in the parent object's workspace.
                      type: string
                    workspace:
                      description: |-
                        Only select objects in the given workspace. If omitted, Gloo selects
                        matching objects across all workspaces available in the parent object's workspace.
                      type: string
                  type: object
                type: array
              externalWorkloads:
                description: |-
                  Selectors for the backing ExternalWorkloads that comprise this VirtualDestination.
                  Currently only one ExternalWorkload can be selected per cluster. If more than one external workload is
                  selected within a cluster, the VirtualDestination reports a warning, and the oldest created external workload is selected.
                  When a request is routed through the VirtualDestination, it is forwarded to one
                  of the backing external workloads, selected at random.
                  To forward traffic to the service on the local cluster first, create a FailoverPolicy and an OutlierDetectionPolicy.
                items:
                  description: selects zero or more Kubernetes API resources by matching
                    on labels, name, namespace, cluster, and workspace.
                  properties:
                    cluster:
                      description: |-
                        Only select objects in the matching cluster. If omitted, Gloo selects
                        matching objects across all clusters available in the parent object's workspace.
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: labels matching those of the object
                      type: object
                    name:
                      description: |-
                        Only select objects with the matching name. If omitted, Gloo selects
                        matching objects with any name available in the parent object's workspace.
                      type: string
                    namespace:
                      description: |-
                        Only select objects in the matching namespace. If omitted, Gloo selects
                        matching objects across all namespaces available in the parent object's workspace.
                      type: string
                    workspace:
                      description: |-
                        Only select objects in the given workspace. If omitted, Gloo selects
                        matching objects across all workspaces available in the parent object's workspace.
                      type: string
                  type: object
                type: array
              hosts:
                description: |-
                  Optional: The set of custom hosts for which this VirtualDestination will serve traffic.
    
                  </br>**Configuration constraints**:<ul>
                  <li>The hostname(s) must be unique to other hosts in this resource. However, it is recommended
                  that you also make hosts unique globally in your Gloo environment to avoid collisions.</li>
                  <li>The hostname cannot equal the wildcard host or contain the wildcard character `"*"`.</li>
                  <li>Each hostname must follow these requirements:<ul>
                    <li>Hostnames must be 1 - 255 characters in length.</li>
                    <li>The hostname cannot be an empty string.</li>
                    <li>Supported characters are `a-z`, `A-Z`, `0-9`, `-`, and `.`.</li>
                    <li>Each segment separated by a period (`.`) must be 1 - 63 characters in length and cannot start with the `-` character.</li>
                    <li>Each segment must meet the regex `^[a-zA-Z0-9](?:[-a-zA-Z0-9]*[a-zA-Z0-9])?$`.</li>
                    <li>The top-level domain (last segment), such as `com` in `www.example.com`, cannot be all numeric characters.</li>
                    <li>The top-level domain (last segment) can be empty, such as `"istio.io."`.</li></ul></li></ul>
                items:
                  type: string
                type: array
              ports:
                description: |-
                  Required: The port(s) on which the VirtualDestination serves traffic.
    
                  </br>**Configuration constraints**: At least one port is required.
                items:
                  description: A new port that is exposed on a VirtualDestination.
                  properties:
                    number:
                      description: |-
                        The port number.
    
                        </br>**Configuration constraints**:<ul>
                        <li>This field is required.</li>
                        <li>The port number must be in the range 1 - 65535, inclusive.</li></ul>
                      maximum: 65535
                      minimum: 1
                      type: integer
                    protocol:
                      description: |-
                        The protocol used in communication with this destination.
                        Note that the VirtualDestination protocol may not match the protocol of the backing Kubernetes service(s).
                        For example, VirtualDestinations pointing to gRPC services require the protocol to equal `GRPC`.
                        The prefix of the Kubernetes service port's name typically matches the required protocol.
    
                        </br>**Configuration constraints**:<ul>
                        <li>This field is required.</li>
                        <li>The value must equal one of the following: `HTTP`, `HTTPS`, `GRPC`, `HTTP2`, `MONGO`, `TCP`, `TLS`.</li></ul>
                      enum:
                      - HTTP
                      - http
                      - HTTPS
                      - https
                      - GRPC
                      - grpc
                      - gRPC
                      - HTTP2
                      - http2
                      - MONGO
                      - mongo
                      - TCP
                      - tcp
                      - TLS
                      - tls
                      type: string
                    targetPort:
                      description: |-
                        Optional: The port number or name used to match the corresponding port on the
                        VirtualDestination's backing services and external services.
                        All of the backing services for this VirtualDestination must contain
                        this port, matching by name or number.
                        If unspecified, this field defaults to the value of the port `number`.
    
                        </br>**Configuration constraints**: If `services`, `externalServices`, and `externalWorkloads` are all empty, this field must be empty.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                  required:
                  - number
                  - protocol
                  type: object
                minItems: 1
                type: array
              services:
                description: |-
                  Selectors for the backing Kubernetes services that comprise this VirtualDestination.
                  A service is selected when it matches any of the provided selectors.
                  Currently only one Kubernetes service can be selected per cluster. If more than one service is selected
                  within a cluster, the VirtualDestination reports a warning, and the oldest created service is selected.
                  When a request is routed through the VirtualDestination, it is forwarded to one of the backing services, selected at random.
                  To forward traffic to the service on the local cluster first, create a FailoverPolicy and an OutlierDetectionPolicy.
                  If a deployment is unavailable, requests are not forwarded to that deployment.
                items:
                  description: selects zero or more Kubernetes API resources by matching
                    on labels, name, namespace, cluster, and workspace.
                  properties:
                    cluster:
                      description: |-
                        Only select objects in the matching cluster. If omitted, Gloo selects
                        matching objects across all clusters available in the parent object's workspace.
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: labels matching those of the object
                      type: object
                    name:
                      description: |-
                        Only select objects with the matching name. If omitted, Gloo selects
                        matching objects with any name available in the parent object's workspace.
                      type: string
                    namespace:
                      description: |-
                        Only select objects in the matching namespace. If omitted, Gloo selects
                        matching objects across all namespaces available in the parent object's workspace.
                      type: string
                    workspace:
                      description: |-
                        Only select objects in the given workspace. If omitted, Gloo selects
                        matching objects across all workspaces available in the parent object's workspace.
                      type: string
                  type: object
                type: array
            required:
            - ports
            type: object
            x-kubernetes-validations:
            - message: When using targetPort, at least one of services, externalServices,
                or externalWorkloads must be set.
              rule: has(self.services) || has(self.externalServices) || has(self.externalWorkloads)
                || !self.ports.exists(p, has(p.targetPort))
            - message: At least one of hosts, services, externalServices, or externalWorkloads
                must be set.
              rule: has(self.services) || has(self.externalServices) || has(self.externalWorkloads)
                || (has(self.hosts) && size(self.hosts) >= 1)
          status:
            description: The status of the resource after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numAppliedDestinationPolicies:
                additionalProperties:
                  maximum: 4294967295
                  minimum: 0
                  type: integer
                description: |-
                  A map of policy GVK to policy references for all policies that are applied on this
                  resource.
                type: object
              numSelectedBackingServices:
                description: The number of destinations (across all clusters) that back
                  this VirtualDestination.
                maximum: 4294967295
                minimum: 0
                type: integer
              ownedByWorkspace:
                description: The name of the workspace that owns the VirtualDestination.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/networking.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 65dc2b67eb0b3c3d
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: virtualgateways.networking.gloo.solo.io
spec:
  group: networking.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: VirtualGateway
    listKind: VirtualGatewayList
    plural: virtualgateways
    shortNames:
    - vg
    singular: virtualgateway
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: Specifications for the `VirtualGateway` resource.
            properties:
              listeners:
                description: |-
                  Required: One or more listeners for the VirtualGateway.
                  Each listener specifies a port and virtual host(s) on which traffic can be received.
    
                  </br>**Configuration constraints**: This field is required and must define at least one listener.
                items:
                  allOf:
                  - oneOf:
                    - not:
                        anyOf:
                        - required:
                          - tls
                        - required:
                          - httpsRedirect
                    - required:
                      - tls
                    - required:
                      - httpsRedirect
                  - oneOf:
                    - not:
                        anyOf:
                        - required:
                          - http
                        - required:
                          - tcp
                    - required:
                      - http
                    - required:
                      - tcp
                  properties:
                    allowedRouteTables:
                      description: |-
                        Optional: Filter RouteTables that can bind to this listener by the hostnames and object metadata.
                        Wildcard matching for hostnames is supported.
                        If omitted, any RouteTable can bind to this VirtualGateway.
                      items:
                        description: |-
                          Optional: Filter RouteTables that can bind to this listener by the hostnames and object metadata.
                          Wildcard matching for hostnames is supported.
                          If omitted, any RouteTable can bind to this VirtualGateway.
                        properties:
                          allowedRoutes:
                            description: |-
                              Optional: Restrict the routes that can be applied to this VirtualGateway to a set of route filter criteria.
                              If empty, all the routes that belong to the matching RouteTables can bind to this VirtualGateway.
                            items:
                              properties:
                                cloudProvider:
                                  description: 'Optional: filter out route tables that
                                    specify CloudProvider functionality, if provided.'
                                  oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - aws
                                  - required:
                                    - aws
                                  properties:
                                    aws:
                                      description: |-
                                        Optional: filter out route tables that use AWS functionality, if provided. Each evaluated route must match at
                                        at least one of every repeated field provided, if not empty.
                                      properties:
                                        accountIds:
                                          description: 'Optional: filter out route tables
                                            that use an AWS account ID which does not
                                            match the selector, if provided.'
                                          items:
                                            type: string
                                          type: array
                                        iamRoles:
                                          description: |-
                                            Optional: filter out route tables that use IAM invoke roles which do not match the selector, if provided.
                                            Regex supported.
                                          items:
                                            type: string
                                          type: array
                                        lambdaFunctions:
                                          description: |-
                                            Optional: filter out route tables that use backend Lambda functions that do no match the selector,
                                            if provided. Regex supported.
                                          items:
                                            type: string
                                          type: array
                                        regions:
                                          description: 'Optional: filter out route tables
                                            that use regions which do not match the selector,
                                            if provided.'
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                  type: object
                              type: object
                            type: array
                          host:
                            description: |-
                              Required: The hostname to select. You can use `*` to match hostname patterns in multiple objects.
    
                              </br>**Configuration constraints**:<ul>
                              <li>This field is required.</li>
                              <li>The host must be specified as a dnsName, with an optional `namespace/` prefix.</li>
                              <li>The namespace can optionally be set to `*`, for any namespace, or `.`, for the current namespace.</li>
                              <li>If no `namespace/` prefix is specified, the default is `*/`, which selects services from any namespace.</li>
                              <li>The dnsName must be in FQDN format, and can optionally include a wildcard character in the first segment, such as `prod/*.example.com`.</li></ul>
                            type: string
                          selector:
                            description: |-
                              Optional: Filter out RouteTables that do not match the selector.
    
                              <br>**Implementation notes**:<ul>
                              <li>If the selector is empty, then it matches all RouteTables in this workspace.</li>
                              <li>If the selector is nil, then it matches no RouteTables.</li>
                              <li>A RouteTable must match one of the selectors to be selected.</li></ul>
                            properties:
                              cluster:
                                description: |-
                                  Only select objects in the matching cluster. If omitted, Gloo selects
                                  matching objects across all clusters available in the parent object's workspace.
                                type: string
                              labels:
                                additionalProperties:
                                  type: string
                                description: labels matching those of the object
                                type: object
                              name:
                                description: |-
                                  Only select objects with the matching name. If omitted, Gloo selects
                                  matching objects with any name available in the parent object's workspace.
                                type: string
                              namespace:
                                description: |-
                                  Only select objects in the matching namespace. If omitted, Gloo selects
                                  matching objects across all namespaces available in the parent object's workspace.
                                type: string
                              workspace:
                                description: |-
                                  Only select objects in the given workspace. If omitted, Gloo selects
                                  matching objects across all workspaces available in the parent object's workspace.
                                type: string
                            type: object
                        required:
                        - host
                        type: object
                      type: array
                    appProtocol:
                      description: |-
                        Optional: Application protocol to use when adding capabilities, such as routing and rich metrics, to
                        the gateway. If no protocol is selected, the protocol is inferred
                        from the listener type and its TLS settings. For example, for an `http` listener, `appProtocol` defaults to
                        `HTTP` if no TLS settings are defined, and `HTTPS` if TLS settings are defined. For a `tcp` listener, `appProtocol`
                        defaults to `TCP` or `TLS`, depending on the presence of TLS settings.
    
                        </br>**Configuration constraints**:<ul>
                        <li>The following values are supported: `GRPC`, `GRPC-WEB`, `HTTP`, `HTTPS`, `HTTP_PROXY`, `HTTP2`, `MONGO`, `MYSQL`, `TCP`, `TLS`, `REDIS`</li>
                        <li>The value must be the same for multiple listeners that specify the same port. This includes cases when
                        the protocol is inferred from the listener type and TLS settings.</li>
                        <li>If the listener type is http (`http` is set) and `tls` is set, `appProtocol` must be empty or set to `HTTPS`.</li>
                        <li>If the listener type is http (`http` is set) and `tls` is unset, `appProtocol` must be empty or set to `GRPC`, `GRPC-WEB`, `HTTP`, `HTTP_PROXY`, or `HTTP2`.</li>
                        <li>If the listener type is tcp (`tcp` is set, or neither `tcp` nor `http` is set) and `tls` is set, `appProtocol` must be empty or set to `TLS`.</li>
                        <li>If the listener type is tcp (`tcp` is set, or neither `tcp` nor `http` is set) and `tls` is unset, appProtocol must be empty or set to `TCP`, `MONGO`, `REDIS`, or `MYSQL`.</li></ul>
                      maxLength: 10
                      type: string
                    exposedExternalServices:
                      description: |-
                        Optional: A list of ExternalServices exposed by this VirtualGateway, for configuring egress traffic.
                        If empty or omitted, any ExternalService is exposed by this VirtualGateway.
                      items:
                        description: Filter ExternalServices that can attach to this VirtualGateway
                          by hostname.
                        properties:
                          host:
                            description: |-
                              Required: The hostname to select. You can use `*` to match hostname patterns in multiple objects.
    
                              </br>**Configuration constraints**:<ul>
                              <li>This field is required.</li>
                              <li>The host must be specified as a dnsName, with an optional `namespace/` prefix.</li>
                              <li>The namespace can optionally be set to `*`, for any namespace, or `.`, for the current namespace.</li>
                              <li>If no `namespace/` prefix is specified, the default is `*/`, which selects services from any namespace.</li>
                              <li>The dnsName must be in FQDN format, and can optionally include a wildcard character in the first segment, such as `prod/*.example.com`.</li></ul>
                            type: string
                          selector:
                            description: 'Optional: Filter out ExternalServices that do
                              not match the selector.'
                            properties:
                              cluster:
                                description: |-
                                  Only select objects in the matching cluster. If omitted, Gloo selects
                                  matching objects across all clusters available in the parent object's workspace.
                                type: string
                              labels:
                                additionalProperties:
                                  type: string
                                description: labels matching those of the object
                                type: object
                              name:
                                description: |-
                                  Only select objects with the matching name. If omitted, Gloo selects
                                  matching objects with any name available in the parent object's workspace.
                                type: string
                              namespace:
                                description: |-
                                  Only select objects in the matching namespace. If omitted, Gloo selects
                                  matching objects across all namespaces available in the parent object's workspace.
                                type: string
                              workspace:
                                description: |-
                                  Only select objects in the given workspace. If omitted, Gloo selects
                                  matching objects across all workspaces available in the parent object's workspace.
                                type: string
                            type: object
                        required:
                        - host
                        type: object
                      type: array
                    http:
                      description: |-
                        Serves HTTP requests on the hosts specified for a listener.
                        The listener routes traffic based on the RouteTable resource
                        that is attached to the VirtualGateway.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    httpsRedirect:
                      description: |-
                        If set to true, the load balancer returns a 301 HTTP response code for all incoming HTTP connections
                        with an HTTPS redirect location for the client to use.
    
                        </br>**Configuration constraints**: This field must be unset if the listener type is tcp (`tcp` is set, or neither `tcp` nor `http` is set).
                      type: boolean
                    port:
                      description: |-
                        Required: The port on the backing gateway service, on
                        which the gateway listens for connections to route.
    
                        </br>**Configuration constraints**:<ul>
                        <li>This field is required and must define either a port number or name.</li>
                        <li>The value must match a port on the backing gateway service.</li>
                        <li>The port on the backing gateway service must not have a targetPort that is specified by name.</li>
                        <li>The port on the backing gateway service must be in the range 1 - 65535, or its `targetPort` number, if specified, must be in that range.</li>
                        <li>The port on the backing gateway service must not match the port of another listener with the same `appProtocol` and same first host.
                        The first host is the `host` on the first `allowedRouteTables` entry.
                        If no `allowedRouteTables` are set, then the first host is the `host` on the first `exposedExternalServices` entry.
                        If no `allowedRouteTables` and no `exposedExternalServices` are set,
                        then the first host is the wildcard '*'.</li></ul>
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                      x-kubernetes-validations:
                      - message: Either port.number or port.name must be set.
                        rule: has(self.number) || has(self.name)
                    tcp:
                      description: The TCP listener configuration. If you want to use
                        TCP routes that route via SNI server name, a TLS configuration
                        is required.
                      type: object
                    tls:
                      description: |-
                        Configure TLS settings for a virtual host or listener.
    
                        </br>**Configuration constraints**:<ul>
                        <li>This field is required if `appProtocol` is `HTTPS` or `TLS`.</li>
                        <li>This field is optional if `appProtocol` is unset.</li>
                        <li>This field must be empty otherwise.</li></ul>
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - secretName
                          - required:
                            - files
                      - required:
                        - secretName
                      - required:
                        - files
                      properties:
                        files:
                          description: Paths to certificates that can be read by the gateway
                            proxy from its local filesystem.
                          properties:
                            caCerts:
                              description: |-
                                The path to the file that contains the certificate authority (CA) certificates for validating the client cert.
    
                                </br>**Configuration constraints**:<ul>
                                <li>This field must be empty if `tlsMode` is `ISTIO_MUTUAL`.</li>
                                <li>This field is required if `tlsMode` is `MUTUAL`, and `secretName` is not set.</li>
                                <li>This field is ignored if `tlsMode` is `PASSTHROUGH` or `AUTO_PASSTHROUGH`.</li></ul>
                              type: string
                            privateKey:
                              description: |-
                                The path to the file that contains the server's private key.
    
                                </br>**Configuration constraints**:<ul>
                                <li>This field must be empty if `tlsMode` is `ISTIO_MUTUAL`.</li>
                                <li>This field is required if `tlsMode` is `SIMPLE` or `MUTUAL`, and `secretName` is not set.</li>
                                <li>This field is ignored if `tlsMode` is `PASSTHROUGH` or `AUTO_PASSTHROUGH`.</li>
                              type: string
                            serverCert:
                              description: |-
                                The path to the file that contains the server-side TLS certificate.
    
                                </br>**Configuration constraints**:<ul>
                                <li>This field must be empty if `tlsMode` is `ISTIO_MUTUAL`.</li>
                                <li>This field is required if `tlsMode` is `SIMPLE` or `MUTUAL`, and `secretName` is not set.</li>
                                <li>This field is ignored if `tlsMode` is `PASSTHROUGH` or `AUTO_PASSTHROUGH`.</li></ul>
                              type: string
                          type: object
                        mode:
                          description: TLS modes enforced by the gateway proxy.
                          enum:
                          - PASSTHROUGH
                          - SIMPLE
                          - MUTUAL
                          - AUTO_PASSTHROUGH
                          - ISTIO_MUTUAL
                          type: string
                        parameters:
                          description: General TLS parameters.
                          properties:
                            cipherSuites:
                              description: |-
                                The TLS cipher suites to secure the connection.
    
                                </br>**Configuration constraints**:<ul>
                                <li>This field is required if `minimumProtocolVersion` is `TLSv1_0` or `TLSv1_1`.
                                TLS protocol versions below `TLSV1_2` require setting compatible ciphers with this setting,
                                because they no longer include compatible ciphers.</li>
                                <li>This field is ignored if `minimumProtocolVersion` is `TLSv1_3`.</li>
                                <li>Invalid or duplicate values are ignored.</li>
                                <li>The following cipher values are supported:<ul>
                                   <li>ECDHE-ECDSA-AES128-GCM-SHA256</li>
                                   <li>ECDHE-RSA-AES128-GCM-SHA256</li>
                                   <li>ECDHE-ECDSA-AES256-GCM-SHA384</li>
                                   <li>ECDHE-RSA-AES256-GCM-SHA384</li>
                                   <li>ECDHE-ECDSA-CHACHA20-POLY1305</li>
                                   <li>ECDHE-RSA-CHACHA20-POLY1305</li>
                                   <li>ECDHE-ECDSA-AES128-SHA</li>
                                   <li>ECDHE-RSA-AES128-SHA</li>
                                   <li>ECDHE-ECDSA-AES256-SHA</li>
                                   <li>ECDHE-RSA-AES256-SHA</li>
                                   <li>AES128-GCM-SHA256</li>
                                   <li>AES256-GCM-SHA384</li>
                                   <li>AES128-SHA</li>
                                   <li>AES256-SHA</li>
                                   <li>DES-CBC3-SHA</li></ul></li></ul>
                              items:
                                type: string
                              type: array
                            maximumProtocolVersion:
                              description: The maximum TLS version.
                              enum:
                              - TLS_AUTO
                              - TLSv1_0
                              - TLSv1_1
                              - TLSv1_2
                              - TLSv1_3
                              type: string
                            minimumProtocolVersion:
                              description: |-
                                The minimum TLS version. Defaults to `TLSV1_2`.
                                Warning: Using TLS protocol versions below `TLSV1_2` can pose serious security risks.
                              enum:
                              - TLS_AUTO
                              - TLSv1_0
                              - TLSv1_1
                              - TLSv1_2
                              - TLSv1_3
                              type: string
                          type: object
                          x-kubernetes-validations:
                          - message: If minimumProtocolVersion is TLSv1_0, cipherSuites
                              must be set.
                            rule: 'has(self.minimumProtocolVersion) && self.minimumProtocolVersion
                              == ''TLSv1_0'' ? has(self.cipherSuites) : true'
                          - message: If minimumProtocolVersion is TLSv1_1, cipherSuites
                              must be set.
                            rule: 'has(self.minimumProtocolVersion) && self.minimumProtocolVersion
                              == ''TLSv1_1'' ? has(self.cipherSuites) : true'
                        secretName:
                          description: |-
                            The name of the Kubernetes secret that contains the SSL secret. Each
                            gateway checks for a secret with this name in its own namespace on the cluster.
    
                            </br>**Configuration constraints**:<ul>
                            <li>This field must be empty if the mode is `ISTIO_MUTUAL`.</li>
                            <li>This field is ignored if the mode is `PASSTHROUGH` or `AUTO_PASSTHROUGH`.</li>
                            <li>The value must name a real secret in the given namespace and cluster.</li>
                            <li>An Opaque secret must contain either `tls.key: <privateKey>` and `tls.crt: <serverCert>`,
                            or `key: <privateKey>` and `cert: <serverCert>`.
                            For mutual TLS, you can provide `cacert: <CACertificate>` and `crl: <CertificateRevocationList>`
                            in the same secret, or a separate secret named `<secret>-cacert`.
                            You can also provide a TLS secret for server certificates with an additional `tls.ocsp-staple`
                            key for OCSP staple information, `ca.crt` key for CA certificates, and `ca.crl` for a certificate revocation list.</li></ul>
                          type: string
                        verifySubjectAltName:
                          description: |-
                            Verify that the Subject Alternative Name in the peer certificate is one of the specified values.
    
                            </br>**Configuration constraints**: If you set this field, you must also set `files.caCerts`.
                          items:
                            type: string
                          type: array
                      type: object
                      x-kubernetes-validations:
                      - message: If mode is SIMPLE, either secretName or both files.serverCert
                          and files.privateKey must be set.
                        rule: 'has(self.mode) && self.mode == ''SIMPLE'' ? has(self.secretName)
                          || (has(self.files) && has(self.files.serverCert)) : true'
                      - message: If mode is SIMPLE, either secretName or both files.serverCert
                          and files.privateKey must be set.
                        rule: 'has(self.mode) && self.mode == ''SIMPLE'' ? has(self.secretName)
                          || (has(self.files) && has(self.files.privateKey)) : true'
                      - message: If mode is MUTUAL, you must either set secretName or
                          set files and all its subfields.
                        rule: 'has(self.mode) && self.mode == ''MUTUAL'' ? has(self.secretName)
                          || (has(self.files) && has(self.files.serverCert)) : true'
                      - message: If mode is MUTUAL, you must either set secretName or
                          set files and all its subfields.
                        rule: 'has(self.mode) && self.mode == ''MUTUAL'' ? has(self.secretName)
                          || (has(self.files) && has(self.files.privateKey)) : true'
                      - message: If mode is MUTUAL, you must either set secretName or
                          set files and all its subfields.
                        rule: 'has(self.mode) && self.mode == ''MUTUAL'' ? has(self.secretName)
                          || (has(self.files) && has(self.files.caCerts)) : true'
                      - message: If mode is ISTIO_MUTUAL, secretName must not be set.
                        rule: 'has(self.mode) && self.mode == ''ISTIO_MUTUAL'' ? !has(self.secretName)
                          : true'
                      - message: If mode is ISTIO_MUTUAL, files must not be set.
                        rule: 'has(self.mode) && self.mode == ''ISTIO_MUTUAL'' ? !has(self.files)
                          : true'
                  required:
                  - port
                  type: object
                  x-kubernetes-validations:
                  - message: 'appProtocol must be one of: GRPC, GRPC-WEB, HTTP, HTTP_PROXY,
                      HTTP2, HTTPS, TCP, TLS, MONGO, REDIS, or MYSQL.'
                    rule: '!has(self.appProtocol) || self.appProtocol.upperAscii() in
                      [''GRPC'',''GRPC-WEB'',''HTTP'',''HTTP_PROXY'',''HTTP2'',''HTTPS'',''TCP'',''TLS'',''MONGO'',''REDIS'',''MYSQL'']'
                  - message: If the listener type is http (the http field is set) and
                      the tls field is set, appProtocol must be empty or set to HTTPS.
                    rule: 'has(self.http) && has(self.tls) ? !has(self.appProtocol) ||
                      self.appProtocol.upperAscii() == ''HTTPS'' : true'
                  - message: If the listener type is http (the http field is set) and
                      the tls field is unset, appProtocol must be empty or set to GRPC,
                      GRPC-WEB, HTTP, HTTP_PROXY, or HTTP2.
                    rule: 'has(self.http) && !has(self.tls) ? !has(self.appProtocol) ||
                      self.appProtocol.upperAscii() in [''GRPC'',''GRPC-WEB'',''HTTP'',''HTTP_PROXY'',''HTTP2'']
                      : true'
                  - message: If the listener type is tcp (the tcp field is set, or neither
                      the tcp nor http field is set), httpsRedirect must not be set.
                    rule: '!has(self.http) ? !has(self.httpsRedirect) : true'
                  - message: If the listener type is tcp (the tcp field is set, or neither
                      the tcp nor http field is set) and the tls field is set, appProtocol
                      must be empty or set to TLS.
                    rule: '!has(self.http) && has(self.tls) ? !has(self.appProtocol) ||
                      self.appProtocol.upperAscii() == ''TLS'' : true'
                  - message: If the listener type is tcp (the tcp field is set, or neither
                      the tcp nor http field is set) and the tls field is unset, appProtocol
                      must be empty or set to TCP, MONGO, REDIS, or MYSQL.
                    rule: '!has(self.http) && !has(self.tls) ? !has(self.appProtocol)
                      || self.appProtocol.upperAscii() in [''TCP'',''MONGO'',''REDIS'',''MYSQL'']
                      : true'
                maxItems: 300000
                minItems: 1
                type: array
              workloads:
                description: |-
                  Optional: Select the gateway workloads that implement this VirtualGateway in the same workspace.
                  A gateway workload is selected if it matches any of the provided selectors.
                  For `selector.name`, specify the gateway service's name.
                  For `selector.labels`, specify the gateway service's `spec.selector` label.
    
                  </br>**Implementation notes**:<ul>
                  <li>If this field is nil, it is applied to all gateway workloads.</li>
                  <li>If one of the selectors is nil, that selector selects nothing.</li>
                  <li>If one of the selectors is `{}`, it selects everything.</li></ul>
                items:
                  description: |-
                    WorkloadSelector is a Selector specifically built for selecting individual workloads.
                    Workloads must have injected sidecar proxies or be standalone gateway proxies to be selected by Gloo Mesh policies.
    
                    This selector can be used to select Kubernetes workloads (KUBE) or sidecar-injected external endpoints (VM).
                  properties:
                    kind:
                      description: The kind of workload being selected. Defaults to Kube.
                      enum:
                      - KUBE
                      - VM
                      type: string
                    port:
                      description: |-
                        The port to select on the selected workloads.
                        Only applies to policies which select specific workload ports, such as the WasmDeploymentPolicy.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                    selector:
                      description: Selector used to match Workload objects by their metadata.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If omitted, Gloo selects
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If omitted, Gloo selects
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If omitted, Gloo selects
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If omitted, Gloo selects
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
            required:
            - listeners
            type: object
          status:
            description: The status of the resource after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              externalServicesCount:
                description: The number of ExternalServices exposed by this VirtualGateway.
                maximum: 4294967295
                minimum: 0
                type: integer
              routeTablesCount:
                description: The number of RouteTables allowed to bind to this VirtualGateway.
                maximum: 4294967295
                minimum: 0
                type: integer
              selectedWorkloadsCount:
                description: The number of workloads selected by this VirtualGateway.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/observability.policy.gloo.solo.io_crds.yaml
# Code generated by skv2. DO NOT EDIT.
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: f00a6ae827dabac8
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: accesslogpolicies.observability.policy.gloo.solo.io
spec:
  group: observability.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: AccessLogPolicy
    listKind: AccessLogPolicyList
    plural: accesslogpolicies
    singular: accesslogpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: Specifications for the policy.
            properties:
              applyToWorkloads:
                description: |-
                  Select the workloads where access logs will be collected.
                  If empty, the policy applies to all workloads in the workspace.
                items:
                  description: |-
                    WorkloadSelector is a Selector specifically built for selecting individual workloads.
                    Workloads must have injected sidecar proxies or be standalone gateway proxies to be selected by Gloo Mesh policies.
    
                    This selector can be used to select Kubernetes workloads (KUBE) or sidecar-injected external endpoints (VM).
                  properties:
                    kind:
                      description: The kind of workload being selected. Defaults to Kube.
                      enum:
                      - KUBE
                      - VM
                      type: string
                    port:
                      description: |-
                        The port to select on the selected workloads.
                        Only applies to policies which select specific workload ports, such as the WasmDeploymentPolicy.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                    selector:
                      description: Selector used to match Workload objects by their metadata.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If omitted, Gloo selects
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If omitted, Gloo selects
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If omitted, Gloo selects
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If omitted, Gloo selects
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: Details of the policy specifying how to collect access logs
                  from the selected workloads.
                properties:
                  filters:
                    description: |-
                      Criteria for determining which access logs are recorded for the workload.
                      The list is disjunctive, meaning that a request is logged if it matches any filter.
                      If empty, all access logs are recorded.
                    items:
                      description: Criteria for recording access logs. A request must
                        match all specified criteria in the filter to be recorded.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - statusCodeMatcher
                          - required:
                            - headerMatcher
                      - required:
                        - statusCodeMatcher
                      - required:
                        - headerMatcher
                      properties:
                        headerMatcher:
                          description: Matches against a request or response HTTP header.
                            Omit to match any headers.
                          properties:
                            invertMatch:
                              description: |-
                                If set to true, the result of the match will be inverted. Defaults to false.
    
                                Examples:
    
                                - name=foo, invert_match=true: matches if no header named `foo` is present
                                - name=foo, value=bar, invert_match=true: matches if no header named `foo` with value `bar` is present
                                - name=foo, value=``\d{3}``, regex=true, invert_match=true: matches if no header named `foo` with a value consisting of three integers is present.
                              type: boolean
                            name:
                              description: Specify the name of the header in the request.
                              type: string
                            regex:
                              description: Specify whether the header value should be
                                treated as regex.
                              type: boolean
                            value:
                              description: |-
                                Specify the value of the header. If the value is absent a request that
                                has the name header will match, regardless of the header’s value.
                              type: string
                          type: object
                        statusCodeMatcher:
                          description: Matches against a response HTTP status code. Omit
                            to match any status code.
                          properties:
                            comparator:
                              description: The comparison type used for matching.
                              enum:
                              - EQ
                              - GE
                              - LE
                              type: string
                            value:
                              description: The status code value to match against.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                      type: object
                    type: array
                  includedFilterStateObjects:
                    description: Filter state objects to include in access logs.
                    items:
                      type: string
                    type: array
                  includedRequestHeaders:
                    description: Request headers to include in access logs.
                    items:
                      type: string
                    type: array
                  includedResponseHeaders:
                    description: Response headers to include in access logs.
                    items:
                      type: string
                    type: array
                  includedResponseTrailers:
                    description: Response trailers to include in access logs.
                    items:
                      type: string
                    type: array
                type: object
            type: object
          status:
            description: The status of the policy after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied policy.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedWorkloads:
                description: The number of workloads selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/resilience.policy.gloo.solo.io_crds.yaml
# Code generated by skv2. DO NOT EDIT.
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: f6ef9604870ad04b
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: activehealthcheckpolicies.resilience.policy.gloo.solo.io
spec:
  group: resilience.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ActiveHealthCheckPolicy
    listKind: ActiveHealthCheckPolicyList
    plural: activehealthcheckpolicies
    shortNames:
    - ahcp
    singular: activehealthcheckpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: Specifications for the policy.
            properties:
              applyToDestinations:
                description: |-
                  Destinations to actively health check.
                  If empty, no healthchecks are performed.
                items:
                  description: |-
                    DestinationSelector is a selector for matching routable destinations for routes.
                    DestinationSelectors can select a variety of object types. The behavior of the route action
                    will vary depending on the type of destination selected. Defaults to the kubernetes `v1/Service`.
                    Currently supported destination types:
                    - v1 Service
                    - networking.gloo.solo.io/v2 VirtualDestination (route traffic to a group of backing destinations)
                    - networking.gloo.solo.io/v2 ExternalService (route traffic to a static set of service endpoints external to the mesh)
                  properties:
                    kind:
                      description: The kind of destination being selected. defaults to
                        Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: |-
                        The port on the Destination which receives traffic.
                        All ports on the Destination will be selected if left empty.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                    selector:
                      description: The selector used to match destination objects by their
                        metadata
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If omitted, Gloo selects
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If omitted, Gloo selects
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If omitted, Gloo selects
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If omitted, Gloo selects
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: Details of the healthcheck policy to apply to the selected
                  destinations.
                properties:
                  healthCheck:
                    description: |-
                      Configuration for the Envoy healthcheck. For more info, see the
                      [Envoy healthcheck config reference](https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/endpoint/v3/endpoint_components.proto#config-endpoint-v3-endpoint-healthcheckconfig).
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  virtualGateways:
                    description: A list of references to virtual gateways that perform
                      the healthchecks.
                    items:
                      description: |-
                        reference to a Kubernetes API object.
                        Kube API objects are referenced explicitly by the namespace and cluster containing them.
                      properties:
                        cluster:
                          description: the cluster of the object. If omitted, Gloo Mesh
                            will use the same cluster as the parent object containing
                            this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. If omitted, Gloo Mesh
                            will use the same namespace as the parent object containing
                            this reference.
                          type: string
                      type: object
                    type: array
                type: object
            type: object
          status:
            description: The status of the policy after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied policy.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedDestinationPorts:
                description: The number of destination ports selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/resilience.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: a1e76e7def5fd9d9
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: adaptiverequestconcurrencypolicies.resilience.policy.gloo.solo.io
spec:
  group: resilience.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: AdaptiveRequestConcurrencyPolicy
    listKind: AdaptiveRequestConcurrencyPolicyList
    plural: adaptiverequestconcurrencypolicies
    shortNames:
    - arcp
    singular: adaptiverequestconcurrencypolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: Specifications for the policy.
            properties:
              applyToDestinations:
                description: |-
                  Destinations to apply the concurrency limit to.
                  If empty, the policy applies to all destinations in the workspace.
                items:
                  description: |-
                    DestinationSelector is a selector for matching routable destinations for routes.
                    DestinationSelectors can select a variety of object types. The behavior of the route action
                    will vary depending on the type of destination selected. Defaults to the kubernetes `v1/Service`.
                    Currently supported destination types:
                    - v1 Service
                    - networking.gloo.solo.io/v2 VirtualDestination (route traffic to a group of backing destinations)
                    - networking.gloo.solo.io/v2 ExternalService (route traffic to a static set of service endpoints external to the mesh)
                  properties:
                    kind:
                      description: The kind of destination being selected. defaults to
                        Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: |-
                        The port on the Destination which receives traffic.
                        All ports on the Destination will be selected if left empty.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                    selector:
                      description: The selector used to match destination objects by their
                        metadata
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If omitted, Gloo selects
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If omitted, Gloo selects
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If omitted, Gloo selects
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If omitted, Gloo selects
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: Details of the policy to apply to the selected destinations.
                properties:
                  concurrencyLimitExceededStatus:
                    description: |-
                      Return a custom HTTP response status code to the downstream client when the concurrency limit is exceeded.
                      If this field is empty, omitted, or set to a non-error response of < 400, the response code defaults to 503 (Service Unavailable).
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  concurrencyUpdateIntervalMillis:
                    description: |-
                      The period of time during which request latency samples are taken to recalculate the concurrency limit.
                      This field is required.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  maxConcurrencyLimit:
                    description: |-
                      The allowed upper-bound on the calculated concurrency limit. For example, you can cap the concurrency
                      limit to a maximum of 800 connections, in the case that the calculated concurrency limit exceeds this value.
                      If unset, defaults to 1000.
                    maximum: 4294967295
                    minimum: 0
                    nullable: true
                    type: integer
                  minRttCalcParams:
                    description: |-
                      Configure how the gradient controller calculates the minimum round-trip time (minRTT) for the destination.
                      For more information about the minRTT formula and the following fields, see the
                      [Envoy adaptive concurrency docs](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/adaptive_concurrency_filter).
                      This field is required.
                    properties:
                      bufferPercentile:
                        description: |-
                          Add a buffer to the measured minRTT to stabilize natural variability in latency. This is represented as a percentage
                          of the measured value, and can be adjusted to allow more or less tolerance to the sampled latency values.
                          If unset, defaults to 25%.
                        nullable: true
                        type: number
                      intervalMillis:
                        description: |-
                          The amount of time between each minRTT remeasurement.
                          This field is required.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                      jitterPercentile:
                        description: |-
                          Add a random delay to the start of each minRTT measurement, represented as a percentage of the interval between each
                          remeasurement (`intervalMillis`). For example, if the interval is 1000ms and the jitter is 15%, the next minRTT measurement
                          begins in the range of 1000ms - 1150ms, because a delay between 0ms - 150ms is added to the 1000ms interval.
                          If unset, defaults to 15%.
                        nullable: true
                        type: number
                      minConcurrency:
                        description: |-
                          Temporarily set the concurrency limit until the latest minRTT measurement is complete.
                          If unset, defaults to 3.
                        maximum: 4294967295
                        minimum: 0
                        nullable: true
                        type: integer
                      requestCount:
                        description: |-
                          The number of requests to sample during the `concurrencyUpdateIntervalMillis` timeframe.
                          If unset, defaults to 50.
                        maximum: 4294967295
                        minimum: 0
                        nullable: true
                        type: integer
                    type: object
                  sampleAggregatePercentile:
                    description: |-
                      The percent of sampled requests to use when summarizing aggregated samples in the minRTT
                      calculation. If unset, defaults to 50%.
                    nullable: true
                    type: number
                type: object
            type: object
          status:
            description: The status of the policy after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedDestinations:
                description: The number of destinations selected by this policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/resilience.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 6a406508883cb8f7
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: connectionpolicies.resilience.policy.gloo.solo.io
spec:
  group: resilience.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ConnectionPolicy
    listKind: ConnectionPolicyList
    plural: connectionpolicies
    shortNames:
    - cp
    singular: connectionpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: ConnectionPolicy provides settings to apply low-level settings
              on selected TCP connections.
            properties:
              applyToDestinations:
                description: |-
                  select the destinations where the policy will be applied. If empty,
                  this will apply to all destinations in the workspace.
                items:
                  description: |-
                    DestinationSelector is a selector for matching routable destinations for routes.
                    DestinationSelectors can select a variety of object types. The behavior of the route action
                    will vary depending on the type of destination selected. Defaults to the kubernetes `v1/Service`.
                    Currently supported destination types:
                    - v1 Service
                    - networking.gloo.solo.io/v2 VirtualDestination (route traffic to a group of backing destinations)
                    - networking.gloo.solo.io/v2 ExternalService (route traffic to a static set of service endpoints external to the mesh)
                  properties:
                    kind:
                      description: The kind of destination being selected. defaults to
                        Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: |-
                        The port on the Destination which receives traffic.
                        All ports on the Destination will be selected if left empty.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                    selector:
                      description: The selector used to match destination objects by their
                        metadata
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If omitted, Gloo selects
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If omitted, Gloo selects
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If omitted, Gloo selects
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If omitted, Gloo selects
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: The details of the low-level network connection settings
                  to apply to the destinations.
                properties:
                  http:
                    description: The low-level HTTP connection settings to apply to the
                      destination selected.
                    properties:
                      idleTimeout:
                        description: |-
                          The idle timeout for upstream connection pool connections. The idle timeout is defined as the period in which there are no active requests.
                          If omitted, the default is 1 hour. When the idle timeout is reached, the connection will be closed. If the connection is an HTTP/2 connection
                          a drain sequence will occur prior to closing the connection. Note that request based timeouts mean that HTTP/2 PINGs will not keep the connection alive.
                          Applies to both HTTP1.1 and HTTP2 connections.
                          For more information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#duration).
                        type: string
                      maxPendingRequests:
                        description: |-
                          Maximum number of requests that will be queued while waiting for a ready connection pool connection. Default 1024.
                          If the limit is reached, the request will fail and a 503 error will be returned.
                          Applicable to both HTTP/1.1 and HTTP2.
                        format: int32
                        type: integer
                      maxRequests:
                        description: Maximum number of active requests to a destination.
                          Default 1024. Applicable to both HTTP/1.1 and HTTP2.
                        format: int32
                        type: integer
                      maxRequestsPerConnection:
                        description: Maximum number of requests per connection to a backend.
                          Setting this parameter to 1 disables keep alive. Default 0,
                          meaning “unlimited”, up to 2^29.
                        format: int32
                        type: integer
                      maxRetries:
                        description: Maximum number of retries that can be outstanding
                          to all hosts in a cluster at a given time. Defaults to 2^32-1.
                        format: int32
                        type: integer
                    type: object
                  tcp:
                    description: The low-level TCP connection settings to apply to the
                      destinations selected.
                    properties:
                      connectTimeout:
                        description: |-
                          Sets the TCP connection timeout. It must be greater than or equal to 1ms.
                          For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#duration).
                        type: string
                      maxConnections:
                        description: Sets the maximum allowed connections to the destination
                          host.
                        format: int32
                        type: integer
                      tcpKeepalive:
                        description: |-
                          Sets the TCP keep-alive settings to apply to selected destinations.
                          If the EnableDefaultTcpKeepalive feature gate is enabled, TCP keep-alive is configured on all VirtualDestinations by default,
                          with the probes field set to 9 and the time and interval fields set to 180s,
                          and setting these values will override the defaults for selected VirtualDestinations.
                        properties:
                          interval:
                            description: |-
                              The time duration between keep-alive probes.
                              Defaults to the OS-level configuration. For Linux, the default is 75s, unless overridden.
    
                              </br>**Configuration constraints**:<ul>
                              <li>The value must be an integer or decimal value and a preferred unit, or multiple of these concatenated.
                              Examples: `1m`, `1h`, `1.5h`, `1s500ms`</li>
                              <li>The value cannot have granularity smaller than one millisecond.</li>
                              <li>The value must be at least 1ms.</li>
                              <li>For information about the value format,
                              see the [ParseDuration documentation](https://pkg.go.dev/time#ParseDuration).</li></ul>
                            type: string
                            x-kubernetes-validations:
                            - message: The value must be at least 1ms.
                              rule: duration(self) >= duration('1ms')
                            - message: The value cannot have granularity smaller than
                                one millisecond.
                              rule: '!self.contains(''ns'') && !self.contains(''us'')
                                && !self.contains(''μs'')'
                            - message: The value cannot have granularity smaller than
                                one millisecond.
                              rule: (duration(self)-duration('1ns')).getMilliseconds()
                                == duration(self).getMilliseconds()-1
                          probes:
                            description: |-
                              Maximum number of TCP keepalive probes to send before determining that connection is dead.
                              Defaults to the OS-level configuration. For Linux, the default is 9, unless overridden.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          time:
                            description: |-
                              The time duration a connection needs to be idle before keep-alive probes start being sent.
                              Defaults to the OS-level configuration. For Linux, the default is 7200s (2 hours), unless overridden.
    
                              </br>**Configuration constraints**:<ul>
                              <li>The value must be an integer or decimal value and a preferred unit, or multiple of these concatenated.
                              Examples: `1m`, `1h`, `1.5h`, `1s500ms`</li>
                              <li>The value cannot have granularity smaller than one millisecond.</li>
                              <li>The value must be at least 1ms.</li>
                              <li>For information about the value format,
                              see the [ParseDuration documentation](https://pkg.go.dev/time#ParseDuration).</li></ul>
                            type: string
                            x-kubernetes-validations:
                            - message: The value must be at least 1ms.
                              rule: duration(self) >= duration('1ms')
                            - message: The value cannot have granularity smaller than
                                one millisecond.
                              rule: '!self.contains(''ns'') && !self.contains(''us'')
                                && !self.contains(''μs'')'
                            - message: The value cannot have granularity smaller than
                                one millisecond.
                              rule: (duration(self)-duration('1ns')).getMilliseconds()
                                == duration(self).getMilliseconds()-1
                        type: object
                    type: object
                type: object
            type: object
          status:
            description: The status of the policy after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedDestinationPorts:
                description: The number of destination ports selected by this policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/resilience.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 9ab413f60760347f
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: failoverpolicies.resilience.policy.gloo.solo.io
spec:
  group: resilience.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: FailoverPolicy
    listKind: FailoverPolicyList
    plural: failoverpolicies
    shortNames:
    - fp
    singular: failoverpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: Specifications for the policy.
            properties:
              applyToDestinations:
                description: |-
                  Select the destinations to apply the policy to by using labels.
                  If empty, the policy applies to all destinations in the workspace.
                items:
                  description: |-
                    DestinationSelector is a selector for matching routable destinations for routes.
                    DestinationSelectors can select a variety of object types. The behavior of the route action
                    will vary depending on the type of destination selected. Defaults to the kubernetes `v1/Service`.
                    Currently supported destination types:
                    - v1 Service
                    - networking.gloo.solo.io/v2 VirtualDestination (route traffic to a group of backing destinations)
                    - networking.gloo.solo.io/v2 ExternalService (route traffic to a static set of service endpoints external to the mesh)
                  properties:
                    kind:
                      description: The kind of destination being selected. defaults to
                        Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: |-
                        The port on the Destination which receives traffic.
                        All ports on the Destination will be selected if left empty.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                    selector:
                      description: The selector used to match destination objects by their
                        metadata
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If omitted, Gloo selects
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If omitted, Gloo selects
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If omitted, Gloo selects
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If omitted, Gloo selects
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: The details of the failover policy to apply to the selected
                  virtual destinations.
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - priorityLabels
                - required:
                  - priorityLabels
                properties:
                  localityMappings:
                    description: |-
                      Map the localities to fail over traffic from one region, zone,
                      or subzone to another in case of failure. The locality is determined
                      by the Kubernetes labels on the node where the destination's app runs.
                      For more information, see the [Istio docs](https://istio.io/latest/docs/tasks/traffic-management/locality-load-balancing/).
    
                      You can exclude this setting to enable the locality load balancer
                      settings without mappings.
    
                      Only priority labels or locality mappings can be specified, not both.
                    items:
                      properties:
                        from:
                          description: |-
                            The locality of the destination where Gloo Mesh originally
                            tried to fulfill the request.
                          properties:
                            region:
                              description: The locality's region.
                              type: string
                            subZone:
                              description: (Optional) The locality's sub-zone.
                              type: string
                            zone:
                              description: (Optional) The locality's zone.
                              type: string
                          type: object
                        to:
                          description: |-
                            The localities of the destination where Gloo Mesh can reroute requests.
                            You must specify the region, and optionally the zone and subzone.
                            If you have multiple `to` destinations, you can optionally set a weight.
                          items:
                            description: |-
                              A geographic location defined by a region, zone, and sub-zone
                              along with the weight for the destination.
                            properties:
                              region:
                                description: The locality's region.
                                type: string
                              subZone:
                                description: (Optional) The locality's sub-zone.
                                type: string
                              weight:
                                description: |-
                                  (Optional) Weight for destination locality. All weights must add up to 100.
                                  If not provided, weight is determined based on other destination locality weights.
                                  For information about the value format, see the
                                  [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#u-int32-value).
                                maximum: 4294967295
                                minimum: 0
                                nullable: true
                                type: integer
                              zone:
                                description: (Optional) The locality's zone.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  priorityLabels:
                    description: |-
                      Prioritize destinations to fail over traffic to by configuring priority labels. In general, destinations that match the most labels have higher priority during failover.
                      For more information, see the [Istio docs](https://istio.io/latest/docs/reference/config/networking/destination-rule/#:~:text=No-,failoverPriority,-string%5B%5D).
    
                      When using priority labels, you must specify either an ordered list of label keys or an ordered list of label key-value pairs.
                      For example, you can specify `["region"]` or `["region=us-east-1", "availabilityzone=1a", "datacenter=4"]`.
                      You cannot have an ordered list that includes both label keys and label key-value pairs.
    
                      Only priority labels or locality mappings can be specified, not both. If you specify both, Gloo Mesh will give precedence to the locality mappings.
                      You can use locality labels in your list of priority labels, such as the Kubernetes `topology.kubernetes.io/region` node label.
                    properties:
                      labels:
                        items:
                          type: string
                        type: array
                    type: object
                type: object
            type: object
          status:
            description: The status of the policy after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedDestinationPorts:
                description: The number of destination ports selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/resilience.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: e14e07e55faa3ce9
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: faultinjectionpolicies.resilience.policy.gloo.solo.io
spec:
  group: resilience.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: FaultInjectionPolicy
    listKind: FaultInjectionPolicyList
    plural: faultinjectionpolicies
    shortNames:
    - fip
    singular: faultinjectionpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: Specifications for the policy.
            properties:
              applyToRoutes:
                description: |-
                  Routes to apply the policy to.
                  If empty, the policy applies to all routes in the workspace.
    
                  </br>**Configuration constraints**: Only one fault injection policy can apply to a route. Subsequent policies (sorted by creation time)
                  are ignored and put into a FAILED state.
                items:
                  description: |-
                    RouteSelector is a Selector specifically built for individual Routes inside of RouteTables.
    
                    This selector can be used to select individual routes or entire route tables using the same label selector.
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: Only select routes attached to route tables matching
                            the cluster.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Select routes including all specified labels on
                            the route or route table.
                          type: object
                        namespace:
                          description: Only select routes attached to route tables matching
                            the namespace.
                          type: string
                        workspace:
                          description: Only select routes attached to route tables matching
                            the workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: The kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            The port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination objects
                                being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination objects
                                being targeted.
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                        selector:
                          description: The selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If omitted, Gloo selects
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If omitted, Gloo selects
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If omitted, Gloo selects
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If omitted, Gloo selects
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: |-
                  The details of the fault injection policy to apply to the selected routes.
    
                  </br>**Implementation notes**: Delays and aborts are independent of one another.
                  When both are set, both happen, with the delay happening first.
    
                  </br>**Configuration constraints**: A fault injection rule must specify a delay, an abort, or both.
                properties:
                  abort:
                    description: Abort HTTP request attempts, and return an error code
                      to the traffic source.
                    properties:
                      httpStatus:
                        description: |-
                          Required: The HTTP status code to use to abort the request.
    
                          </br>**Configuration constraints**: The status code must be in the range 200 - 599, inclusive.
                        format: int32
                        maximum: 599
                        minimum: 200
                        type: integer
                      percentage:
                        description: |-
                          Percentage of requests to be aborted. If omitted, all requests are aborted.
    
                          </br>**Configuration constraints**:<ul>
                          <li>The value must be 0.0 or in the range 0.0001 - 100.0, inclusive.</li>
                          <li>For information about the value format,
                          see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#double-value).</li></ul>
                        maximum: 100
                        nullable: true
                        type: number
                        x-kubernetes-validations:
                        - message: The value must be 0.0 or in the range 0.0001 - 100.0,
                            inclusive.
                          rule: self == 0.0 || self >= 0.0001
                    required:
                    - httpStatus
                    type: object
                  delay:
                    description: |-
                      Delay requests before forwarding them to the upstream service, which emulates various failures such as
                      network issues or overloaded upstream services.
                    properties:
                      fixedDelay:
                        description: |-
                          Required: Add a delay of a fixed duration before sending the request.
    
                          </br>**Configuration constraints**:<ul>
                          <li>The value must be an integer or decimal value and a preferred unit, or multiple of these concatenated.
                          Examples: `1m`, `1h`, `1.5h`, `1s500ms`</li>
                          <li>The value cannot have granularity smaller than one millisecond.</li>
                          <li>The value must be at least 1ms.</li>
                          <li>For information about the value format,
                          see the [ParseDuration documentation](https://pkg.go.dev/time#ParseDuration).</li></ul>
                        type: string
                        x-kubernetes-validations:
                        - message: The value must be at least 1ms.
                          rule: duration(self) >= duration('1ms')
                        - message: The value cannot have granularity smaller than one
                            millisecond.
                          rule: '!self.contains(''ns'') && !self.contains(''us'') && !self.contains(''μs'')'
                        - message: The value cannot have granularity smaller than one
                            millisecond.
                          rule: (duration(self)-duration('1ns')).getMilliseconds() ==
                            duration(self).getMilliseconds()-1
                      percentage:
                        description: |-
                          Delay only a certain percentage of requests. If omitted, all requests are delayed.
    
                          </br>**Configuration constraints**:<ul>
                          <li>The value must be 0.0 or in the range 0.0001 - 100.0, inclusive.</li>
                          <li>For information about the value format,
                          see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#double-value).</li></ul>
                        maximum: 100
                        nullable: true
                        type: number
                        x-kubernetes-validations:
                        - message: The value must be 0.0 or in the range 0.0001 - 100.0,
                            inclusive.
                          rule: self == 0.0 || self >= 0.0001
                    required:
                    - fixedDelay
                    type: object
                type: object
                x-kubernetes-validations:
                - message: Either config.delay, config.abort, or both must be set.
                  rule: has(self.delay) || has(self.abort)
            type: object
          status:
            description: The status of the policy after it is applied to your Gloo environment.
            properties:
              common:
                description: The common status of the object
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedRoutes:
                description: The number of routes selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/resilience.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: c3def4e82f61a0d8
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: graphqlpersistedquerycachepolicies.resilience.policy.gloo.solo.io
spec:
  group: resilience.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: GraphQLPersistedQueryCachePolicy
    listKind: GraphQLPersistedQueryCachePolicyList
    plural: graphqlpersistedquerycachepolicies
    shortNames:
    - gqlpq
    - gqlpqc
    singular: graphqlpersistedquerycachepolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              To improve network performance for large query strings, the GraphQL filter supports
              automatic persisted queries. A persisted query is a query string that's cached on the server side,
              along with it's hash. The client can then send the hash instead of the full query string, thus
              reducing request sizes (responses are unaffected).
              Persisted queries are especially effective when clients send queries as GET requests.
              This enables clients to take advantage of the browser cache and integrate with a CDN.
              If empty, persisted query cache is not used.
            properties:
              applyToRoutes:
                description: |-
                  Select the graphql routes where the policy will be applied.
                  If empty, will apply to no graphql routes.
                  selection via Destination selectors will not work for this policy, and only
                  route selectors will work.
                  If more than one GraphQLPersistedQueryCachePolicy applies to a GraphQLRoute, the oldest
                  one will be applied.
                items:
                  description: |-
                    RouteSelector is a Selector specifically built for individual Routes inside of RouteTables.
    
                    This selector can be used to select individual routes or entire route tables using the same label selector.
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: Only select routes attached to route tables matching
                            the cluster.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Select routes including all specified labels on
                            the route or route table.
                          type: object
                        namespace:
                          description: Only select routes attached to route tables matching
                            the namespace.
                          type: string
                        workspace:
                          description: Only select routes attached to route tables matching
                            the workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: The kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            The port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination objects
                                being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination objects
                                being targeted.
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                        selector:
                          description: The selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If omitted, Gloo selects
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If omitted, Gloo selects
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If omitted, Gloo selects
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If omitted, Gloo selects
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: Persisted query cache configuration.
                properties:
                  cacheSize:
                    description: The number of queries to store in the persisted query
                      cache, defaults to 1000.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
            type: object
          status:
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedRoutes:
                description: The number of routes selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/resilience.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: e924c7877a7d7708
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: listenerconnectionpolicies.resilience.policy.gloo.solo.io
spec:
  group: resilience.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ListenerConnectionPolicy
    listKind: ListenerConnectionPolicyList
    plural: listenerconnectionpolicies
    shortNames:
    - lcp
    singular: listenerconnectionpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              ListenerConnectionPolicy is used to set configuration for gateway listeners.
    
              ```
              apiVersion: resilience.policy.gloo.solo.io/v2
              kind: ListenerConnectionPolicy
              metadata:
                name: my-policy
                namespace: bookinfo
              spec:
                config:
                  perConnectionBufferLimitBytes: 16384
                applyToListeners:
                - virtualGateway:
                    name: virtual-gateway
                    namespace: bookinfo
                    cluster: my-cluster
                  port:
                    number: 443
              ```
            properties:
              applyToListeners:
                description: The VirtualGateway(s) and Port(s) to which this policy applies.
                items:
                  description: ListenerSelector is a selector for a listener on a VirtualGateway.
                  properties:
                    port:
                      description: The port to select on the selected listener.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                    virtualGateway:
                      description: The virtual gateway on which to select a listener.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If omitted, Gloo selects
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If omitted, Gloo selects
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If omitted, Gloo selects
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If omitted, Gloo selects
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                properties:
                  perConnectionBufferLimitBytes:
                    description: |-
                      Required: Soft limit on size of the listener’s new connection read
                      and write buffers.
                      Default value set by Envoy is 1MiB.
                    maximum: 4294967295
                    minimum: 0
                    nullable: true
                    type: integer
                  tcpKeepalive:
                    description: Sets the TCP keep-alive settings to apply to selected
                      listeners.
                    properties:
                      interval:
                        description: |-
                          The time duration between keep-alive probes.
                          Defaults to the OS-level configuration. For Linux, the default is 75s, unless overridden.
    
                          </br>**Configuration constraints**:<ul>
                          <li>The value must be an integer or decimal value and a preferred unit, or multiple of these concatenated.
                          Examples: `1m`, `1h`, `1.5h`, `1s500ms`</li>
                          <li>The value cannot have granularity smaller than one millisecond.</li>
                          <li>The value must be at least 1ms.</li>
                          <li>For information about the value format,
                          see the [ParseDuration documentation](https://pkg.go.dev/time#ParseDuration).</li></ul>
                        type: string
                        x-kubernetes-validations:
                        - message: The value must be at least 1ms.
                          rule: duration(self) >= duration('1ms')
                        - message: The value cannot have granularity smaller than one
                            millisecond.
                          rule: '!self.contains(''ns'') && !self.contains(''us'') && !self.contains(''μs'')'
                        - message: The value cannot have granularity smaller than one
                            millisecond.
                          rule: (duration(self)-duration('1ns')).getMilliseconds() ==
                            duration(self).getMilliseconds()-1
                      probes:
                        description: |-
                          Maximum number of TCP keepalive probes to send before determining that connection is dead.
                          Defaults to the OS-level configuration. For Linux, the default is 9, unless overridden.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                      time:
                        description: |-
                          The time duration a connection needs to be idle before keep-alive probes start being sent.
                          Defaults to the OS-level configuration. For Linux, the default is 7200s (2 hours), unless overridden.
    
                          </br>**Configuration constraints**:<ul>
                          <li>The value must be an integer or decimal value and a preferred unit, or multiple of these concatenated.
                          Examples: `1m`, `1h`, `1.5h`, `1s500ms`</li>
                          <li>The value cannot have granularity smaller than one millisecond.</li>
                          <li>The value must be at least 1ms.</li>
                          <li>For information about the value format,
                          see the [ParseDuration documentation](https://pkg.go.dev/time#ParseDuration).</li></ul>
                        type: string
                        x-kubernetes-validations:
                        - message: The value must be at least 1ms.
                          rule: duration(self) >= duration('1ms')
                        - message: The value cannot have granularity smaller than one
                            millisecond.
                          rule: '!self.contains(''ns'') && !self.contains(''us'') && !self.contains(''μs'')'
                        - message: The value cannot have granularity smaller than one
                            millisecond.
                          rule: (duration(self)-duration('1ns')).getMilliseconds() ==
                            duration(self).getMilliseconds()-1
                    type: object
                type: object
            type: object
          status:
            description: The status of the policy after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedListeners:
                description: The number of virtual gateway listeners selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/resilience.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 91e10c92bf0c71e7
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: outlierdetectionpolicies.resilience.policy.gloo.solo.io
spec:
  group: resilience.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: OutlierDetectionPolicy
    listKind: OutlierDetectionPolicyList
    plural: outlierdetectionpolicies
    shortNames:
    - odp
    singular: outlierdetectionpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: Specifications for the policy.
            properties:
              applyToDestinations:
                description: |-
                  Destinations to apply the policy to.
    
                  </br>**Implementation notes**:<ul>
                  <li>If empty, the policy applies to all destinations in the workspace.</li>
                  <li>This policy currently supports selecting Gloo virtual destinations or external services.
                  Selecting Kubernetes services is not supported.</li></ul>
    
                  **Configuration constraints**: `applyToDestinations.kind` must equal either `VIRTUAL_DESTINATION` or `EXTERNAL_SERVICE`.
                items:
                  description: |-
                    DestinationSelector is a selector for matching routable destinations for routes.
                    DestinationSelectors can select a variety of object types. The behavior of the route action
                    will vary depending on the type of destination selected. Defaults to the kubernetes `v1/Service`.
                    Currently supported destination types:
                    - v1 Service
                    - networking.gloo.solo.io/v2 VirtualDestination (route traffic to a group of backing destinations)
                    - networking.gloo.solo.io/v2 ExternalService (route traffic to a static set of service endpoints external to the mesh)
                  properties:
                    kind:
                      description: The kind of destination being selected. defaults to
                        Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: |-
                        The port on the Destination which receives traffic.
                        All ports on the Destination will be selected if left empty.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                    selector:
                      description: The selector used to match destination objects by their
                        metadata
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If omitted, Gloo selects
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If omitted, Gloo selects
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If omitted, Gloo selects
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If omitted, Gloo selects
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: The details of the OutlierDetectionPolicy to apply to the
                  selected destinations.
                properties:
                  baseEjectionTime:
                    description: |-
                      The minimum time duration for ejection, or the time when a destination
                      is considered unhealthy and not used for load balancing.
                      Defaults to 30s.
    
                      </br>**Configuration constraints**:<ul>
                      <li>The value must be an integer or decimal value and a preferred unit, or multiple of these concatenated.
                      Examples: `1m`, `1h`, `1.5h`, `1s500ms`</li>
                      <li>The value cannot have granularity smaller than one millisecond.</li>
                      <li>The value must be at least 1ms.</li>
                      <li>For information about the value format,
                      see the [ParseDuration documentation](https://pkg.go.dev/time#ParseDuration).</li></ul>
                    type: string
                  consecutiveErrors:
                    description: |-
                      The number of 5xx errors that can be returned before a destination is removed
                      from the healthy connection pool. The default is 5.
    
                      </br>**Configuration constraints**:<ul>
                      <li>The value must be greater than or equal to 1.</li>
                      <li>The maximum value must fit the `int32` format.
                      For information about the value format, see the
                      [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#u-int32-value).</li></ul>
                    maximum: 4294967295
                    minimum: 0
                    nullable: true
                    type: integer
                  consecutiveGatewayErrors:
                    description: |-
                      The number of gateway errors before a host is ejected from the connection pool.
    
                      </br>**Implementation notes**:<ul>
                      <li>When the upstream host is accessed over HTTP, a 502, 503, or 504 reponse
                      code qualifies as a gateway error.</li>
                      <li>When the upstream host is accessed over
                      an opaque TCP connection, connection timeouts and connection error/failure
                      events qualify as a gateway error.</li>
                      <li>This feature is disabled by default or when set to the value 0.</li>
                      <li>This field (`consecutiveGatewayErrors`) and `consecutiveErrors` can be
                      used separately or together. Because the errors counted by
                      `consecutiveGatewayErrors` are also included in `consecutiveErrors`,
                      if the value of `consecutiveGatewayErrors` is greater than or equal to
                      the value of `consecutiveErrors`, `consecutiveGatewayErrors` has
                      no effect.</li></ul>
    
                      **Configuration constraints**:<ul>
                      <li>The value must be greater than or equal to 0.</li>
                      <li>The maximum value must fit the `int32` format.
                      For information about the value format, see the
                      [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#u-int32-value).</li></ul>
                    maximum: 4294967295
                    minimum: 0
                    nullable: true
                    type: integer
                  interval:
                    description: |-
                      The amount of time between analyzing destinations for ejection.
                      Defaults to 10s.
    
                      </br>**Configuration constraints**:<ul>
                      <li>The value must be an integer or decimal value and a preferred unit, or multiple of these concatenated.
                      Examples: `1m`, `1h`, `1.5h`, `1s500ms`</li>
                      <li>The value cannot have granularity smaller than one millisecond.</li>
                      <li>The value must be at least 1ms.</li>
                      <li>For information about the value format,
                      see the [ParseDuration documentation](https://pkg.go.dev/time#ParseDuration).</li></ul>
                    type: string
                  maxEjectionPercent:
                    description: |-
                      The maximum percentage of destinations that can be removed
                      from the healthy connection pool at a time.
                      For example, if you have 10 total destinations that the policy selects,
                      and you set this value to 50 percent, 5 destinations can be removed at once.
                      At least 1 destination can always be removed, regardless of the value that you set.
                      The default value is `100`.
    
                      </br>**Configuration constraints**: The value must be in the range 0 - 100, inclusive. If set to 0, the default
                      Istio value, 10%, is used.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
            type: object
          status:
            description: The status of the policy after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedDestinationPorts:
                description: The number of destination ports selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/resilience.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 8bff06ced1e5080d
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: retrytimeoutpolicies.resilience.policy.gloo.solo.io
spec:
  group: resilience.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: RetryTimeoutPolicy
    listKind: RetryTimeoutPolicyList
    plural: retrytimeoutpolicies
    shortNames:
    - rtp
    singular: retrytimeoutpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: Specifications for the policy.
            properties:
              applyToRoutes:
                description: |-
                  Routes to apply the policy to.
    
                  </br>**Implementation notes**:<ul>
                  <li>Only one RetryTimeoutPolicy can apply to a route. Subsequent policies (sorted by creation time)
                  are ignored and put into a FAILED state.</li>
                  <li>If empty, the policy applies to all routes in the workspace.</li></ul>
                items:
                  description: |-
                    RouteSelector is a Selector specifically built for individual Routes inside of RouteTables.
    
                    This selector can be used to select individual routes or entire route tables using the same label selector.
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: Only select routes attached to route tables matching
                            the cluster.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Select routes including all specified labels on
                            the route or route table.
                          type: object
                        namespace:
                          description: Only select routes attached to route tables matching
                            the namespace.
                          type: string
                        workspace:
                          description: Only select routes attached to route tables matching
                            the workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: The kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            The port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination objects
                                being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination objects
                                being targeted.
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                        selector:
                          description: The selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If omitted, Gloo selects
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If omitted, Gloo selects
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If omitted, Gloo selects
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If omitted, Gloo selects
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: |-
                  The details of the retry/timeout policy to apply to the selected routes.
    
                  </br>**Configuration constraints**:<ul>
                  <li>This field is required.</li>
                  <li>At least one of `retries` and `request_timeout` must be set.</li>
                properties:
                  requestTimeout:
                    description: |-
                      Set a timeout on requests that match the selected routes.
    
                      </br>**Configuration constraints**:<ul>
                      <li>The value must be an integer or decimal value and a preferred unit, or multiple of these concatenated.
                      Examples: `1m`, `1h`, `1.5h`, `1s500ms`</li>
                      <li>The value cannot have granularity smaller than one millisecond.</li>
                      <li>The value must be at least 1ms.</li>
                      <li>For information about the value format,
                      see the [ParseDuration documentation](https://pkg.go.dev/time#ParseDuration).</li></ul>
                    type: string
                    x-kubernetes-validations:
                    - message: The value must be at least 1ms.
                      rule: duration(self) >= duration('1ms')
                    - message: The value cannot have granularity smaller than one millisecond.
                      rule: '!self.contains(''ns'') && !self.contains(''us'') && !self.contains(''μs'')'
                    - message: The value cannot have granularity smaller than one millisecond.
                      rule: (duration(self)-duration('1ns')).getMilliseconds() == duration(self).getMilliseconds()-1
                  retries:
                    description: Specify retries for failed requests.
                    properties:
                      attempts:
                        description: |-
                          The number of retries for a failed request.
                          The interval between retries is determined automatically (25ms+).
    
                          </br>**Implementation notes**:<ul>
                          <li>When the `requestTimeout` or `perTryTimeout` fields are configured,
                          the actual number of retries attempted also depends on those values.</li>
                          <li>The default value is 2 retries.</li>
                          <li>A value of `0` explicitly disable retries.</li>
                          <li>The maximum number of requests that can be made is 1 + `attempts`.</li></ul>
    
                          **Configuration constraints**: If set, this value must be greater than or equal to `0`.
                          For information about the value format, see the
                          [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#int32-value).
                        maximum: 2147483647
                        minimum: 0
                        nullable: true
                        type: integer
                      perTryTimeout:
                        description: |-
                          Timeout per retry attempt for a failed request.
                          If unset, this field defaults to 0, which means that no timeout is set.
    
                          </br>**Configuration constraints**:<ul>
                          <li>If `attempts` is 0, this field must not be set.</li>
                          <li>The value must be an integer or decimal value and a preferred unit, or multiple of these concatenated.
                          Examples: `1m`, `1h`, `1.5h`, `1s500ms`</li></ul></li>
                          <li>The value cannot have granularity smaller than one millisecond.</li>
                          <li>The value must be at least 1ms.</li>
                          <li>For information about the value format,
                          see the [ParseDuration documentation](https://pkg.go.dev/time#ParseDuration).</li></ul>
                        type: string
                        x-kubernetes-validations:
                        - message: The value must be at least 1ms.
                          rule: duration(self) >= duration('1ms')
                        - message: The value cannot have granularity smaller than one
                            millisecond.
                          rule: '!self.contains(''ns'') && !self.contains(''us'') && !self.contains(''μs'')'
                        - message: The value cannot have granularity smaller than one
                            millisecond.
                          rule: (duration(self)-duration('1ns')).getMilliseconds() ==
                            duration(self).getMilliseconds()-1
                      retryOn:
                        description: |-
                          The conditions under which a retry takes place.
                          For more information, see the [retry policies](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-on)
                          and [gRPC retry policies](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-grpc-on) in the Envoy docs.
    
                          </br>**Configuration constraints**:<ul>
                          <li>If `attempts` is 0, this field must not be set.</li>
                          <li>The following values are supported. Specify multiple values in a comma-delimited list.<ul>
                             <li>5xx</li>
                             <li>gateway-error</li>
                             <li>reset</li>
                             <li>connect-failure</li>
                             <li>retriable-4xx</li>
                             <li>refused-stream</li>
                             <li>retriable-status-codes</li>
                             <li>retriable-headers</li>
                             <li>envoy-ratelimited</li>
                             <li>cancelled</li>
                             <li>deadline-exceeded</li>
                             <li>internal</li>
                             <li>resource-exhausted</li>
                             <li>unavailable</li>
                             <li>Any valid [http status code](https://go.dev/src/net/http/status.go)</li></ul></li></ul>
                        pattern: ^[^,]+(?:,[^,]+)*$
                        type: string
                      retryRemoteLocalities:
                        description: |-
                          Flag to specify whether the retries should retry to other localities.
                          Defaults to false.
                          For more information, see the
                          [retry plugin configuration](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/http/http_connection_management#retry-plugin-configuration) in the Envoy docs.
    
                          </br>**Configuration constraints**: If `attempts` is 0, this field must not be set.
                        nullable: true
                        type: boolean
                    type: object
                    x-kubernetes-validations:
                    - message: When attempts is set to 0, perTryTimeout, retryOn, or retryRemoteLocalities
                        cannot be set
                      rule: '!has(self.attempts) || self.attempts != 0 || (!has(self.perTryTimeout)
                        && !has(self.retryOn) && !has(self.retryRemoteLocalities))'
                type: object
                x-kubernetes-validations:
                - message: Either config.retries or config.requestTimeout must be set
                  rule: has(self.retries) || has(self.requestTimeout)
            required:
            - config
            type: object
          status:
            description: The status of the policy after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedRoutes:
                description: The number of routes selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/resilience.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 5193003fcc4ab7e5
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: trimproxyconfigpolicies.resilience.policy.gloo.solo.io
spec:
  group: resilience.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: TrimProxyConfigPolicy
    listKind: TrimProxyConfigPolicyList
    plural: trimproxyconfigpolicies
    shortNames:
    - tpcp
    singular: trimproxyconfigpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              Use the TrimConfigProxyPolicy to select workloads and their corresponding allowed destinations. Then, the Istio
              sidecar of the workloads keeps only the configuration of those allowed destinations instead of all the destinations
              in the Istio service mesh. Otherwise, the extra config can lead to memory pressure issues.
            properties:
              applyToWorkloads:
                description: |-
                  Select the workloads for the policy to trim the Istio sidecar config. If omitted, all workloads are selected.
                  {{< reuse "conrefs/snippets/policies/trim-proxy-workloads-limit.md" >}}
                items:
                  description: |-
                    WorkloadSelector is a Selector specifically built for selecting individual workloads.
                    Workloads must have injected sidecar proxies or be standalone gateway proxies to be selected by Gloo Mesh policies.
    
                    This selector can be used to select Kubernetes workloads (KUBE) or sidecar-injected external endpoints (VM).
                  properties:
                    kind:
                      description: The kind of workload being selected. Defaults to Kube.
                      enum:
                      - KUBE
                      - VM
                      type: string
                    port:
                      description: |-
                        The port to select on the selected workloads.
                        Only applies to policies which select specific workload ports, such as the WasmDeploymentPolicy.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                    selector:
                      description: Selector used to match Workload objects by their metadata.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If omitted, Gloo selects
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If omitted, Gloo selects
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If omitted, Gloo selects
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If omitted, Gloo selects
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: Trim Proxy Config
                properties:
                  includedDestinations:
                    description: |-
                      Select which destinations to include in the trimmed sidecar proxy configuration of the workloads that this policy
                      applies to. You can select destinations by Kubernetes label. Destinations can be a Kubernetes service,
                      VirtualDestination, or ExternalService. To select all destinations, specify {}. If omitted or if the selection
                      does not match any destination, no destinations are selected and the sidecar proxy configurations of the
                      workloads are not trimmed. The destinations must be within the same workspace as the policy, or imported to the
                      workspace.
                    items:
                      description: |-
                        DestinationSelector is a selector for matching routable destinations for routes.
                        DestinationSelectors can select a variety of object types. The behavior of the route action
                        will vary depending on the type of destination selected. Defaults to the kubernetes `v1/Service`.
                        Currently supported destination types:
                        - v1 Service
                        - networking.gloo.solo.io/v2 VirtualDestination (route traffic to a group of backing destinations)
                        - networking.gloo.solo.io/v2 ExternalService (route traffic to a static set of service endpoints external to the mesh)
                      properties:
                        kind:
                          description: The kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            The port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination objects
                                being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination objects
                                being targeted.
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                        selector:
                          description: The selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If omitted, Gloo selects
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If omitted, Gloo selects
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If omitted, Gloo selects
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If omitted, Gloo selects
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                    type: array
                type: object
            type: object
          status:
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numIncludedHosts:
                description: The number of hosts of destinations included by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
              numSelectedWorkloads:
                description: The number of workloads selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/security.policy.gloo.solo.io_crds.yaml
# Code generated by skv2. DO NOT EDIT.
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 330af4ecc7b6f978
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: accesspolicies.security.policy.gloo.solo.io
spec:
  group: security.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: AccessPolicy
    listKind: AccessPolicyList
    plural: accesspolicies
    shortNames:
    - ap
    singular: accesspolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: Specifications for the policy.
            properties:
              applyToDestinations:
                description: |-
                  Destinations to apply the policy to.
                  Note that virtual destinations are not supported as destinations with this policy.
                  If `applyToWorkloads` is non-empty, this field is ignored.
                  If this field and `applyToWorkloads` are both empty,
                  the policy applies to all ports on all destinations in the workspace.
                  {{< alert context="info" >}}
                  For security reasons, <code>applyToWorkloads</code> is preferred.
                  {{< /alert >}}
                items:
                  description: |-
                    DestinationSelector is a selector for matching routable destinations for routes.
                    DestinationSelectors can select a variety of object types. The behavior of the route action
                    will vary depending on the type of destination selected. Defaults to the kubernetes `v1/Service`.
                    Currently supported destination types:
                    - v1 Service
                    - networking.gloo.solo.io/v2 VirtualDestination (route traffic to a group of backing destinations)
                    - networking.gloo.solo.io/v2 ExternalService (route traffic to a static set of service endpoints external to the mesh)
                  properties:
                    kind:
                      description: The kind of destination being selected. defaults to
                        Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: |-
                        The port on the Destination which receives traffic.
                        All ports on the Destination will be selected if left empty.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                    selector:
                      description: The selector used to match destination objects by their
                        metadata
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If omitted, Gloo selects
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If omitted, Gloo selects
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If omitted, Gloo selects
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If omitted, Gloo selects
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              applyToWorkloads:
                description: |-
                  Workloads to apply the policy to. For security reasons,
                  this field is preferred over `applyToDestinations`. If an empty selector is
                  provided in the list, the policy applies to all workloads in a namespace, cluster,
                  and workspace that are available in the parent object's workspace.
                items:
                  description: |-
                    Select individual namespaces and workloads within the namespaces by label.
                    Workloads must have injected (sidecars) or be standalone proxies (gateways)
                    to be selected by Gloo policies.
                  properties:
                    selector:
                      description: Selector to match workload objects by their metadata.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If empty, Gloo selects
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Only select workloads with matching labels.
                          type: object
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If empty, Gloo selects
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If empty, Gloo selects
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: Details of the access policy to apply to the selected workloads.
                properties:
                  authn:
                    description: How clients are authenticated to the workload.
                    properties:
                      tlsMode:
                        description: |-
                          Type of TLS policy that is enforced on clients connecting to the workload.
                          If service isolation is enabled for the workspace, this field is treated as 'STRICT'.
                        enum:
                        - DISABLE
                        - PERMISSIVE
                        - STRICT
                        type: string
                    type: object
                  authz:
                    description: |-
                      Deprecated; Use authzList instead. If authzList is set, it takes precedence and this field is ignored.
                      How clients are authorized to access the workload.
                    properties:
                      allowedClients:
                        description: |-
                          Client identities that are permitted to access the workload.
                          To allow access for all client identities, provide a single empty selector.
                        items:
                          description: IdentitySelector is a Selector specifically built
                            for selecting client identities for security policies.
                          properties:
                            externalWorkloadSelector:
                              description: Select external workloads.
                              properties:
                                cluster:
                                  description: |-
                                    Only select objects in the matching cluster. If omitted, Gloo selects
                                    matching objects across all clusters available in the parent object's workspace.
                                  type: string
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: labels matching those of the object
                                  type: object
                                name:
                                  description: |-
                                    Only select objects with the matching name. If omitted, Gloo selects
                                    matching objects with any name available in the parent object's workspace.
                                  type: string
                                namespace:
                                  description: |-
                                    Only select objects in the matching namespace. If omitted, Gloo selects
                                    matching objects across all namespaces available in the parent object's workspace.
                                  type: string
                                workspace:
                                  description: |-
                                    Only select objects in the given workspace. If omitted, Gloo selects
                                    matching objects across all workspaces available in the parent object's workspace.
                                  type: string
                              type: object
                            requestIdentityMatcher:
                              description: |-
                                Select identities based on properties of the request. If multiple fields are set, they are ANDed together.
                                More information about the individual values can be found here: https://istio.io/latest/docs/reference/config/security/authorization-policy/#Source
                              properties:
                                notRequestPrincipals:
                                  description: 'Optional: A list of identities to negative
                                    match the request identity.'
                                  items:
                                    type: string
                                  type: array
                                requestPrincipals:
                                  description: |-
                                    Optional: A list of identities to match the request identity ("iss/sub" from the JWT).
                                    If omitted all request identity values will be accepted.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            serviceAccountSelector:
                              description: |-
                                Select kubernetes service accounts as identities.
                                When selecting a service account that will be created in the future for use in a AuthorizationPolicy, ONLY provide the name, namespace and cluster where the service account will exist in the selector.
                                Providing labels and/or the workspace, or omitting the name, namespace or cluster for a service account that does not exist in the selector will not result in that service account being added to the resulting AuthorizationPolicy.
                              properties:
                                cluster:
                                  description: |-
                                    Only select objects in the matching cluster. If omitted, Gloo selects
                                    matching objects across all clusters available in the parent object's workspace.
                                  type: string
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: labels matching those of the object
                                  type: object
                                name:
                                  description: |-
                                    Only select objects with the matching name. If omitted, Gloo selects
                                    matching objects with any name available in the parent object's workspace.
                                  type: string
                                namespace:
                                  description: |-
                                    Only select objects in the matching namespace. If omitted, Gloo selects
                                    matching objects across all namespaces available in the parent object's workspace.
                                  type: string
                                workspace:
                                  description: |-
                                    Only select objects in the given workspace. If omitted, Gloo selects
                                    matching objects across all workspaces available in the parent object's workspace.
                                  type: string
                              type: object
                          type: object
                        type: array
                      allowedIpBlocks:
                        description: |-
                          Optional: A list of IP blocks, populated from the source address of the IP packet.
                          Single IP addresses (e.g. “1.2.3.4”) and CIDRs (e.g. “1.2.3.0/24”) are supported. If empty,
                          any IP address is allowed.
                        items:
                          type: string
                        type: array
                      allowedMethods:
                        description: |-
                          Optional: A list of HTTP methods to allow (e.g., "GET", "POST").
                          If empty, any method is allowed.
                          This field is ignored for gRPC, because the value is always "POST".
                        items:
                          type: string
                        type: array
                      allowedPaths:
                        description: |-
                          Optional: A list of HTTP paths or gRPC methods to allow.
                          gRPC methods must be presented as fully-qualified name in the form of
                          "/packageName.serviceName/methodName", and are case sensitive.
                          Exact match, prefix match, and suffix match are supported for paths.
                          For example, the path `/books/review` matches
                          `/books/review` (exact match), `*books/` (suffix match), or `/books*` (prefix match).
    
                          If empty, any path is allowed.
                        items:
                          type: string
                        type: array
                      allowedRemoteIpBlocks:
                        description: |-
                          Optional: A list of IP blocks, populated from X-Forwarded-For header or proxy protocol.
                          Single IP addresses (e.g. “1.2.3.4”) and CIDRs (e.g. “1.2.3.0/24”) are supported. This field
                          is equivalent to the remote.ip attribute. If empty, any IP address is allowed.
                          {{< alert >}}
                          To use this field, you must configure the <code>meshConfig.defaultConfig.gatewayTopology.numTrustedProxies</code>
                          field in your Istio installation. For more info, see the
                          <a href="https://istio.io/latest/docs/ops/configuration/traffic-management/network-topologies/#configuring-network-topologies">Istio documentation</a>.
                          {{< /alert >}}
                        items:
                          type: string
                        type: array
                      dryRun:
                        description: |-
                          Set to true to enable a dry run of the access policy for L7 Istio service mesh authorization only. Then, you can check the sidecar proxy logs, metrics, and tracing to determine if traffic would be allowed or denied. However, the authorization is not enforced until you disable the dry run and re-apply the access policy.
                          Note that when there are both dry run and enforced policies, dry run policies are considered independently of enforced policies;
                          i.e. the logs, metrics, and tracing results indicating if traffic would be allowed or denied is based on the behavior if all dry run policies were enforced but all currently enforced policies were deleted.
                          Note that dry run cannot be used to review allow or deny decisions for L4 traffic. Even if you enable the dry run feature with a Gloo Network setup, no Cilium network policy and decision logs are created or enforced.
                        type: boolean
                      match:
                        description: 'Optional: Additional request matching conditions.'
                        properties:
                          request:
                            description: 'Optional: HTTP request header matching conditions.'
                            properties:
                              headers:
                                additionalProperties:
                                  properties:
                                    notValues:
                                      description: |-
                                        A list of negative match values for the header. A request must not match any values.
                                        Supports wildcards. For example, to
                                        _not_ match a request with header values containing `ignore-books` or `partial-ignored-books`,
                                        set `notValues` to `ignore-books` and `partial-ig*-books`.
                                      items:
                                        type: string
                                      type: array
                                    values:
                                      description: |-
                                        A list of match values for the header. A request must match at least one value.
                                        Supports wildcards. For example, to
                                        match a request with header values containing `exact-books` OR `partial-matched-books`,
                                        set `values` to `exact-books` and `partial-*-books`.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                description: 'Optional: HTTP request header matching conditions.'
                                type: object
                            type: object
                        type: object
                    type: object
                  authzList:
                    description: |-
                      How clients are authorized to access the workload.
                      A request is allowed when it matches at least one authz entry in the list (logically OR'd together).
                    items:
                      description: |-
                        Configure access to workloads.
    
                        You can have multiple `authzList` entries.
                        A request is allowed when it matches at least one of the `authzList` entries (logically OR'd together).
    
                        For each entry, you can specify different requirements for allowed clients, paths, methods, IP blocks, and other configuration settings.
                        Then, a request is allowed only when ALL of the requirements are met (logically AND'd together).
    
                        If the policy uses `applyToWorkloads`, you can also allow NO requests by setting this value to the empty object `{}`,
                        which will serve as a fallback when requests do not match another `authz` case for the given workload.
                      properties:
                        allowedClients:
                          description: |-
                            Client identities that are permitted to access the workload.
                            To allow access for all client identities, provide a single empty selector.
                          items:
                            description: IdentitySelector is a Selector specifically built
                              for selecting client identities for security policies.
                            properties:
                              externalWorkloadSelector:
                                description: Select external workloads.
                                properties:
                                  cluster:
                                    description: |-
                                      Only select objects in the matching cluster. If omitted, Gloo selects
                                      matching objects across all clusters available in the parent object's workspace.
                                    type: string
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: labels matching those of the object
                                    type: object
                                  name:
                                    description: |-
                                      Only select objects with the matching name. If omitted, Gloo selects
                                      matching objects with any name available in the parent object's workspace.
                                    type: string
                                  namespace:
                                    description: |-
                                      Only select objects in the matching namespace. If omitted, Gloo selects
                                      matching objects across all namespaces available in the parent object's workspace.
                                    type: string
                                  workspace:
                                    description: |-
                                      Only select objects in the given workspace. If omitted, Gloo selects
                                      matching objects across all workspaces available in the parent object's workspace.
                                    type: string
                                type: object
                              requestIdentityMatcher:
                                description: |-
                                  Select identities based on properties of the request. If multiple fields are set, they are ANDed together.
                                  More information about the individual values can be found here: https://istio.io/latest/docs/reference/config/security/authorization-policy/#Source
                                properties:
                                  notRequestPrincipals:
                                    description: 'Optional: A list of identities to negative
                                      match the request identity.'
                                    items:
                                      type: string
                                    type: array
                                  requestPrincipals:
                                    description: |-
                                      Optional: A list of identities to match the request identity ("iss/sub" from the JWT).
                                      If omitted all request identity values will be accepted.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              serviceAccountSelector:
                                description: |-
                                  Select kubernetes service accounts as identities.
                                  When selecting a service account that will be created in the future for use in a AuthorizationPolicy, ONLY provide the name, namespace and cluster where the service account will exist in the selector.
                                  Providing labels and/or the workspace, or omitting the name, namespace or cluster for a service account that does not exist in the selector will not result in that service account being added to the resulting AuthorizationPolicy.
                                properties:
                                  cluster:
                                    description: |-
                                      Only select objects in the matching cluster. If omitted, Gloo selects
                                      matching objects across all clusters available in the parent object's workspace.
                                    type: string
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: labels matching those of the object
                                    type: object
                                  name:
                                    description: |-
                                      Only select objects with the matching name. If omitted, Gloo selects
                                      matching objects with any name available in the parent object's workspace.
                                    type: string
                                  namespace:
                                    description: |-
                                      Only select objects in the matching namespace. If omitted, Gloo selects
                                      matching objects across all namespaces available in the parent object's workspace.
                                    type: string
                                  workspace:
                                    description: |-
                                      Only select objects in the given workspace. If omitted, Gloo selects
                                      matching objects across all workspaces available in the parent object's workspace.
                                    type: string
                                type: object
                            type: object
                          type: array
                        allowedIpBlocks:
                          description: |-
                            Optional: A list of IP blocks, populated from the source address of the IP packet.
                            Single IP addresses (e.g. “1.2.3.4”) and CIDRs (e.g. “1.2.3.0/24”) are supported. If empty,
                            any IP address is allowed.
                          items:
                            type: string
                          type: array
                        allowedMethods:
                          description: |-
                            Optional: A list of HTTP methods to allow (e.g., "GET", "POST").
                            If empty, any method is allowed.
                            This field is ignored for gRPC, because the value is always "POST".
                          items:
                            type: string
                          type: array
                        allowedPaths:
                          description: |-
                            Optional: A list of HTTP paths or gRPC methods to allow.
                            gRPC methods must be presented as fully-qualified name in the form of
                            "/packageName.serviceName/methodName", and are case sensitive.
                            Exact match, prefix match, and suffix match are supported for paths.
                            For example, the path `/books/review` matches
                            `/books/review` (exact match), `*books/` (suffix match), or `/books*` (prefix match).
    
                            If empty, any path is allowed.
                          items:
                            type: string
                          type: array
                        allowedRemoteIpBlocks:
                          description: |-
                            Optional: A list of IP blocks, populated from X-Forwarded-For header or proxy protocol.
                            Single IP addresses (e.g. “1.2.3.4”) and CIDRs (e.g. “1.2.3.0/24”) are supported. This field
                            is equivalent to the remote.ip attribute. If empty, any IP address is allowed.
                            {{< alert >}}
                            To use this field, you must configure the <code>meshConfig.defaultConfig.gatewayTopology.numTrustedProxies</code>
                            field in your Istio installation. For more info, see the
                            <a href="https://istio.io/latest/docs/ops/configuration/traffic-management/network-topologies/#configuring-network-topologies">Istio documentation</a>.
                            {{< /alert >}}
                          items:
                            type: string
                          type: array
                        dryRun:
                          description: |-
                            Set to true to enable a dry run of the access policy for L7 Istio service mesh authorization only. Then, you can check the sidecar proxy logs, metrics, and tracing to determine if traffic would be allowed or denied. However, the authorization is not enforced until you disable the dry run and re-apply the access policy.
                            Note that when there are both dry run and enforced policies, dry run policies are considered independently of enforced policies;
                            i.e. the logs, metrics, and tracing results indicating if traffic would be allowed or denied is based on the behavior if all dry run policies were enforced but all currently enforced policies were deleted.
                            Note that dry run cannot be used to review allow or deny decisions for L4 traffic. Even if you enable the dry run feature with a Gloo Network setup, no Cilium network policy and decision logs are created or enforced.
                          type: boolean
                        match:
                          description: 'Optional: Additional request matching conditions.'
                          properties:
                            request:
                              description: 'Optional: HTTP request header matching conditions.'
                              properties:
                                headers:
                                  additionalProperties:
                                    properties:
                                      notValues:
                                        description: |-
                                          A list of negative match values for the header. A request must not match any values.
                                          Supports wildcards. For example, to
                                          _not_ match a request with header values containing `ignore-books` or `partial-ignored-books`,
                                          set `notValues` to `ignore-books` and `partial-ig*-books`.
                                        items:
                                          type: string
                                        type: array
                                      values:
                                        description: |-
                                          A list of match values for the header. A request must match at least one value.
                                          Supports wildcards. For example, to
                                          match a request with header values containing `exact-books` OR `partial-matched-books`,
                                          set `values` to `exact-books` and `partial-*-books`.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  description: 'Optional: HTTP request header matching
                                    conditions.'
                                  type: object
                              type: object
                          type: object
                      type: object
                    type: array
                  enforcementLayers:
                    description: |-
                      Optional: When NetworkPolicy translation is enabled, all available layers are used to enforce AccessPolicies by default.
                      If you want to explicitly define which layers to use to enforce this AccessPolicy, you can set them by using this field.
                      Note that the layer that you define in this field must be available to be configured.
                    properties:
                      cni:
                        type: boolean
                      mesh:
                        type: boolean
                    type: object
                type: object
            type: object
          status:
            description: The status of the policy after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied policy.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numAllowedServiceAccounts:
                description: The number of service accounts allowed to access the selected
                  destinations.
                maximum: 4294967295
                minimum: 0
                type: integer
              numSelectedDestinationPorts:
                description: The number of destination ports selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
              numSelectedNamespaces:
                description: The number of namespaces containing selected workloads by
                  the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/security.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 506f77cdba75404e
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: corspolicies.security.policy.gloo.solo.io
spec:
  group: security.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: CORSPolicy
    listKind: CORSPolicyList
    plural: corspolicies
    shortNames:
    - cors
    singular: corspolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              CORSPolicy is used to set a Cross-Origin Resource Sharing policy (CORS) for requests matching selected routes.
              Refer to [this link](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS
              for further details about cross origin resource sharing.
              CORSPolicies are applied at the *Route* level.
            properties:
              applyToRoutes:
                description: |-
                  Select the routes where the policy will be applied.
                  If empty, will apply to all routes in the workspace.
                items:
                  description: |-
                    RouteSelector is a Selector specifically built for individual Routes inside of RouteTables.
    
                    This selector can be used to select individual routes or entire route tables using the same label selector.
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: Only select routes attached to route tables matching
                            the cluster.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Select routes including all specified labels on
                            the route or route table.
                          type: object
                        namespace:
                          description: Only select routes attached to route tables matching
                            the namespace.
                          type: string
                        workspace:
                          description: Only select routes attached to route tables matching
                            the workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: The kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            The port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination objects
                                being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination objects
                                being targeted.
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                        selector:
                          description: The selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If omitted, Gloo selects
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If omitted, Gloo selects
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If omitted, Gloo selects
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If omitted, Gloo selects
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the CORS policy to apply to the selected routes.
                properties:
                  allowCredentials:
                    description: |-
                      Indicates whether the caller is allowed to send the actual request
                      (not the preflight) using credentials. Translates to the
                      `Access-Control-Allow-Credentials` header.
                    nullable: true
                    type: boolean
                  allowHeaders:
                    description: |-
                      List of HTTP headers that can be used when requesting the
                      resource. Serialized to the `Access-Control-Allow-Headers` header.
                    items:
                      type: string
                    type: array
                  allowMethods:
                    description: |-
                      List of HTTP methods allowed to access the resource. The content will
                      be serialized to the `Access-Control-Allow-Methods` header.
                    items:
                      type: string
                    type: array
                  allowOrigins:
                    description: String patterns that match allowed origins. An origin
                      is allowed if any of the string matchers match.
                    items:
                      description: Describes how to match a given string in HTTP headers.
                        Match is case-sensitive.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - exact
                          - required:
                            - prefix
                          - required:
                            - regex
                          - required:
                            - suffix
                      - required:
                        - exact
                      - required:
                        - prefix
                      - required:
                        - regex
                      - required:
                        - suffix
                      properties:
                        exact:
                          description: Exact string match.
                          type: string
                        ignoreCase:
                          description: If true, indicates the exact/prefix/suffix matching
                            should be case insensitive. This has no effect for the regex
                            match.
                          type: boolean
                        prefix:
                          description: Prefix-based match.
                          type: string
                        regex:
                          description: '[Re2 style regex-based match](https://github.com/google/re2/wiki/).'
                          type: string
                        suffix:
                          description: Warning! Suffix-based matching is not currently
                            supported in Gloo Platform.
                          type: string
                      type: object
                    type: array
                  exposeHeaders:
                    description: |-
                      A list of HTTP headers that browsers are allowed to
                      access. Serialized to the `Access-Control-Expose-Headers` header.
                    items:
                      type: string
                    type: array
                  maxAge:
                    description: |-
                      Specify how long the results of a preflight request can be
                      cached. Serialized to the `Access-Control-Max-Age` header.
                      For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#duration).
                    type: string
                type: object
            type: object
          status:
            description: The status of the policy after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedRoutes:
                description: The number of routes selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/security.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 817a65bd46175174
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: csrfpolicies.security.policy.gloo.solo.io
spec:
  group: security.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: CSRFPolicy
    listKind: CSRFPolicyList
    plural: csrfpolicies
    shortNames:
    - csrf
    singular: csrfpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              CSRFPolicy is used to set safeguard to prevent CSRF (cross-site request forgery) attacks in requests matching selected routes.
              CSRFPolicies are applied at the *Route* level.
            properties:
              applyToRoutes:
                description: |-
                  Routes to apply the policy to.
                  If empty, the policy applies to all workloads in the workspace.
                items:
                  description: |-
                    RouteSelector is a Selector specifically built for individual Routes inside of RouteTables.
    
                    This selector can be used to select individual routes or entire route tables using the same label selector.
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: Only select routes attached to route tables matching
                            the cluster.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Select routes including all specified labels on
                            the route or route table.
                          type: object
                        namespace:
                          description: Only select routes attached to route tables matching
                            the namespace.
                          type: string
                        workspace:
                          description: Only select routes attached to route tables matching
                            the workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: The kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            The port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination objects
                                being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination objects
                                being targeted.
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                        selector:
                          description: The selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If omitted, Gloo selects
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If omitted, Gloo selects
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If omitted, Gloo selects
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If omitted, Gloo selects
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the CSRF policy to apply to the selected routes.
                properties:
                  additionalOrigins:
                    description: |-
                      Specifies additional source origins that will be allowed in addition to
                      the destination origin.
                    items:
                      description: Describes how to match a given string in HTTP headers.
                        Match is case-sensitive.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - exact
                          - required:
                            - prefix
                          - required:
                            - regex
                          - required:
                            - suffix
                      - required:
                        - exact
                      - required:
                        - prefix
                      - required:
                        - regex
                      - required:
                        - suffix
                      properties:
                        exact:
                          description: Exact string match.
                          type: string
                        ignoreCase:
                          description: If true, indicates the exact/prefix/suffix matching
                            should be case insensitive. This has no effect for the regex
                            match.
                          type: boolean
                        prefix:
                          description: Prefix-based match.
                          type: string
                        regex:
                          description: '[Re2 style regex-based match](https://github.com/google/re2/wiki/).'
                          type: string
                        suffix:
                          description: Warning! Suffix-based matching is not currently
                            supported in Gloo Platform.
                          type: string
                      type: object
                    type: array
                  filterEnabled:
                    description: Specifies that CSRF policies will be evaluated, tracked
                      and enforced.
                    type: boolean
                  percentage:
                    description: |-
                      Specifies the % of requests for which the CSRF filter is enabled or when shadow mode is enabled the % of requests
                      evaluated and tracked, but not enforced.
    
                      If filter_enabled or shadow_enabled is true.
                      Envoy will lookup the runtime key to get the percentage of requests to filter.
    
                      .. note:: This field defaults to 100
                      For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#double-value).
                    nullable: true
                    type: number
                  shadowEnabled:
                    description: |-
                      Specifies that CSRF policies will be evaluated and tracked, but not enforced.
    
                      This is intended to be used when ``filter_enabled`` is false and will be ignored otherwise.
                    type: boolean
                type: object
            type: object
          status:
            description: The status of the policy after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedRoutes:
                description: Count of routes selected by the policy
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/security.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: c9be90f583960ae6
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: clienttlspolicies.security.policy.gloo.solo.io
spec:
  group: security.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ClientTLSPolicy
    listKind: ClientTLSPolicyList
    plural: clienttlspolicies
    shortNames:
    - ctls
    singular: clienttlspolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: ClientTLSPolicy explicitly controls the TLS/mTLS configuration
              for upstream connections
            oneOf:
            - not:
                anyOf:
                - required:
                  - disable
                - required:
                  - simple
                - required:
                  - mutual
                - required:
                  - istioMutual
            - required:
              - disable
            - required:
              - simple
            - required:
              - mutual
            - required:
              - istioMutual
            properties:
              applyToDestinations:
                items:
                  description: |-
                    DestinationSelector is a selector for matching routable destinations for routes.
                    DestinationSelectors can select a variety of object types. The behavior of the route action
                    will vary depending on the type of destination selected. Defaults to the kubernetes `v1/Service`.
                    Currently supported destination types:
                    - v1 Service
                    - networking.gloo.solo.io/v2 VirtualDestination (route traffic to a group of backing destinations)
                    - networking.gloo.solo.io/v2 ExternalService (route traffic to a static set of service endpoints external to the mesh)
                  properties:
                    kind:
                      description: The kind of destination being selected. defaults to
                        Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: |-
                        The port on the Destination which receives traffic.
                        All ports on the Destination will be selected if left empty.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                    selector:
                      description: The selector used to match destination objects by their
                        metadata
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If omitted, Gloo selects
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If omitted, Gloo selects
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If omitted, Gloo selects
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If omitted, Gloo selects
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              disable:
                type: object
              istioMutual:
                type: object
              mutual:
                properties:
                  config:
                    properties:
                      credentialName:
                        description: |-
                          The name of the secret that holds the TLS certs for the client including the CA certificates.
                          Secret must exist in the same namespace with the proxy using the certificates.
                          The secret (of type generic) should contain the following keys and values:
                          key: <privateKey>, cert: <clientCert>, cacert: <CACertificate>.
                          Here CACertificate is used to verify the server certificate.
                          Secret of type tls for client certificates along with ca.crt key for CA certificates is also supported.
                          see: https://istio.io/latest/docs/reference/config/networking/destination-rule/#ClientTLSSettings
                        type: string
                      sni:
                        description: |-
                          SNI string to present to the server during TLS handshake.
                          Recommended to be set, however if omitted, the first hostname associated with the destination
                          will be used
                        nullable: true
                        type: string
                    type: object
                type: object
              simple:
                properties:
                  config:
                    properties:
                      credentialName:
                        description: |-
                          The name of the secret that holds the TLS certs for the client including the CA certificates.
                          Secret must exist in the same namespace with the proxy using the certificates.
                          The secret (of type generic) should contain the following keys and values:
                          key: <privateKey>, cert: <clientCert>, cacert: <CACertificate>.
                          Here CACertificate is used to verify the server certificate.
                          Secret of type tls for client certificates along with ca.crt key for CA certificates is also supported.
                          see: https://istio.io/latest/docs/reference/config/networking/destination-rule/#ClientTLSSettings
                        type: string
                      sni:
                        description: |-
                          SNI string to present to the server during TLS handshake.
                          Recommended to be set, however if omitted, the first hostname associated with the destination
                          will be used
                        nullable: true
                        type: string
                    type: object
                type: object
            type: object
          status:
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedDestinationPorts:
                description: The number of destination ports selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/security.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 6cc060e39ff8a13d
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: dlppolicies.security.policy.gloo.solo.io
spec:
  group: security.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: DLPPolicy
    listKind: DLPPolicyList
    plural: dlppolicies
    shortNames:
    - dlp
    singular: dlppolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              Use a DLPPolicy (data loss prevention policy) to prevent sensitive data from being exposed.
              Gloo Gateway completes a series of regex replacements on the body or headers of responses that it processes.
              DLPPolicies are applied at the *Route* level.
            properties:
              applyToRoutes:
                description: |-
                  Select the routes that the policy applies to.
                  If empty, the policy applies to all routes in the workspace.
                items:
                  description: |-
                    RouteSelector is a Selector specifically built for individual Routes inside of RouteTables.
    
                    This selector can be used to select individual routes or entire route tables using the same label selector.
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: Only select routes attached to route tables matching
                            the cluster.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Select routes including all specified labels on
                            the route or route table.
                          type: object
                        namespace:
                          description: Only select routes attached to route tables matching
                            the namespace.
                          type: string
                        workspace:
                          description: Only select routes attached to route tables matching
                            the workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: The kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            The port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination objects
                                being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination objects
                                being targeted.
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                        selector:
                          description: The selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If omitted, Gloo selects
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If omitted, Gloo selects
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If omitted, Gloo selects
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If omitted, Gloo selects
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the DLP policy to apply to the selected routes.
                properties:
                  actions:
                    description: |-
                      List of data loss prevention actions to be applied.
                      These actions are applied in order, one at a time.
                    items:
                      description: |-
                        A single DLP action to mask sensitive data.
                        You can apply preconfigured actions, create custom actions,
                        and write key-value (header) actions.
                        These actions can also be shadowed. A shadowed action is recorded
                        in the statistics and debug logs, but is not committed in the response body.
    
                        To use a predefined action, set the `predefinedAction` to one of the predefined actions.
    
                        ```yaml
                        - predefinedAction: VISA
                        ```
    
                        To create a custom action, specify the configuration in the `customAction` field. The default enum value
                        is custom, so that can be left empty.
    
                        ```yaml
    
                        - customAction:
                            name: test
                            regexActions:
                            - regex: "hello"
                            - regex: "world"
                            maskChar: Y
                            percent: 60
                        ```
    
                        To create a key-value action, specify the configuration in the `keyValueAction` field. The default enum value
                        is custom, so that can be left empty.
    
                        ```yaml
    
                        - keyValueAction:
                            keysToMask:
                            - x-my-header-01
                            maskChar: _
                            name: kv-action-1
                            percent: 100
                        ```
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - predefinedAction
                          - required:
                            - customAction
                          - required:
                            - keyValueAction
                      - required:
                        - predefinedAction
                      - required:
                        - customAction
                      - required:
                        - keyValueAction
                      properties:
                        customAction:
                          description: The custom action to apply.
                          properties:
                            maskChar:
                              description: |-
                                The masking character to replace the sensitive data.
                                Default: `X`
                              nullable: true
                              type: string
                            name:
                              description: |-
                                The name of the custom action.
                                This name is used for logging and debugging purposes.
                              type: string
                            percent:
                              description: |-
                                The percent of the string to mask with the `mask_char`.
                                Rounds the ratio (percent/100) by using [std::round](http://www.cplusplus.com/reference/cmath/round/).
                                Default: 75%
                              nullable: true
                              type: number
                            regexActions:
                              description: |-
                                List of regexes to apply to the response body. Data that matches the regexes
                                is masked. Regexes are applied iteratively in the order that they are
                                specified.
                              items:
                                properties:
                                  regex:
                                    description: The regex to match for masking.
                                    type: string
                                  subgroup:
                                    description: |-
                                      If provided and not 0, only this specific subgroup of the regex will be
                                      masked.
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                type: object
                              type: array
                          type: object
                        keyValueAction:
                          description: |-
                            The key-value action to apply.
                            Key-values actions affect access logs and response headers, but not response bodies.
                          properties:
                            keysToMask:
                              description: 'Required: The keys for which corresponding
                                header names or dynamic metadata values are masked.'
                              items:
                                type: string
                              type: array
                            maskChar:
                              description: |-
                                The masking character to replace the sensitive data.
                                Default: `X`
                              nullable: true
                              type: string
                            name:
                              description: |-
                                The name of the key-value action.
                                This name is used for logging and debugging purposes.
                              type: string
                            percent:
                              description: |-
                                The percent of the string to mask with the `mask_char`.
                                Rounds the ratio (percent/100) by using [std::round](http://www.cplusplus.com/reference/cmath/round/).
                                Default: 75%
                              nullable: true
                              type: number
                          type: object
                        predefinedAction:
                          description: The predefined action to apply.
                          enum:
                          - ALL_CREDIT_CARDS
                          - SSN
                          - MASTERCARD
                          - VISA
                          - AMEX
                          - DISCOVER
                          - JCB
                          - DINERS_CLUB
                          - CREDIT_CARD_TRACKERS
                          type: string
                        shadow:
                          description: |-
                            If enabled, the action is recorded in debug logs, but not applied to response bodies
                            or headers.
                          nullable: true
                          type: boolean
                      type: object
                    type: array
                  sanitize:
                    description: |-
                      Whether actions apply to responses, access logs, or both.
                      If empty, masking is enabled for responses bodies only.
                    enum:
                    - ALL
                    - ACCESS_LOGS
                    - RESPONSE_BODY
                    type: string
                type: object
            type: object
          status:
            description: The status of the DLPPolicy.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedRoutes:
                description: A count of references to all routes selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/security.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 186a368335aa1524
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: extauthpolicies.security.policy.gloo.solo.io
spec:
  group: security.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ExtAuthPolicy
    listKind: ExtAuthPolicyList
    plural: extauthpolicies
    shortNames:
    - extauth
    singular: extauthpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: Specifications for the policy.
            properties:
              applyToDestinations:
                description: |-
                  Destinations to apply the policy to.
    
                  </br>**Implementation notes**:
                  <li>{{< reuse "conrefs/snippets/field-desc/dest-no-vdest.md" >}}</li>
                  <li>If empty and `applyToRoutes` is unset, the policy applies to all destinations in the workspace.</li>
                  <li>If empty and `applyToRoutes` is set, the policy does not apply to any destinations in the workspace.</li></ul>
    
                  </br>**Configuration constraints**: Only one external auth policy can apply to a destination.
                  Subsequent policies (sorted by creation time) are ignored and put into a FAILED state.
                items:
                  description: |-
                    DestinationSelector is a selector for matching routable destinations for routes.
                    DestinationSelectors can select a variety of object types. The behavior of the route action
                    will vary depending on the type of destination selected. Defaults to the kubernetes `v1/Service`.
                    Currently supported destination types:
                    - v1 Service
                    - networking.gloo.solo.io/v2 VirtualDestination (route traffic to a group of backing destinations)
                    - networking.gloo.solo.io/v2 ExternalService (route traffic to a static set of service endpoints external to the mesh)
                  properties:
                    kind:
                      description: The kind of destination being selected. defaults to
                        Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: |-
                        The port on the Destination which receives traffic.
                        All ports on the Destination will be selected if left empty.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                    selector:
                      description: The selector used to match destination objects by their
                        metadata
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If omitted, Gloo selects
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If omitted, Gloo selects
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If omitted, Gloo selects
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If omitted, Gloo selects
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              applyToRoutes:
                description: |-
                  Routes to apply the policy to.
                  If empty, the policy does not apply to any routes in the workspace.
    
                  </br>**Configuration constraints**: Only one external auth policy can apply to a route.
                  Subsequent policies (sorted by creation time) are ignored and put into a FAILED state.
                items:
                  description: |-
                    RouteSelector is a Selector specifically built for individual Routes inside of RouteTables.
    
                    This selector can be used to select individual routes or entire route tables using the same label selector.
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: Only select routes attached to route tables matching
                            the cluster.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Select routes including all specified labels on
                            the route or route table.
                          type: object
                        namespace:
                          description: Only select routes attached to route tables matching
                            the namespace.
                          type: string
                        workspace:
                          description: Only select routes attached to route tables matching
                            the workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: The kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            The port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination objects
                                being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination objects
                                being targeted.
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                        selector:
                          description: The selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If omitted, Gloo selects
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If omitted, Gloo selects
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If omitted, Gloo selects
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If omitted, Gloo selects
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the external auth policy to apply to the selected
                  routes and/or destinations.
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - glooAuth
                    - required:
                      - customAuth
                - required:
                  - glooAuth
                - required:
                  - customAuth
                properties:
                  customAuth:
                    description: Configure the selected route or destination with auth
                      options provided by your own custom external auth server.
                    properties:
                      contextExtensions:
                        additionalProperties:
                          type: string
                        description: |-
                          Add context extensions to the request that matches on the route or destination and is sent to the external auth server.
                          This allows the server to base the auth decision on metadata that you define on the source of the request.
    
                          This attribute is analogous to Envoy's config.filter.http.ext_authz.v2.CheckSettings. For more info, see the
                          [Envoy documentation](https://www.envoyproxy.io/docs/envoy/latest/configuration/listeners/network_filters/ext_authz_filter.html?highlight=extauthz#config-filter-http-ext-authz-v2-checksettings).
                        type: object
                    type: object
                  glooAuth:
                    description: Configure the selected route or destination with auth
                      options provided by one or more Gloo `ext-auth-service` Kubernetes
                      services.
                    properties:
                      booleanExpr:
                        description: |-
                          How to handle processing of named configs within an auth config chain.
                          An example config might be: `( basic1 \|\| basic2 \|\| (oidc1 && !oidc2) )`
                          The boolean expression is evaluated left to right but honors parenthesis and short-circuiting.
                        nullable: true
                        type: string
                      configs:
                        description: |-
                          List of auth configs to be checked for requests on a route referencing this auth config,
                          By default, every config must be authorized for the entire request to be authorized. This
                          behavior can be changed by defining names for each config and defining `boolean_expr` below.
    
                          State is shared between successful requests on the chain, i.e., the headers returned from each
                          successful auth service get appended into the final auth response.
                        items:
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - basicAuth
                              - required:
                                - oauth
                              - required:
                                - oauth2
                              - required:
                                - apiKeyAuth
                              - required:
                                - pluginAuth
                              - required:
                                - opaAuth
                              - required:
                                - ldap
                              - required:
                                - jwt
                              - required:
                                - passThroughAuth
                              - required:
                                - hmacAuth
                              - required:
                                - opaServerAuth
                              - required:
                                - portalAuth
                          - required:
                            - basicAuth
                          - required:
                            - oauth
                          - required:
                            - oauth2
                          - required:
                            - apiKeyAuth
                          - required:
                            - pluginAuth
                          - required:
                            - opaAuth
                          - required:
                            - ldap
                          - required:
                            - jwt
                          - required:
                            - passThroughAuth
                          - required:
                            - hmacAuth
                          - required:
                            - opaServerAuth
                          - required:
                            - portalAuth
                          properties:
                            apiKeyAuth:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - k8sSecretApikeyStorage
                                  - required:
                                    - aerospikeApikeyStorage
                              - required:
                                - k8sSecretApikeyStorage
                              - required:
                                - aerospikeApikeyStorage
                              properties:
                                aerospikeApikeyStorage:
                                  description: |-
                                    <b>Deprecated</b>: Support for Aerospike is deprecated and will be removed in a future release.
                                    Use of this feature is not recommended.
                                  oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - commitAll
                                      - required:
                                        - commitMaster
                                  - required:
                                    - commitAll
                                  - required:
                                    - commitMaster
                                  properties:
                                    allowInsecure:
                                      description: The TLS insecure setting. If set to
                                        `true`, the authority of the certificate on the
                                        client's end is not authenticated. You might use
                                        insecure mode in non-production environments when
                                        the certificate is not known.
                                      type: boolean
                                    batchSize:
                                      description: The size of the batch, which is the
                                        number of keys sent in the request. Defaults to
                                        5000.
                                      format: int32
                                      type: integer
                                    certPath:
                                      description: The path to the TLS certfiicate.
                                      type: string
                                    commitAll:
                                      description: '"commit_all" indicates that the server
                                        waits until successfully committing the master
                                        and all replicas.'
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    commitMaster:
                                      description: '"commit_master" indicates that the
                                        server waits until successfully committing the
                                        master only.'
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    hostname:
                                      description: |-
                                        The IP address or hostname of one of the cluster members of your Aerospike database. The address must be reachable from Gloo Edge, such as in a virtual machine with a public IP address or in a pod in the cluster.
                                        The client automatically discovers other members of the cluster after establishing a connection.
                                      type: string
                                    keyPath:
                                      description: The path to the key.
                                      type: string
                                    labelSelector:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        Identify the set of required labels (key/value) which an Aerospike secret must contain
                                        If a secret contains the provided set of labels, it will be considered valid when authorizing an ApiKey provided in a request
                                      type: object
                                    namespace:
                                      description: The Aerospike namespace of the database.
                                        Defaults to "solo-namespace".
                                      type: string
                                    nodeTlsName:
                                      description: |-
                                        TLS settings to enable mutual TLS (mTLS) on the server side. These configuration options must match what you configured in your Aerospike setup. For more information, see the Aerospike [security](https://docs.aerospike.com/server/guide/security/tls) and [network TLS](https://docs.aerospike.com/server/operations/configure/network/tls) guides.
                                        The subject name of the TLS authority. For more information, see the [Aerospike docs](https://docs.aerospike.com/reference/configuration#tls-name).
                                      type: string
                                    port:
                                      description: The port on which to connect to the
                                        Aerospike server. Defaults to 3000.
                                      format: int32
                                      type: integer
                                    readModeAp:
                                      description: |-
                                        The read settings for availability (AP). For possible values, see the [Aerospike read mode AP](https://github.com/aerospike/aerospike-client-go/blob/master/read_mode_ap.go).
                                        Defaults to "read_mode_ap_one".
                                      oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - readModeApOne
                                          - required:
                                            - readModeApAll
                                      - required:
                                        - readModeApOne
                                      - required:
                                        - readModeApAll
                                      properties:
                                        readModeApAll:
                                          description: |-
                                            "all" indicates that all duplicate nodes are consulted in
                                            the read operation.
                                          maximum: 4294967295
                                          minimum: 0
                                          type: integer
                                        readModeApOne:
                                          description: '"one" indicates that a single
                                            node is involved in the read operation.'
                                          maximum: 4294967295
                                          minimum: 0
                                          type: integer
                                      type: object
                                    readModeSc:
                                      description: |-
                                        The read settings for strong consistency (SC). For possible values, see the [Aerospike read mode SC](https://github.com/aerospike/aerospike-client-go/blob/master/read_mode_sc.go).
                                        Defaults to "read_mode_sc_session".
                                      oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - readModeScSession
                                          - required:
                                            - readModeScLinearize
                                          - required:
                                            - readModeScReplica
                                          - required:
                                            - readModeScAllowUnavailable
                                      - required:
                                        - readModeScSession
                                      - required:
                                        - readModeScLinearize
                                      - required:
                                        - readModeScReplica
                                      - required:
                                        - readModeScAllowUnavailable
                                      properties:
                                        readModeScAllowUnavailable:
                                          description: |-
                                            "allow_unavailable" indicates that the server can read from master or any full (non-migrating) replica or from unavailable
                                            partitions. An increasing sequence of record versions is not guaranteed.
                                          maximum: 4294967295
                                          minimum: 0
                                          type: integer
                                        readModeScLinearize:
                                          description: |-
                                            "linearize" ensures that ALL clients see only an increasing sequence of record versions.
                                            "server" reads only from master.
                                          maximum: 4294967295
                                          minimum: 0
                                          type: integer
                                        readModeScReplica:
                                          description: |-
                                            "replica" indicates that the server can read from master or any full (non-migrating) replica.
                                            An increasing sequence of record versions is not guaranteed.
                                          maximum: 4294967295
                                          minimum: 0
                                          type: integer
                                        readModeScSession:
                                          description: |-
                                            The session ensures this client sees only an increasing sequence of record versions.
                                            Server reads only from master, which is the default.
                                          maximum: 4294967295
                                          minimum: 0
                                          type: integer
                                      type: object
                                    rootCaPath:
                                      description: If the root certificate authority (CA)
                                        is not set, add the system certs by default.
                                      type: string
                                    set:
                                      description: The Aerospike set to use for storage
                                        of API keys. Defaults to "apikeys".
                                      type: string
                                    tlsCurveGroups:
                                      description: The TLS identifier for an elliptic
                                        curve. For more information, see [TLS supported
                                        groups](https://www.iana.org/assignments/tls-parameters/tls-parameters.xml#tls-parameters-8).
                                      items:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - curveP256
                                            - required:
                                              - curveP384
                                            - required:
                                              - curveP521
                                            - required:
                                              - x25519
                                        - required:
                                          - curveP256
                                        - required:
                                          - curveP384
                                        - required:
                                          - curveP521
                                        - required:
                                          - x25519
                                        properties:
                                          curveP256:
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          curveP384:
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          curveP521:
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          x25519:
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                        type: object
                                      type: array
                                    tlsVersion:
                                      description: The TLS version. Versions 1.0, 1.1,
                                        1.2, and 1.3 are supported. Defaults to 1.3
                                      type: string
                                  type: object
                                apiKeySecretRefs:
                                  description: |-
                                    DEPRECATED: use K8sSecretApiKeyStorage to configure secrets storage backend. Values here
                                    will be overwritten if values are specified in the storage backend.
                                    A way to directly reference API key secrets. This configuration can be useful for testing,
                                    but in general the more flexible label selector should be preferred.
                                  items:
                                    description: A way to reference resources across namespaces
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    type: object
                                  type: array
                                headerName:
                                  description: |-
                                    When receiving a request, the Gloo Edge Enterprise external auth server will look for an API key in a header
                                    with this name. This field is optional; if not provided it defaults to `api-key`.
                                  type: string
                                headersFromMetadata:
                                  additionalProperties:
                                    properties:
                                      name:
                                        description: |-
                                          DEPRECATED
                                          (Required) The key of the API key metadata entry to inspect.
                                        type: string
                                      required:
                                        description: |-
                                          DEPRECATED
                                          If this field is set to `true`, Gloo will reject an API key structure that does not contain data for the given key.
                                          Defaults to `false`. In this case, if an API key structure does not contain the requested data, no header will be added
                                          to the request.
                                        type: boolean
                                    type: object
                                  description: 'DEPRECATED: use headers_from_metadata_entry'
                                  type: object
                                headersFromMetadataEntry:
                                  additionalProperties:
                                    properties:
                                      name:
                                        description: (Required) The key of the API key
                                          metadata entry to inspect.
                                        type: string
                                      required:
                                        description: |-
                                          If this field is set to `true`, Gloo will reject an API key structure that does not contain data for the given key.
                                          Defaults to `false`. In this case, if an API key structure does not contain the requested data, no header will be added
                                          to the request.
                                        type: boolean
                                    type: object
                                  description: |-
                                    API key structures might contain additional data (e.g. the ID of the user that the API key belongs to)
                                    in the form of extra fields included in the API key metadata structure.
                                    This configuration can be used to add this data to the headers of successfully authenticated requests.
                                    Each key in the map represents the name of header to be added; the corresponding value determines the key
                                    in the API key metadata structure that will be inspected to determine the value for the header.
    
                                    When the provided API key token has been successfully validated, and this field has been configured, then
                                    any extra API key metadata fields that were able to be discovered will be added to the `AuthorizationRequest`
                                    state under the key name that was configured. For example, using the `x-user-name` string as the header name,
                                    and referencing an existing "user-email" API key metadata entry will result in the value of this "user-email"
                                    metadata entry being accessable in other auth modules in the `AuthorizationRequest.State["x-user-name"]` key.
                                    This behavior allows other modules (e.g. OPA) to build more powerful rules to further validate the contents
                                    of the extra API key metadata than what's possible using the standalone API key module.
                                  type: object
                                k8sSecretApikeyStorage:
                                  properties:
                                    apiKeySecretRefs:
                                      description: |-
                                        A way to directly reference API key secrets. This configuration can be useful for testing,
                                        but in general the more flexible label selector should be preferred.
                                      items:
                                        description: A way to reference resources across
                                          namespaces
                                        properties:
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                        type: object
                                      type: array
                                    labelSelector:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        Identify all valid API key secrets that match the provided label selector.<br/>
                                        API key secrets must be in one of the watch namespaces for gloo to locate them.
                                      type: object
                                  type: object
                                labelSelector:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    DEPRECATED: use K8sSecretApiKeyStorage to configure secrets storage backend. Values here
                                    will be overwritten if values are specified in the storage backend.
                                    Identify all valid API key secrets that match the provided label selector.
                                    API key secrets must be in one of the watch namespaces for gloo to locate them.
                                  type: object
                                skipMetadataValidation:
                                  description: |-
                                    API key metadata may contain data is is invalid for a header, such as a newline. By default, this data will be validated
                                    in the data plane and mitigated in a way that provides a consistent experience for the user and visibility for the operator.
                                    This validation comes with a performance cost, and can be disabled by setting this field to `true`.
                                  type: boolean
                              type: object
                            basicAuth:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - userList
                              - required:
                                - userList
                              properties:
                                apr:
                                  properties:
                                    users:
                                      additionalProperties:
                                        properties:
                                          hashedPassword:
                                            description: Salted and hashed password for
                                              the user
                                            type: string
                                          salt:
                                            description: Salt used with the apr algorithm
                                              for the user
                                            type: string
                                        type: object
                                      description: Map of authorized usernames to stored
                                        credentials
                                      type: object
                                  type: object
                                encryption:
                                  description: |-
                                    The encryption type to use to store the password on the server
                                    If 'encryption' is defined, 'user_source' must be defined and the top level 'apr' field must not be defined or the config will fail validation
                                  oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - apr
                                      - required:
                                        - sha1
                                  - required:
                                    - apr
                                  - required:
                                    - sha1
                                  properties:
                                    apr:
                                      type: object
                                    sha1:
                                      type: object
                                  type: object
                                realm:
                                  type: string
                                userList:
                                  properties:
                                    users:
                                      additionalProperties:
                                        properties:
                                          hashedPassword:
                                            description: Salted and hashed password for
                                              the user
                                            type: string
                                          salt:
                                            description: Salt used with the hashing algorithm
                                              for the user
                                            type: string
                                        type: object
                                      type: object
                                  type: object
                              type: object
                              x-kubernetes-validations:
                              - message: Either apr or both encryption and userSource
                                  must be set; apr may not be set alongside either encryption
                                  or userSource
                                rule: 'has(self.apr) ? !has(self.encryption) && !has(self.userList)
                                  : has(self.encryption) && has(self.userList)'
                            hmacAuth:
                              allOf:
                              - oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - secretRefs
                                - required:
                                  - secretRefs
                              - oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - parametersInHeaders
                                - required:
                                  - parametersInHeaders
                              properties:
                                parametersInHeaders:
                                  type: object
                                secretRefs:
                                  properties:
                                    secretRefs:
                                      description: list of secrets as registered with
                                        the issuer
                                      items:
                                        description: A way to reference resources across
                                          namespaces
                                        properties:
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                        type: object
                                      minItems: 1
                                      type: array
                                  required:
                                  - secretRefs
                                  type: object
                              required:
                              - secretRefs
                              type: object
                            jwt:
                              description: |-
                                This is a "dummy" extauth service which can be used to support multiple auth mechanisms with JWT authentication.
                                If Jwt authentication is to be used in the [boolean expression](https://docs.solo.io/gloo-edge/latest/reference/api/github.com/solo-io/solo-apis/api/gloo/enterprise.gloo/v1/auth_config.proto.sk/#authconfig) in an AuthConfig, you can use this auth config type to include Jwt as an Auth config.
                                In addition, `allow_missing_or_failed_jwt` must be set on the Virtual Host or Route that uses JWT auth or else the JWT filter will short circuit this behaviour.
                              maxProperties: 0
                              type: object
                            ldap:
                              properties:
                                address:
                                  description: Address of the LDAP server to query. Should
                                    be in the form ADDRESS:PORT, e.g. `ldap.default.svc.cluster.local:389`.
                                  minLength: 1
                                  type: string
                                allowedGroups:
                                  description: |-
                                    In order for the request to be authenticated, the membership attribute (e.g. *memberOf*) on the user entry must
                                    contain at least of one of the group DNs specified via this option.
                                    E.g. []string{ "cn=managers,ou=groups,dc=solo,dc=io", "cn=developers,ou=groups,dc=solo,dc=io" }
                                  items:
                                    type: string
                                  type: array
                                disableGroupChecking:
                                  description: |-
                                    Disables group checking, regardless of the value for allowedGroups,
                                    and disables validation for the membership attribute of the user entry.
                                    Group checking is enabled by default.
                                  type: boolean
                                groupLookupSettings:
                                  description: |-
                                    Settings for using a separate service account for looking up group membership
                                    To use this, you also need to configure credentials in a secret
                                  properties:
                                    checkGroupsWithServiceAccount:
                                      description: If true, Gloo will use the service
                                        account to check group membership
                                      type: boolean
                                    credentialsSecretRef:
                                      description: Reference to an AccountCredentialsSecret
                                        to use to authenticate as the service account
                                      properties:
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                      type: object
                                  type: object
                                membershipAttributeName:
                                  description: |-
                                    Case-insensitive name of the attribute that contains the names of the groups an entry is member of. Gloo will look
                                    for attributes with the given name to determine which groups the user entry belongs to. Defaults to 'memberOf' if not provided.
                                  type: string
                                pool:
                                  description: Use this property to tune the pool of connections
                                    to the LDAP server that Gloo maintains.
                                  properties:
                                    initialSize:
                                      description: Number of connections that the pool
                                        will be pre-populated with upon initialization.
                                        The default value is 2.
                                      maximum: 4294967295
                                      minimum: 0
                                      nullable: true
                                      type: integer
                                    maxSize:
                                      description: Maximum number connections that are
                                        pooled at any give time. The default value is
                                        5.
                                      maximum: 4294967295
                                      minimum: 0
                                      nullable: true
                                      type: integer
                                  type: object
                                searchFilter:
                                  description: Use to set a custom filter when searching
                                    a member. Defaults to "(uid=*)".
                                  type: string
                                userDnTemplate:
                                  description: |-
                                    Template to build user entry distinguished names (DN). This must contains a single occurrence of the "%s" placeholder.
                                    When processing a request, Gloo will substitute the name of the user (extracted from the auth header) for the
                                    placeholder and issue a search request with the resulting DN as baseDN (and 'base' search scope).
                                    E.g. "uid=%s,ou=people,dc=solo,dc=io"
                                  type: string
                              required:
                              - address
                              type: object
                            name:
                              description: |-
                                optional: used when defining complex boolean logic, if `boolean_expr` is defined below. Also used
                                in logging. If omitted, an automatically generated name will be used (e.g. config_0, of the
                                pattern 'config_$INDEX_IN_CHAIN'). In the case of plugin auth, this field is ignored in favor of
                                the name assigned on the plugin config itself.
                              nullable: true
                              type: string
                            oauth:
                              properties:
                                appUrl:
                                  description: |-
                                    we to redirect after successful auth, if we can't determine the original
                                    url this should be your publicly available app url.
                                  minLength: 1
                                  type: string
                                authEndpointQueryParams:
                                  additionalProperties:
                                    type: string
                                  description: extra query parameters to apply to the
                                    Ext-Auth service's authorization request to the identity
                                    provider.
                                  type: object
                                callbackPath:
                                  description: |-
                                    a callback path relative to app url that will be used for OIDC callbacks.
                                    needs to not be used by the application
                                  type: string
                                clientId:
                                  description: your client id as registered with the issuer
                                  type: string
                                clientSecretRef:
                                  description: your client secret as registered with the
                                    issuer
                                  properties:
                                    name:
                                      type: string
                                    namespace:
                                      type: string
                                  type: object
                                issuerUrl:
                                  description: |-
                                    The url of the issuer. We will look for OIDC information in issuerUrl+
                                    ".well-known/openid-configuration"
                                  type: string
                                scopes:
                                  description: Scopes to request in addition to openid
                                    scope.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - appUrl
                              type: object
                            oauth2:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - oidcAuthorizationCode
                                  - required:
                                    - accessTokenValidation
                                  - required:
                                    - oauth2
                              - required:
                                - oidcAuthorizationCode
                              - required:
                                - accessTokenValidation
                              - required:
                                - oauth2
                              properties:
                                accessTokenValidation:
                                  allOf:
                                  - oneOf:
                                    - not:
                                        anyOf:
                                        - required:
                                          - introspectionUrl
                                        - required:
                                          - jwt
                                        - required:
                                          - introspection
                                    - required:
                                      - introspectionUrl
                                    - required:
                                      - jwt
                                    - required:
                                      - introspection
                                  - oneOf:
                                    - not:
                                        anyOf:
                                        - required:
                                          - requiredScopes
                                    - required:
                                      - requiredScopes
                                  - oneOf:
                                    - not:
                                        anyOf:
                                        - required:
                                          - default
                                        - required:
                                          - azure
                                    - required:
                                      - default
                                    - required:
                                      - azure
                                  description: |-
                                    provide the access token on the request and let gloo handle authorization.
    
                                    according to https://datatracker.ietf.org/doc/html/rfc6750 you can pass tokens through:
                                    - form-encoded body parameter. recommended, more likely to appear. e.g.: Authorization: Bearer mytoken123
                                    - URI query parameter e.g. access_token=mytoken123
                                    - and (preferably) secure cookies
                                  properties:
                                    azure:
                                      properties:
                                        claimsCachingOptions:
                                          description: |-
                                            Redis connection details to cache MS Entra claims.
                                            This way, you avoid performance issues of accessing the Microsoft Graph API too many times.
                                            Note that this setting does NOT turn on Redis caching for the user session.
                                            To turn on Redis user session caching, use the `userSessionConfig` field.
                                          properties:
                                            db:
                                              description: db to use. can leave unset
                                                for db 0.
                                              format: int32
                                              type: integer
                                            host:
                                              description: address of the redis. can be
                                                address:port or unix://path/to/unix.sock
                                              type: string
                                            poolSize:
                                              description: |-
                                                size of the connection pool. can leave unset for default.
                                                defaults to 10 connections per every CPU
                                              format: int32
                                              type: integer
                                            socketType:
                                              description: the socket type, default is
                                                TCP.
                                              enum:
                                              - TCP
                                              - TLS
                                              type: string
                                            tlsCertMountPath:
                                              description: |-
                                                enabled with a socket type of TLS. this is the tls cert mount path for this particular host.
                                                the generic secret can include the keys 'ca.crt', 'tls.crt', and 'tls.key'.
                                                the secret can contain the root-ca ,'ca.crt', at minimum. If a
                                                certificate is needed, both the 'tls.crt' and 'tls.key' need to be included.
                                                reference this to equal the 'mountPath' on the 'redis.certs[x].mountPath' in the helm chart values.
                                                an example of a mount path is '/certs'.
                                              type: string
                                          type: object
                                        clientId:
                                          description: |-
                                            The client ID for the ExtAuthService app that is registered in MS Entra,
                                            to access the Microsoft Graph API to retrieve distributed claims.
                                            This app is NOT the app that you want to configure external auth for.
                                          type: string
                                        clientSecret:
                                          description: |-
                                            The client secret of the ExtAuthService app that is registered with MS Entra to communicate with the MS Graph API.
                                            The client secret data must be placed in a k8s secret under a key called 'client-secret'.
                                          properties:
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                        tenantId:
                                          description: |-
                                            The tenant ID represents the MS Entra organization ID where the ExtAuthService app is registered.
                                            This tenant ID may or may not be the same as in the top level `OidcAuthorizationCodeConfig`,
                                            depending on how your Azure account is provisioned.
                                          type: string
                                      type: object
                                    cacheTimeout:
                                      description: |-
                                        How long the token introspection and userinfo endpoint response for a specific access token should be kept
                                        in the in-memory cache. The result will be invalidated at this timeout, or at "exp" time from the introspection
                                        result, whichever comes sooner. If omitted, defaults to 10 minutes. If zero, then no caching will be done.
                                      type: string
                                    claimsToHeaders:
                                      description: A list of claims to be mapped from
                                        the JWT token received by ext-auth-service to
                                        an upstream destination
                                      items:
                                        description: Map a single claim from an OAuth2
                                          or OIDC token to a header in the request to
                                          the upstream destination.
                                        properties:
                                          append:
                                            description: If the header exists, append
                                              the claim value to the header (true), or
                                              overwrite any existing value (false). The
                                              default behavior is to overwrite any existing
                                              value (false).
                                            type: boolean
                                          claim:
                                            description: The claim name from the token,
                                              such as `sub`.
                                            type: string
                                          header:
                                            description: The header to copy the claim
                                              to, such as `x-sub`.
                                            type: string
                                        type: object
                                      type: array
                                    default:
                                      type: object
                                    dynamicMetadataFromClaims:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        Map of metadata key to claim. Ie:
                                        dynamic_metadata_from_claims:
                                          issuer: iss
                                          email: email
                                        When specified, the matching claims from the access token will be emitted as dynamic metadata.
                                        Note that metadata keys must be unique, and the claim names must be alphanumeric and use `-` or `_` as separators.
                                        Works when the access token is a JWT or when the access token is opaque, in which case the claims will refer to field in the response from the token introspection endpoint.
                                        The metadata will live in a namespace specified by the canonical name of the ext auth filter (in our case `envoy.filters.http.ext_authz`),
                                        and the structure of the claim value will be preserved in the metadata struct.
                                      type: object
                                    introspection:
                                      description: |-
                                        Defines how (opaque) access tokens, received from the oauth authorization endpoint, are validated
                                        [OAuth2.0 Token Introspection](https://datatracker.ietf.org/doc/html/rfc7662) specification.
                                      properties:
                                        clientId:
                                          description: |-
                                            Your client id as registered with the issuer.
                                            Optional: Use if the token introspection url requires client authentication.
                                          type: string
                                        clientSecretRef:
                                          description: |-
                                            Your client secret as registered with the issuer.
                                            Optional: Use if the token introspection url requires client authentication.
                                          properties:
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                        disableClientSecret:
                                          description: Allows setting a client id but
                                            not a client secret.
                                          nullable: true
                                          type: boolean
                                        introspectionUrl:
                                          description: |-
                                            The URL for the [OAuth2.0 Token Introspection](https://datatracker.ietf.org/doc/html/rfc7662) endpoint.
                                            If provided, the (opaque) access token provided or received from the oauth authorization endpoint
                                            will be validated against this endpoint, or locally cached responses for this access token.
                                          minLength: 1
                                          type: string
                                        userIdAttributeName:
                                          description: |-
                                            The name of the [introspection response](https://datatracker.ietf.org/doc/html/rfc7662#section-2.2)
                                            attribute that contains the ID of the resource owner (e.g. `sub`, `username`).
                                            If specified, the external auth server will use the value of the attribute as the identifier of the
                                            authenticated user and add it to the request headers and/or dynamic metadata (depending on how the
                                            server is configured); if the field is set and the attribute cannot be found, the request will be denied.
                                            This field is optional and by default the server will not try to derive the user ID.
                                          type: string
                                      required:
                                      - introspectionUrl
                                      type: object
                                      x-kubernetes-validations:
                                      - message: If clientId is set, clientSecretRef must
                                          be set or disableClientSecret must be true.
                                          Otherwise, clientSecretRef must not be set.
                                        rule: 'has(self.clientId) && size(self.clientId)
                                          > 0 ? has(self.clientSecretRef) || (has(self.disableClientSecret)
                                          && self.disableClientSecret) : !has(self.clientSecretRef)'
                                    introspectionUrl:
                                      description: |-
                                        The URL for the [OAuth2.0 Token Introspection](https://datatracker.ietf.org/doc/html/rfc7662) endpoint.
                                        If provided, the (opaque) access token provided or received from the oauth authorization endpoint
                                        will be validated against this endpoint, or locally cached responses for this access token.
                                        This field is deprecated as it does not support authenticated introspection requests
                                      minLength: 1
                                      type: string
                                    jwt:
                                      description: |-
                                        Validate access tokens that conform to the
                                        [JSON Web Token (JWT)](https://datatracker.ietf.org/doc/rfc7662/) specification.
                                      oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - remoteJwks
                                          - required:
                                            - localJwks
                                      - required:
                                        - remoteJwks
                                      - required:
                                        - localJwks
                                      properties:
                                        issuer:
                                          description: |-
                                            Allow only tokens that have been issued by this principal (i.e. whose "iss" claim matches this value).
                                            If empty, issuer validation will be skipped.
                                          type: string
                                        localJwks:
                                          description: Loads the JWKS from a local data
                                            source.
                                          properties:
                                            inlineString:
                                              description: JWKS is embedded as a string.
                                              minLength: 1
                                              type: string
                                          required:
                                          - inlineString
                                          type: object
                                        remoteJwks:
                                          description: Fetches the JWKS from a remote
                                            location.
                                          properties:
                                            refreshInterval:
                                              description: |-
                                                The frequency at which the JWKS should be refreshed.
                                                If not specified, the default value is 5 minutes.
                                              type: string
                                            url:
                                              description: The HTTP URI to fetch the JWKS.
                                              minLength: 1
                                              type: string
                                          required:
                                          - url
                                          type: object
                                      type: object
                                    requiredScopes:
                                      description: |-
                                        Require access token to have all of the scopes in the given list.
                                        This configuration applies to both opaque and JWT tokens. In the case of opaque tokens,
                                        this will check the scopes returned in the "scope" member of introspection response
                                        (as described in [Section 2.2 of RFC7662](https://datatracker.ietf.org/doc/html/rfc7662#section-2.2).
                                        In case of JWTs the scopes to be validated are expected to be contained in the "scope" claim of the
                                        token in the form of a space-separated string.
                                        Omitting this field means that scope validation will be skipped.
                                      properties:
                                        scope:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    userinfoUrl:
                                      description: |-
                                        The URL for the OIDC userinfo endpoint.
                                        If provided, the (opaque) access token provided or received from the oauth endpoint
                                        will be queried and the userinfo response (or cached response) will be added to the
                                        `AuthorizationRequest` state under the "introspection" key.
                                        This can be useful to leverage the userinfo response in, for example, an external auth server plugin.
                                      type: string
                                  type: object
                                oauth2:
                                  description: |-
                                    Enterprise-Only: THIS FEATURE IS IN TECH PREVIEW. APIs are versioned as alpha and subject to change.
                                    provide issuer location and let Gloo handle Oauth2 flow for you.
                                    requests authorized by validating the contents of access token.
                                    Prefer to use OIDC for better security.
                                  properties:
                                    afterLogoutUrl:
                                      description: |-
                                        URL to redirect to after logout.
                                        Set this field to a publicly available URL. If not provided, this value defaults to the `app_url` value.
                                      type: string
                                    appUrl:
                                      description: |-
                                        Where to redirect after successful auth, if Gloo can't determine the original URL.
                                        Set this field to your publicly available app URL.
                                      minLength: 1
                                      type: string
                                    authEndpoint:
                                      description: The URL of the provider authorization
                                        endpoint.
                                      minLength: 1
                                      type: string
                                    authEndpointQueryParams:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        Extra query parameters to apply to the Ext-Auth service's authorization request to the identity provider.
                                        These parameters can be useful for flows such as [PKCE](https://www.oauth.com/oauth2-servers/pkce/authorization-request/)
                                        to set the `code_challenge` and `code_challenge_method`.
                                      type: object
                                    callbackPath:
                                      description: |-
                                        A callback path relative to the app URL to be used for OAuth2 callbacks.
                                        Do not use this path in the application itself.
                                      minLength: 1
                                      type: string
                                    clientId:
                                      description: Your client ID as registered with the
                                        issuer
                                      minLength: 1
                                      type: string
                                    clientSecretRef:
                                      description: |-
                                        Your client secret as registered with the issuer.
                                        This is required unless `disable_client_secret` is set.
                                      properties:
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                      type: object
                                    disableClientSecret:
                                      description: |-
                                        If true, do not check for or use the client secret.
                                        Generally the client secret is required and AuthConfigs will be rejected if it isn't set.
                                        However certain implementations of the PKCE flow do not use a client secret (including Okta) so this setting allows configuring Oauth2 without a client secret.
                                      nullable: true
                                      type: boolean
                                    logoutPath:
                                      description: |-
                                        A path relative to the app URL to use for logging out from an OAuth2 session.
                                        Do not use this path in the application itself.
                                        If not provided, logout functionality is disabled.
                                      type: string
                                    revocationEndpoint:
                                      description: |-
                                        The URL of the provider token revocation endpoint.
                                        For more information, refer to https://www.rfc-editor.org/rfc/rfc7009.
                                      type: string
                                    scopes:
                                      description: Scopes to request for.
                                      items:
                                        type: string
                                      type: array
                                    session:
                                      description: Configuration related to the user session.
                                      oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - cookie
                                          - required:
                                            - redis
                                      - required:
                                        - cookie
                                      - required:
                                        - redis
                                      properties:
                                        cipherConfig:
                                          description: the cipher config enables the symmetric
                                            key encryption of the cookie values of the
                                            user session.
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - keyRef
                                          - required:
                                            - keyRef
                                          properties:
                                            keyRef:
                                              description: The key reference used for
                                                the cipher. The reference must be a Kubernetes
                                                Secret of type `gloo.solo.io.EncryptionKeySecret`.
                                              properties:
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                              type: object
                                          type: object
                                        cookie:
                                          description: Set the tokens in the cookie itself.
                                            No need for server side state.
                                          properties:
                                            allowRefreshing:
                                              description: |-
                                                Refresh expired id-tokens using the refresh-token. The tokens refreshes when the client issues a call.
                                                Defaults to false. To enable refreshing, set to true.
                                              nullable: true
                                              type: boolean
                                            keyPrefix:
                                              description: |-
                                                Prefix to append to cookie keys, such as for separate domain and subdomain prefixes.
                                                Cookie keys are stored in the form `<key_prefix>_<cookie_name>`.
                                                For more information, see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie#attributes
                                              type: string
                                            targetDomain:
                                              description: |-
                                                Domain used to validate against requests in order to ensure that request host name matches target domain.
                                                If the target domain is provided will prevent requests that do not match the target domain according to
                                                the domain matching specifications in RFC 6265. For more information, see https://datatracker.ietf.org/doc/html/rfc6265#section-5.1.3
                                              type: string
                                          type: object
                                        cookieOptions:
                                          description: Set-Cookie options
                                          properties:
                                            domain:
                                              description: Cookie domain
                                              type: string
                                            httpOnly:
                                              description: Set the cookie to be HttpOnly.
                                                defaults to true. Set explicity to false
                                                to disable.
                                              nullable: true
                                              type: boolean
                                            maxAge:
                                              description: |-
                                                Max age for the cookie. Leave unset for a default of 30 days (2592000 seconds).
                                                To disable cookie expiry, set explicitly to 0.
                                              maximum: 4294967295
                                              minimum: 0
                                              nullable: true
                                              type: integer
                                            notSecure:
                                              description: |-
                                                Use a non-secure cookie. Note - this should only be used for testing and in trusted
                                                environments.
                                              type: boolean
                                            path:
                                              description: |-
                                                Path of the cookie. If unset, defaults to "/". Set it explicitly to "" to avoid setting a
                                                path.
                                              nullable: true
                                              type: string
                                            sameSite:
                                              description: |-
                                                Whether the cookie should be restricted to a first-party or same-site context.
                                                The default mode is LaxMode.
                                              enum:
                                              - DefaultMode
                                              - LaxMode
                                              - StrictMode
                                              - NoneMode
                                              type: string
                                          type: object
                                        failOnFetchFailure:
                                          description: |-
                                            should we fail auth flow when failing to get a session from redis, or allow it to continue,
                                            potentially starting a new auth flow and setting a new session.
                                          type: boolean
                                        redis:
                                          description: Use redis to store the tokens and
                                            just store a random id in the cookie.
                                          properties:
                                            allowRefreshing:
                                              description: |-
                                                Refresh expired id-tokens using the refresh-token. The tokens refreshes when the client issues a call.
                                                Defaults to true. To disable refreshing, set to false.
                                              nullable: true
                                              type: boolean
                                            cookieName:
                                              description: Cookie name to set and store
                                                the session id. If empty the default "__session"
                                                is used.
                                              type: string
                                            headerName:
                                              description: |-
                                                If set, the name of the header that will include the randomly generated session id
                                                This would be used as part of the code exchange with the Oauth2 token endpoint
                                              type: string
                                            keyPrefix:
                                              description: Key prefix inside redis
                                              type: string
                                            options:
                                              description: Options to connect to redis
                                              properties:
                                                db:
                                                  description: db to use. can leave unset
                                                    for db 0.
                                                  format: int32
                                                  type: integer
                                                host:
                                                  description: address of the redis. can
                                                    be address:port or unix://path/to/unix.sock
                                                  type: string
                                                poolSize:
                                                  description: |-
                                                    size of the connection pool. can leave unset for default.
                                                    defaults to 10 connections per every CPU
                                                  format: int32
                                                  type: integer
                                                socketType:
                                                  description: the socket type, default
                                                    is TCP.
                                                  enum:
                                                  - TCP
                                                  - TLS
                                                  type: string
                                                tlsCertMountPath:
                                                  description: |-
                                                    enabled with a socket type of TLS. this is the tls cert mount path for this particular host.
                                                    the generic secret can include the keys 'ca.crt', 'tls.crt', and 'tls.key'.
                                                    the secret can contain the root-ca ,'ca.crt', at minimum. If a
                                                    certificate is needed, both the 'tls.crt' and 'tls.key' need to be included.
                                                    reference this to equal the 'mountPath' on the 'redis.certs[x].mountPath' in the helm chart values.
                                                    an example of a mount path is '/certs'.
                                                  type: string
                                              type: object
                                            preExpiryBuffer:
                                              description: |-
                                                Specifies a time buffer in which an id-token will be refreshed prior to its
                                                actual expiration. Defaults to 2 seconds. A duration of 0 will only refresh
                                                tokens after they have already expired. To refresh tokens, you must also set
                                                'allowRefreshing' to 'true'; otherwise, this field is ignored.
                                              type: string
                                            targetDomain:
                                              description: |-
                                                Domain used to validate against requests in order to ensure that request host name matches target domain.
                                                If the target domain is provided will prevent requests that do not match the target domain according to
                                                the domain matching specifications in RFC 6265. For more information, see https://datatracker.ietf.org/doc/html/rfc6265#section-5.1.3
                                              type: string
                                          type: object
                                      type: object
                                    tokenEndpoint:
                                      description: The URL of the provider token endpoint.
                                      minLength: 1
                                      type: string
                                    tokenEndpointQueryParams:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        Extra query parameters to apply to the Ext-Auth service's token request to the identity provider.
                                        These parameters can be useful for flows such as [PKCE](https://www.oauth.com/oauth2-servers/pkce/authorization-request/)
                                        to set the `code_verifier`.
                                      type: object
                                  required:
                                  - clientId
                                  - appUrl
                                  - callbackPath
                                  - authEndpoint
                                  - tokenEndpoint
                                  type: object
                                  x-kubernetes-validations:
                                  - message: Either clientSecretRef must be set or disableClientSecret
                                      must be true
                                    rule: has(self.clientSecretRef) || (has(self.disableClientSecret)
                                      && self.disableClientSecret)
                                oidcAuthorizationCode:
                                  description: |-
                                    provide issuer location and let gloo handle OIDC flow for you.
                                    requests authorized by validating the contents of ID token.
                                    can also authorize the access token if configured.
                                  oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - default
                                      - required:
                                        - azure
                                  - required:
                                    - default
                                  - required:
                                    - azure
                                  properties:
                                    accessToken:
                                      description: 'Optional: Configuration specific to
                                        the OAuth2 access token received and processed
                                        by the ext-auth-service.'
                                      properties:
                                        claimsToHeaders:
                                          description: A list of claims to be mapped from
                                            the JWT token received by ext-auth-service
                                            to an upstream destination
                                          items:
                                            description: Map a single claim from an OAuth2
                                              or OIDC token to a header in the request
                                              to the upstream destination.
                                            properties:
                                              append:
                                                description: If the header exists, append
                                                  the claim value to the header (true),
                                                  or overwrite any existing value (false).
                                                  The default behavior is to overwrite
                                                  any existing value (false).
                                                type: boolean
                                              claim:
                                                description: The claim name from the token,
                                                  such as `sub`.
                                                type: string
                                              header:
                                                description: The header to copy the claim
                                                  to, such as `x-sub`.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    afterLogoutUrl:
                                      description: |-
                                        url to redirect to after logout.
                                        This should be a publicly available URL. If not provided, will default to the `app_url`.
                                      type: string
                                    appUrl:
                                      description: |-
                                        where to redirect after successful auth, if we can't determine the original url.
                                        this should be your publicly available app url.
                                      minLength: 1
                                      type: string
                                    authEndpointQueryParams:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        extra query parameters to apply to the Ext-Auth service's authorization request to the identity provider.
                                        this can be useful for flows such as PKCE (https://www.oauth.com/oauth2-servers/pkce/authorization-request/)
                                        to set the `code_challenge` and `code_challenge_method`.
                                      type: object
                                    autoMapFromMetadata:
                                      description: |-
                                        If specified, authEndpointQueryParams and tokenEndpointQueryParams will be populated using dynamic metadata values.
                                        By default parameters will be extracted from the solo_authconfig_oidc namespace
                                        this behavior can be overridden by explicitly specifying a namespace
                                      properties:
                                        namespace:
                                          description: The namespace from which to map
                                            metadata
                                          type: string
                                      type: object
                                    azure:
                                      properties:
                                        claimsCachingOptions:
                                          description: |-
                                            Redis connection details to cache MS Entra claims.
                                            This way, you avoid performance issues of accessing the Microsoft Graph API too many times.
                                            Note that this setting does NOT turn on Redis caching for the user session.
                                            To turn on Redis user session caching, use the `userSessionConfig` field.
                                          properties:
                                            db:
                                              description: db to use. can leave unset
                                                for db 0.
                                              format: int32
                                              type: integer
                                            host:
                                              description: address of the redis. can be
                                                address:port or unix://path/to/unix.sock
                                              type: string
                                            poolSize:
                                              description: |-
                                                size of the connection pool. can leave unset for default.
                                                defaults to 10 connections per every CPU
                                              format: int32
                                              type: integer
                                            socketType:
                                              description: the socket type, default is
                                                TCP.
                                              enum:
                                              - TCP
                                              - TLS
                                              type: string
                                            tlsCertMountPath:
                                              description: |-
                                                enabled with a socket type of TLS. this is the tls cert mount path for this particular host.
                                                the generic secret can include the keys 'ca.crt', 'tls.crt', and 'tls.key'.
                                                the secret can contain the root-ca ,'ca.crt', at minimum. If a
                                                certificate is needed, both the 'tls.crt' and 'tls.key' need to be included.
                                                reference this to equal the 'mountPath' on the 'redis.certs[x].mountPath' in the helm chart values.
                                                an example of a mount path is '/certs'.
                                              type: string
                                          type: object
                                        clientId:
                                          description: |-
                                            The client ID for the ExtAuthService app that is registered in MS Entra,
                                            to access the Microsoft Graph API to retrieve distributed claims.
                                            This app is NOT the app that you want to configure external auth for.
                                          type: string
                                        clientSecret:
                                          description: |-
                                            The client secret of the ExtAuthService app that is registered with MS Entra to communicate with the MS Graph API.
                                            The client secret data must be placed in a k8s secret under a key called 'client-secret'.
                                          properties:
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                        tenantId:
                                          description: |-
                                            The tenant ID represents the MS Entra organization ID where the ExtAuthService app is registered.
                                            This tenant ID may or may not be the same as in the top level `OidcAuthorizationCodeConfig`,
                                            depending on how your Azure account is provisioned.
                                          type: string
                                      type: object
                                    callbackPath:
                                      description: |-
                                        a callback path relative to app url that will be used for OIDC callbacks.
                                        should not be used by the application.
                                      minLength: 1
                                      type: string
                                    clientAuthentication:
                                      oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - clientSecret
                                          - required:
                                            - privateKeyJwt
                                      - required:
                                        - clientSecret
                                      - required:
                                        - privateKeyJwt
                                      properties:
                                        clientSecret:
                                          description: Use the client secret method to
                                            authenticate the client
                                          properties:
                                            clientSecretRef:
                                              description: |-
                                                your client secret as registered with the issuer.
                                                This is required unless `disable_client_secret` is true
                                              properties:
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                              type: object
                                            disableClientSecret:
                                              description: |-
                                                If true, do not check for or use the client secret.
                                                Generally the client secret is required and AuthConfigs will be rejected if it isn't set.
                                                However certain implementations of the PKCE flow do not use a client secret (including Okta) so this setting allows configuring Oidc without a client secret.
                                              nullable: true
                                              type: boolean
                                          type: object
                                          x-kubernetes-validations:
                                          - message: Either clientSecretRef must be set
                                              or disableClientSecret must be true
                                            rule: has(self.clientSecretRef) || (has(self.disableClientSecret)
                                              && self.disableClientSecret)
                                        privateKeyJwt:
                                          description: Use the private ket JWT method
                                            to authenticate the client
                                          properties:
                                            signingKeyRef:
                                              description: Signing key for the JWT used
                                                to authenticate the client
                                              properties:
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                              type: object
                                            validFor:
                                              description: |-
                                                Amount of time for which the JWT is valid. No maximum is enforced, but different IDPs may impose limits on how far in
                                                the future the expiration time is allowed to be. If omitted, default is 5s.
                                              type: string
                                          required:
                                          - signingKeyRef
                                          type: object
                                      type: object
                                      x-kubernetes-validations:
                                      - message: Must specify clientSecret or privateKeyJwt
                                        rule: has(self.clientSecret) || has(self.privateKeyJwt)
                                    clientId:
                                      description: your client id as registered with the
                                        issuer
                                      minLength: 1
                                      type: string
                                    clientSecretRef:
                                      description: |-
                                        your client secret as registered with the issuer.
                                        This is required unless `disable_client_secret` is true
                                        This field has been deprecated and can be set in the client_secret option of client_authentication
                                      properties:
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                      type: object
                                    default:
                                      type: object
                                    disableClientSecret:
                                      description: |-
                                        If true, do not check for or use the client secret.
                                        Generally the client secret is required and AuthConfigs will be rejected if it isn't set.
                                        However certain implementations of the PKCE flow do not use a client secret (including Okta) so this setting allows configuring Oidc without a client secret.
                                        This field has been deprecated and can be set in the client_secret option of client_authentication
                                      nullable: true
                                      type: boolean
                                    discoveryOverride:
                                      description: |-
                                        OIDC configuration is discovered at <issuerUrl>/.well-known/openid-configuration
                                        The discovery override defines any properties that should override this discovery configuration
                                        For example, the following AuthConfig CRD could be defined as:
                                           ```yaml
                                           apiVersion: enterprise.gloo.solo.io/v1
                                           kind: AuthConfig
                                           metadata:
                                             name: google-oidc
                                             namespace: gloo-system
                                           spec:
                                             configs:
                                             - oauth:
                                                 app_url: http://localhost:8080
                                                 callback_path: /callback
                                                 client_id: $CLIENT_ID
                                                 client_secret_ref:
                                                   name: google
                                                   namespace: gloo-system
                                                 issuer_url: https://accounts.google.com
                                                 discovery_override:
                                                   token_endpoint: "https://token.url/gettoken"
                                           ```
    
                                        And this will ensure that regardless of what value is discovered at
                                        <issuerUrl>/.well-known/openid-configuration, "https://token.url/gettoken" will be used as the token endpoint
                                      properties:
                                        authEndpoint:
                                          description: url of the provider authorization
                                            endpoint
                                          type: string
                                        authMethods:
                                          description: list of client authentication methods
                                            supported by the provider token endpoint
                                          items:
                                            type: string
                                          type: array
                                        claims:
                                          description: list of claim types that the provider
                                            supports
                                          items:
                                            type: string
                                          type: array
                                        endSessionEndpoint:
                                          description: url of the provider end session
                                            endpoint
                                          type: string
                                        idTokenAlgs:
                                          description: list of json web signature signing
                                            algorithms that the provider supports for
                                            encoding claims in a jwt
                                          items:
                                            type: string
                                          type: array
                                        jwksUri:
                                          description: url of the provider json web key
                                            set
                                          type: string
                                        responseTypes:
                                          description: list of response types that the
                                            provider supports
                                          items:
                                            type: string
                                          type: array
                                        revocationEndpoint:
                                          description: url of the provider token revocation
                                            endpoint
                                          type: string
                                        scopes:
                                          description: list of scope values that the provider
                                            supports
                                          items:
                                            type: string
                                          type: array
                                        subjects:
                                          description: list of subject identifier types
                                            that the provider supports
                                          items:
                                            type: string
                                          type: array
                                        tokenEndpoint:
                                          description: url of the provider token endpoint
                                          type: string
                                      type: object
                                    discoveryPollInterval:
                                      description: |-
                                        The interval at which OIDC configuration is discovered at <issuerUrl>/.well-known/openid-configuration
                                        If not specified, the default value is 30 minutes.
                                      type: string
                                    dynamicMetadataFromClaims:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        Map of metadata key to claim. Ie:
                                        dynamic_metadata_from_claims:
                                          issuer: iss
                                          email: email
                                        When specified, the matching claims from the ID token will be emitted as dynamic metadata.
                                        Note that metadata keys must be unique, and the claim names must be alphanumeric and use `-` or `_` as separators.
                                        The metadata will live in a namespace specified by the canonical name of the ext auth filter (in our case `envoy.filters.http.ext_authz`),
                                        and the structure of the claim value will be preserved in the metadata struct.
                                      type: object
                                    endSessionProperties:
                                      description: |-
                                        If specified, these are properties defined for the end session endpoint
                                        specifications. Noted [here](https://openid.net/specs/openid-connect-rpinitiated-1_0.html)
                                        in the OIDC documentation.
                                      properties:
                                        methodType:
                                          description: The method type used by the end
                                            session endpoint, defaults to GET.
                                          enum:
                                          - GetMethod
                                          - PostMethod
                                          type: string
                                      type: object
                                    frontChannelLogout:
                                      description: |-
                                        Configuration for front channel logout. This is used to log out the user from multiple apps/clients associated with one OpenId Provider (OP).
                                        The path is registered with the OP and is called for each app/client that the user is logged into when the logout endpoint is called.
                                      properties:
                                        path:
                                          description: Path to use for front channel logout.
                                            Should not be the same as logout or callback
                                            paths.
                                          type: string
                                      type: object
                                    headers:
                                      description: Configures headers added to requests.
                                      properties:
                                        accessTokenHeader:
                                          description: If set, the access token will be
                                            forward upstream using this header name.
                                          type: string
                                        idTokenHeader:
                                          description: If set, the id token will be forward
                                            upstream using this header name.
                                          type: string
                                        useBearerSchemaForAuthorization:
                                          description: If true, adds the "Bearer" prefix
                                            to the upstream access token header value.
                                          nullable: true
                                          type: boolean
                                      type: object
                                    identityToken:
                                      description: 'Optional: Configuration specific to
                                        the OIDC identity token received and processed
                                        by the ext-auth-service.'
                                      properties:
                                        claimsToHeaders:
                                          description: A list of claims to be mapped from
                                            the JWT token received by ext-auth-service
                                            to an upstream destination
                                          items:
                                            description: Map a single claim from an OAuth2
                                              or OIDC token to a header in the request
                                              to the upstream destination.
                                            properties:
                                              append:
                                                description: If the header exists, append
                                                  the claim value to the header (true),
                                                  or overwrite any existing value (false).
                                                  The default behavior is to overwrite
                                                  any existing value (false).
                                                type: boolean
                                              claim:
                                                description: The claim name from the token,
                                                  such as `sub`.
                                                type: string
                                              header:
                                                description: The header to copy the claim
                                                  to, such as `x-sub`.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    issuerUrl:
                                      description: |-
                                        The url of the issuer. We will look for OIDC information in issuerUrl+
                                        ".well-known/openid-configuration"
                                      minLength: 1
                                      type: string
                                    jwksCacheRefreshPolicy:
                                      description: |-
                                        If a user executes a request with a key that is not found in the JWKS, it could be
                                        that the keys have rotated on the remote source, and not yet in the local cache.
                                        This policy lets you define the behavior for how to refresh the local cache during a request
                                        where an invalid key is provided
                                      oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - never
                                          - required:
                                            - always
                                          - required:
                                            - maxIdpReqPerPollingInterval
                                      - required:
                                        - never
                                      - required:
                                        - always
                                      - required:
                                        - maxIdpReqPerPollingInterval
                                      properties:
                                        always:
                                          description: |-
                                            If a key is not in the cache, fetch the most recent keys from the IdP and update the cache.
                                            NOTE: This should only be done in trusted environments, since missing keys will each trigger
                                            a request to the IdP. Using this in an environment exposed to the internet will allow malicious agents to
                                            execute a DDoS attack by spamming protected endpoints with tokens signed by invalid keys.
                                          maxProperties: 0
                                          type: object
                                        maxIdpReqPerPollingInterval:
                                          description: |-
                                            If a key is not in the cache, fetch the most recent keys from the IdP and update the cache.
                                            This value sets the number of requests to the IdP per polling interval. If that limit is exceeded,
                                            we will stop fetching from the IdP for the remainder of the polling interval.
                                          maximum: 4294967295
                                          minimum: 0
                                          type: integer
                                        never:
                                          description: |-
                                            Never refresh the local JWKS cache on demand. If a key is not in the cache, it is assumed to be malicious.
                                            This is the default policy since we assume that IdPs publish keys before they rotate them,
                                            and frequent polling finds the newest keys.
                                          maxProperties: 0
                                          type: object
                                      type: object
                                    logoutPath:
                                      description: |-
                                        a path relative to app url that will be used for logging out from an OIDC session.
                                        should not be used by the application.
                                        If not provided, logout functionality will be disabled.
                                      type: string
                                    parseCallbackPathAsRegex:
                                      description: If set, CallbackPath will be evaluated
                                        as a regular expression
                                      type: boolean
                                    scopes:
                                      description: Scopes to request in addition to openid
                                        scope.
                                      items:
                                        type: string
                                      type: array
                                    session:
                                      description: Configuration related to the user session.
                                      oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - cookie
                                          - required:
                                            - redis
                                      - required:
                                        - cookie
                                      - required:
                                        - redis
                                      properties:
                                        cipherConfig:
                                          description: the cipher config enables the symmetric
                                            key encryption of the cookie values of the
                                            user session.
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - keyRef
                                          - required:
                                            - keyRef
                                          properties:
                                            keyRef:
                                              description: The key reference used for
                                                the cipher. The reference must be a Kubernetes
                                                Secret of type `gloo.solo.io.EncryptionKeySecret`.
                                              properties:
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                              type: object
                                          type: object
                                        cookie:
                                          description: Set the tokens in the cookie itself.
                                            No need for server side state.
                                          properties:
                                            allowRefreshing:
                                              description: |-
                                                Refresh expired id-tokens using the refresh-token. The tokens refreshes when the client issues a call.
                                                Defaults to false. To enable refreshing, set to true.
                                              nullable: true
                                              type: boolean
                                            keyPrefix:
                                              description: |-
                                                Prefix to append to cookie keys, such as for separate domain and subdomain prefixes.
                                                Cookie keys are stored in the form `<key_prefix>_<cookie_name>`.
                                                For more information, see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie#attributes
                                              type: string
                                            targetDomain:
                                              description: |-
                                                Domain used to validate against requests in order to ensure that request host name matches target domain.
                                                If the target domain is provided will prevent requests that do not match the target domain according to
                                                the domain matching specifications in RFC 6265. For more information, see https://datatracker.ietf.org/doc/html/rfc6265#section-5.1.3
                                              type: string
                                          type: object
                                        cookieOptions:
                                          description: Set-Cookie options
                                          properties:
                                            domain:
                                              description: Cookie domain
                                              type: string
                                            httpOnly:
                                              description: Set the cookie to be HttpOnly.
                                                defaults to true. Set explicity to false
                                                to disable.
                                              nullable: true
                                              type: boolean
                                            maxAge:
                                              description: |-
                                                Max age for the cookie. Leave unset for a default of 30 days (2592000 seconds).
                                                To disable cookie expiry, set explicitly to 0.
                                              maximum: 4294967295
                                              minimum: 0
                                              nullable: true
                                              type: integer
                                            notSecure:
                                              description: |-
                                                Use a non-secure cookie. Note - this should only be used for testing and in trusted
                                                environments.
                                              type: boolean
                                            path:
                                              description: |-
                                                Path of the cookie. If unset, defaults to "/". Set it explicitly to "" to avoid setting a
                                                path.
                                              nullable: true
                                              type: string
                                            sameSite:
                                              description: |-
                                                Whether the cookie should be restricted to a first-party or same-site context.
                                                The default mode is LaxMode.
                                              enum:
                                              - DefaultMode
                                              - LaxMode
                                              - StrictMode
                                              - NoneMode
                                              type: string
                                          type: object
                                        failOnFetchFailure:
                                          description: |-
                                            should we fail auth flow when failing to get a session from redis, or allow it to continue,
                                            potentially starting a new auth flow and setting a new session.
                                          type: boolean
                                        redis:
                                          description: Use redis to store the tokens and
                                            just store a random id in the cookie.
                                          properties:
                                            allowRefreshing:
                                              description: |-
                                                Refresh expired id-tokens using the refresh-token. The tokens refreshes when the client issues a call.
                                                Defaults to true. To disable refreshing, set to false.
                                              nullable: true
                                              type: boolean
                                            cookieName:
                                              description: Cookie name to set and store
                                                the session id. If empty the default "__session"
                                                is used.
                                              type: string
                                            headerName:
                                              description: |-
                                                If set, the name of the header that will include the randomly generated session id
                                                This would be used as part of the code exchange with the Oauth2 token endpoint
                                              type: string
                                            keyPrefix:
                                              description: Key prefix inside redis
                                              type: string
                                            options:
                                              description: Options to connect to redis
                                              properties:
                                                db:
                                                  description: db to use. can leave unset
                                                    for db 0.
                                                  format: int32
                                                  type: integer
                                                host:
                                                  description: address of the redis. can
                                                    be address:port or unix://path/to/unix.sock
                                                  type: string
                                                poolSize:
                                                  description: |-
                                                    size of the connection pool. can leave unset for default.
                                                    defaults to 10 connections per every CPU
                                                  format: int32
                                                  type: integer
                                                socketType:
                                                  description: the socket type, default
                                                    is TCP.
                                                  enum:
                                                  - TCP
                                                  - TLS
                                                  type: string
                                                tlsCertMountPath:
                                                  description: |-
                                                    enabled with a socket type of TLS. this is the tls cert mount path for this particular host.
                                                    the generic secret can include the keys 'ca.crt', 'tls.crt', and 'tls.key'.
                                                    the secret can contain the root-ca ,'ca.crt', at minimum. If a
                                                    certificate is needed, both the 'tls.crt' and 'tls.key' need to be included.
                                                    reference this to equal the 'mountPath' on the 'redis.certs[x].mountPath' in the helm chart values.
                                                    an example of a mount path is '/certs'.
                                                  type: string
                                              type: object
                                            preExpiryBuffer:
                                              description: |-
                                                Specifies a time buffer in which an id-token will be refreshed prior to its
                                                actual expiration. Defaults to 2 seconds. A duration of 0 will only refresh
                                                tokens after they have already expired. To refresh tokens, you must also set
                                                'allowRefreshing' to 'true'; otherwise, this field is ignored.
                                              type: string
                                            targetDomain:
                                              description: |-
                                                Domain used to validate against requests in order to ensure that request host name matches target domain.
                                                If the target domain is provided will prevent requests that do not match the target domain according to
                                                the domain matching specifications in RFC 6265. For more information, see https://datatracker.ietf.org/doc/html/rfc6265#section-5.1.3
                                              type: string
                                          type: object
                                      type: object
                                    sessionIdHeaderName:
                                      description: |-
                                        DEPRECATED: Prefer the RedisSession.HeaderName field
                                        If set, the randomly generated session id will be sent to the token endpoint as part of the code exchange
                                        The session id is used as the key for sessions in Redis
                                      type: string
                                    tokenEndpointQueryParams:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        extra query parameters to apply to the Ext-Auth service's token request to the identity provider.
                                        this can be useful for flows such as PKCE (https://www.oauth.com/oauth2-servers/pkce/authorization-request/)
                                        to set the `code_verifier`.
                                      type: object
                                  required:
                                  - clientId
                                  - issuerUrl
                                  - appUrl
                                  - callbackPath
                                  type: object
                                  x-kubernetes-validations:
                                  - message: If clientAuthentication is set, neither clientSecretRef
                                      nor disableClientSecret may be set. Otherwise, clientSecretRef
                                      must be set or disableClientSecret must be true.
                                    rule: 'has(self.clientAuthentication) ? !has(self.clientSecretRef)
                                      && !has(self.disableClientSecret) : has(self.clientSecretRef)
                                      || (has(self.disableClientSecret) && self.disableClientSecret)'
                              type: object
                            opaAuth:
                              properties:
                                modules:
                                  description: An optional resource reference to config
                                    maps containing modules to assist in the resolution
                                    of `query`.
                                  items:
                                    description: A way to reference resources across namespaces
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    type: object
                                  type: array
                                options:
                                  description: Additional Options for Opa Auth configuration.
                                  properties:
                                    fastInputConversion:
                                      description: |-
                                        Decreases OPA latency by speeding up conversion of input to the OPA engine.
                                        If this is set to true, only http_request and state fields which are a scalar, map, or string array
                                        are included in the request input. All other fields are dropped. Dropped fields will not be evaluated by the OPA engine.
                                        By default, this is set to false and all fields are evaluated by OPA.
                                      type: boolean
                                    returnDecisionReason:
                                      description: |-
                                        DEPRECATED: It's recommended to use the `dynamic_metadata` field within Rego policies to specify the decision reason. To learn more about this approach, see the [OPA Envoy Plugin docs](https://github.com/open-policy-agent/opa/blob/c12463c/docs/content/envoy-primer.md#example-policy-with-additional-controls).
    
                                        When `returnDecisionReason` is set to true, the decision reason is stored in the Envoy Dynamic Metadata and has the following properties:<ul>
                                        <li>`body` - a textual explanation of the decision</li>
                                        <li>`allowed` - whether the request was allowed or rejected</li></ul>
    
                                        When using OpaAuth, the `body` field must be the second parameter of the query.
    
                                        Both the OpaAuth and OpaServerAuth approaches use the `allowed` and `body` values from the OPA response in the decision reason.
                                        You can find the `body` and `allowed` fields in the Envoy Filter Dynamic Metadata under the `envoy.filters.http.ext_authz.<authentication_step_name>.reason` section.
    
                                        If, however, `returnDecisionReason` is set to false, OPA's decision to allow or reject a request is made according to the Rego policy rules, and no explanation is provided.
                                        Despite of this, the `dynamic_metadata` field can still be used to convey any necessary information to the Envoy Dynamic Metadata, including the decision reason.
                                      type: boolean
                                  type: object
                                query:
                                  description: |-
                                    The query that determines the auth decision. The result of this query
                                    must be either a boolean or an array with boolean as the first element. A boolean `true` value means that
                                    the request will be authorized. Any other value, or error, means that the request will be denied.
                                  minLength: 1
                                  type: string
                              required:
                              - query
                              type: object
                            opaServerAuth:
                              properties:
                                options:
                                  description: Additional options for OPA Auth configuration.
                                  properties:
                                    fastInputConversion:
                                      description: |-
                                        Decreases OPA latency by speeding up conversion of input to the OPA engine.
                                        If this is set to true, only http_request and state fields which are a scalar, map, or string array
                                        are included in the request input. All other fields are dropped. Dropped fields will not be evaluated by the OPA engine.
                                        By default, this is set to false and all fields are evaluated by OPA.
                                      type: boolean
                                    returnDecisionReason:
                                      description: |-
                                        DEPRECATED: It's recommended to use the `dynamic_metadata` field within Rego policies to specify the decision reason. To learn more about this approach, see the [OPA Envoy Plugin docs](https://github.com/open-policy-agent/opa/blob/c12463c/docs/content/envoy-primer.md#example-policy-with-additional-controls).
    
                                        When `returnDecisionReason` is set to true, the decision reason is stored in the Envoy Dynamic Metadata and has the following properties:<ul>
                                        <li>`body` - a textual explanation of the decision</li>
                                        <li>`allowed` - whether the request was allowed or rejected</li></ul>
    
                                        When using OpaAuth, the `body` field must be the second parameter of the query.
    
                                        Both the OpaAuth and OpaServerAuth approaches use the `allowed` and `body` values from the OPA response in the decision reason.
                                        You can find the `body` and `allowed` fields in the Envoy Filter Dynamic Metadata under the `envoy.filters.http.ext_authz.<authentication_step_name>.reason` section.
    
                                        If, however, `returnDecisionReason` is set to false, OPA's decision to allow or reject a request is made according to the Rego policy rules, and no explanation is provided.
                                        Despite of this, the `dynamic_metadata` field can still be used to convey any necessary information to the Envoy Dynamic Metadata, including the decision reason.
                                      type: boolean
                                  type: object
                                package:
                                  description: The package from your Rego policy bundle
                                    used to query the OPA data API.
                                  minLength: 1
                                  type: string
                                ruleName:
                                  description: The rule in your Rego policy bundle used
                                    to query the OPA data API. Supports querying subfields
                                    with a `/`. For more information, see the [OPA docs
                                    for the Data API](https://www.openpolicyagent.org/docs/latest/rest-api/#data-api).
                                  type: string
                                serverAddr:
                                  description: |-
                                    The address of the OPA server to query, in the format `ADDRESS:PORT`.
                                    For OPA servers within the cluster, the address is the pod's service address,
                                    such as `opa-svc.default.svc.cluster.local:8181`. For OPA servers outside the cluster,
                                    the server must be accessible to the cluster, such as through an ExternalService.
                                    If you do not have your own OPA server instance, omit this field.
                                    When the external auth service has the OPA server sidecar enabled, the OPA server
                                    sidecar will be used instead, with an address such as `http://localhost:8181`.
                                  type: string
                              required:
                              - package
                              type: object
                            passThroughAuth:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - grpc
                                  - required:
                                    - http
                              - required:
                                - grpc
                              - required:
                                - http
                              properties:
                                config:
                                  description: Custom config to be passed per request
                                    to the passthrough auth service.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                failureModeAllow:
                                  description: |-
                                    If set to true, the service will accept client request even if the communication with
                                     the authorization service has failed, or if the authorization service has returned a server error.
                                    Defaults to false.
                                  type: boolean
                                grpc:
                                  properties:
                                    address:
                                      description: Address of the auth server to query.
                                        Should be in the form ADDRESS:PORT, e.g. `default.svc.cluster.local:389`.
                                      minLength: 1
                                      type: string
                                    connectionTimeout:
                                      description: Timeout for the auth server to respond.
                                        Defaults to 5s
                                      type: string
                                    retryPolicy:
                                      description: |-
                                        Indicates the retry policy for re-establishing the gRPC stream.
                                        This field is optional and failed calls will not retry unless configured.
                                      oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - retryBackOff
                                      - required:
                                        - retryBackOff
                                      properties:
                                        numRetries:
                                          description: |-
                                            Specifies the allowed number of retries. This parameter is optional and
                                            defaults to 1.
                                          maximum: 4294967295
                                          minimum: 0
                                          nullable: true
                                          type: integer
                                        retryBackOff:
                                          description: |-
                                            Specifies parameters that control the backoff strategy.
                                            This parameter is optional, in which case the default base interval is 1000 milliseconds. The
                                            default maximum interval is 10 times the base interval.
                                          properties:
                                            baseInterval:
                                              description: |-
                                                The base interval to be used for the next back off computation.
                                                Defaults to 1000 milliseconds
                                              type: string
                                            maxInterval:
                                              description: |-
                                                Specifies the maximum delay between retries.
                                                Defaults to 10 times the base interval.
                                              type: string
                                          type: object
                                      type: object
                                    tlsConfig:
                                      description: TLS config for the Grpc passthrough,
                                        if not configured the connection will use insecure.
                                      type: object
                                  required:
                                  - address
                                  type: object
                                http:
                                  properties:
                                    connectionTimeout:
                                      description: Timeout for the auth server to respond.
                                        Defaults to 5s
                                      type: string
                                    request:
                                      description: |-
                                        Pass through the incoming request body, ext auth state, and filter metadata.
                                        For more information, see the [PassThrough Http Request description](#request-1).
                                      properties:
                                        allowedHeaders:
                                          description: |-
                                            These headers will be copied from the incoming request to the request going
                                            to the auth server. By default, no headers are copied from the incoming request.
                                            Pseudo-headers such as `:Path`, and `:Method` can not be specified here.
                                          items:
                                            type: string
                                          type: array
                                        headersToAdd:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            These headers that will be included to the request to authorization service. Note that
                                            client request of the same key will be overridden.
                                            Pseudo-headers such as `:Path`, and `:Method` can not be specified here.
                                          type: object
                                        passThroughBody:
                                          description: |-
                                            Whether or not to include the body in the passthrough request body.
                                            In order for this to work, the settings.extauth.requestBody must be set in the Gloo Edge Settings CRD so that
                                            the request body is buffered and sent to the ext-auth service.
                                            If pass_through_body, pass_through_filter_metadata and pass_through_state are false,
                                            the authorization request body will be empty. A non-empty body will increase latency times
                                            slightly, so this is set to false by default, and should only be set to to true if the
                                            request body is needed in the auth request.
                                          type: boolean
                                        passThroughFilterMetadata:
                                          description: |-
                                            Whether or not to include the filter metadata in the passthrough request body.
                                            If pass_through_body, pass_through_filter_metadata and pass_through_state are false,
                                            the authorization request body will be empty. A non-empty body will increase latency times
                                            slightly, so this is set to false by default, and should only be set to to true if the
                                            filter metadata is needed in the auth request.
                                          type: boolean
                                        passThroughState:
                                          description: |-
                                            Whether or not to include the ext-auth state object in the passthrough request body.
                                            If this is set to true, it is expected that the state is returned in the HTTP response from the
                                            passthrough service. The state received from the response will be the state that is shared with
                                            other ext-auth service methods.
                                            If pass_through_body, pass_through_filter_metadata and pass_through_state are false,
                                            the authorization request body will be empty. A non-empty body will increase latency times
                                            slightly, so this is set to false by default, and should only be set to to true if the
                                            extauth state is needed in the auth request.
                                          type: boolean
                                      type: object
                                    response:
                                      description: |-
                                        Pass through response information such as the headers and body to downstream clients.
                                        For more information, see the [PassThrough Http Response description](#response-1).
                                      properties:
                                        allowedClientHeadersOnDenied:
                                          description: |-
                                            When this is set, authorization response headers in this list will be added to the response to the downstream client when the auth request is denied.
                                            If the response header already exists, it will replace the response header.
                                            If this is empty, by default, no authorization response headers will be added to the response to the downstream client.
                                          items:
                                            type: string
                                          type: array
                                        allowedUpstreamHeaders:
                                          description: |-
                                            When this is set, authorization response headers that have a header in this list will be added to the original client request and sent to the upstream
                                            when the auth request is successful. These will be appended to any request headers that already exist.
                                            If this and allowed_upstream_headers_to_overwrite are empty, by default, no authorization response headers will be added to the upstream request.
                                            Header names may not be included in both allowed_upstream_headers and allowed_upstream_headers_to_overwrite.
                                          items:
                                            type: string
                                          type: array
                                        allowedUpstreamHeadersToOverwrite:
                                          description: |-
                                            When this is set, authorization response headers that have a header in this list will be added to the original client request and sent to the upstream
                                            when the auth request is successful. These will overwrite to any request headers that already exist.
                                            If this and allowed_upstream_headers are empty, by default, no authorization response headers will be added to the upstream request.
                                            Header names may not be included in both allowed_upstream_headers and allowed_upstream_headers_to_overwrite.
                                          items:
                                            type: string
                                          type: array
                                        readStateFromResponse:
                                          description: |-
                                            If this is set to true, the body of the response from the http passthrough auth server is expected to have shape
                                            {
                                              "state": object (map[string]interface{})
                                            }
                                            The state will be marshalled from the response body and this is the state that will be passed on to other auth configs.
                                            Because of the marshalling from JSON to Go map, this will add some latency to the request.
                                            If the marshalling fails, the authorization check will fail and the request will be unauthorized after the ext-auth-service pod
                                            logs the marshal error.
                                          type: boolean
                                      type: object
                                    url:
                                      description: |-
                                        Required: URL of the passthrough http service, is a fully qualified domain name.
                                        Example: http://ext-auth-service.svc.local:9001. Path provided in the URL will be respected.
                                        To use https, provide the cert in the HTTPS_PASSTHROUGH_CA_CERT environment variable to the ext-auth-service
                                        pod as a base64-encoded string
                                      minLength: 1
                                      type: string
                                  required:
                                  - url
                                  type: object
                              type: object
                              x-kubernetes-validations:
                              - message: Must specify grpc or http
                                rule: has(self.grpc) || has(self.http)
                            pluginAuth:
                              properties:
                                config:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                exportedSymbolName:
                                  description: |-
                                    Name of the exported symbol that implements the plugin interface in the plugin.
                                    If not specified, defaults to the name of the plugin
                                  type: string
                                name:
                                  description: Name of the plugin
                                  type: string
                                pluginFileName:
                                  description: Name of the compiled plugin file. If not
                                    specified, Gloo Edge will look for an ".so" file with
                                    same name as the plugin.
                                  type: string
                              required:
                              - config
                              type: object
                            portalAuth:
                              properties:
                                apiKeyHeader:
                                  description: |-
                                    The api key header name used to find the api key in the request headers.
                                    If provided will not authorize requests without the api key in the request headers.
                                    If not provided, will authorize requests with a Bearer token but must be chained with an AccessTokenValidation AuthConfig which will validate the token.
                                  type: string
                                cacheDuration:
                                  description: The frequency at which the validated credential
                                    data should be refreshed by quering the portal web
                                    server. Defaults to 60s.
                                  type: string
                                redisOptions:
                                  description: Options to connect to redis. If not provided,
                                    data will be cached in memory.
                                  properties:
                                    db:
                                      description: db to use. can leave unset for db 0.
                                      format: int32
                                      type: integer
                                    host:
                                      description: address of the redis. can be address:port
                                        or unix://path/to/unix.sock
                                      type: string
                                    poolSize:
                                      description: |-
                                        size of the connection pool. can leave unset for default.
                                        defaults to 10 connections per every CPU
                                      format: int32
                                      type: integer
                                    socketType:
                                      description: the socket type, default is TCP.
                                      enum:
                                      - TCP
                                      - TLS
                                      type: string
                                    tlsCertMountPath:
                                      description: |-
                                        enabled with a socket type of TLS. this is the tls cert mount path for this particular host.
                                        the generic secret can include the keys 'ca.crt', 'tls.crt', and 'tls.key'.
                                        the secret can contain the root-ca ,'ca.crt', at minimum. If a
                                        certificate is needed, both the 'tls.crt' and 'tls.key' need to be included.
                                        reference this to equal the 'mountPath' on the 'redis.certs[x].mountPath' in the helm chart values.
                                        an example of a mount path is '/certs'.
                                      type: string
                                  type: object
                                requestTimeout:
                                  description: Timeout for the portal web server to respond.
                                    Defaults to 200ms
                                  type: string
                                url:
                                  description: The portal web server url used to validate
                                    credentials generated by the portal for the backing
                                    service(s).
                                  type: string
                              type: object
                          type: object
                        minItems: 1
                        type: array
                      failOnRedirect:
                        description: |-
                          How the service should handle a redirect response from an OIDC issuer. In the default false mode,
                          the redirect will be considered a successful response, and the client will receive a 302 with a location header.
                          If this is set to true, the client will instead receive a 401 unauthorized response. This is useful in cases where
                          API calls are being made or other such occurrences where the client cannot handle the redirect.
                        type: boolean
                    required:
                    - configs
                    type: object
                  server:
                    description: |-
                      Reference to the ExtAuthServer to use for this policy.
                      To create an ExtAuthServer resource, see [External auth server setup](../../../security/external-auth/server/#setup).
    
                      </br>**Implementation notes**:<ul>
                      <li>The ExtAuthServer must be in the same workspace as this ExtAuthPolicy. Be sure to select the appropriate ExtAuthServer to use,
                      which might be in a different cluster and namespace than the policy.</li>
                      <li>If this field is omitted, Gloo generates a default ExtAuthServer configuration.
                      To review the default values for an ExtAuthServer, see the [API reference](../ext_auth_server/).</li></ul>
    
                      </br>**Configuration constraints:**<ul>
                      <li>Routes on a single gateway must share a single ExtAuthServer.</li>
                      <li>If `glooAuth` is used, the `server` must reference an ExtAuthServer that is backed by one or more Gloo `ext-auth-service` Kubernetes services.</li>
                      <li>If `customAuth` is used, the `server` must reference an ExtAuthServer that is backed by your own custom external auth server.</li>
                      <li>For auth configurations that require a client secret from the identity provider issuer,
                      the secret must be in the same cluster as the ExtAuthServer resource.</li></ul>
                    properties:
                      cluster:
                        description: the cluster of the object. If omitted, Gloo Mesh
                          will use the same cluster as the parent object containing this
                          reference.
                        type: string
                      name:
                        description: the name of the object
                        type: string
                      namespace:
                        description: the namespace of the object. If omitted, Gloo Mesh
                          will use the same namespace as the parent object containing
                          this reference.
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: The status of the policy after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedDestinationPorts:
                description: The number of destination ports selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
              numSelectedRoutes:
                description: The number of routes selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/security.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 643177e69b819ae5
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: graphqlallowedquerypolicies.security.policy.gloo.solo.io
spec:
  group: security.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: GraphQLAllowedQueryPolicy
    listKind: GraphQLAllowedQueryPolicyList
    plural: graphqlallowedquerypolicies
    shortNames:
    - gqlaq
    - gqlaqp
    singular: graphqlallowedquerypolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              applyToRoutes:
                description: |-
                  Select the graphql routes where the policy will be applied.
                  If empty, will apply to no graphql routes.
                  selection via Destination selectors will not work for this policy, and only
                  route selectors will work.
                  If more than one GraphQLAllowedQueryPolicy applies to a GraphQLRoute, the oldest
                  one will be applied.
                items:
                  description: |-
                    RouteSelector is a Selector specifically built for individual Routes inside of RouteTables.
    
                    This selector can be used to select individual routes or entire route tables using the same label selector.
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: Only select routes attached to route tables matching
                            the cluster.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Select routes including all specified labels on
                            the route or route table.
                          type: object
                        namespace:
                          description: Only select routes attached to route tables matching
                            the namespace.
                          type: string
                        workspace:
                          description: Only select routes attached to route tables matching
                            the workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: The kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            The port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination objects
                                being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination objects
                                being targeted.
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                        selector:
                          description: The selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If omitted, Gloo selects
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If omitted, Gloo selects
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If omitted, Gloo selects
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If omitted, Gloo selects
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                properties:
                  allowedQueryHashes:
                    description: |-
                      A list of SHA-256 hashed graphql queries that are allowed to be executed by the server.
                      If a query hash is not in this list, the server will return an error.
                      If this list is empty, all queries are allowed. Else, all queries must be in this list.
                      Queries that are not sent as hashes will be hashed and compared against the list.
                      This is useful for preventing malicious queries from being executed.
                    items:
                      type: string
                    type: array
                type: object
            type: object
          status:
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedRoutes:
                description: The number of routes the policy selects.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/security.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 46a2257341c2567f
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: jwtpolicies.security.policy.gloo.solo.io
spec:
  group: security.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: JWTPolicy
    listKind: JWTPolicyList
    plural: jwtpolicies
    shortNames:
    - jwt
    singular: jwtpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              Fill out the spec of the JWT policy to enable JWT authentication. You can apply JWT policies to routes and destinations.
    
              Multiple policies: If multiple JWT policies select the same route or destination, only the oldest policy applies.
    
              Multiple selectors: You can select routes and destinations together in the same policy.
              Using both selectors might impact the other. For example, you might omit a route selector. If you also omit a destination selector, then the policy applies to all routes. If you use a destination selector, the policy applies only to those destinations and no longer to any routes.
    
              If different JWT policies having conflicting rules for the same routes and destinations, then access is blocked.
            properties:
              applyToDestinations:
                description: |-
                  Select the destinations where the policy will be applied.
                  {{< reuse "conrefs/snippets/field-desc/dest-no-vdest.md" >}}
                  By default if omitted, the policy does not apply to any destinations.
                  If empty (`{}`), the policy applies to all destinations in the workspace.
                items:
                  description: |-
                    DestinationSelector is a selector for matching routable destinations for routes.
                    DestinationSelectors can select a variety of object types. The behavior of the route action
                    will vary depending on the type of destination selected. Defaults to the kubernetes `v1/Service`.
                    Currently supported destination types:
                    - v1 Service
                    - networking.gloo.solo.io/v2 VirtualDestination (route traffic to a group of backing destinations)
                    - networking.gloo.solo.io/v2 ExternalService (route traffic to a static set of service endpoints external to the mesh)
                  properties:
                    kind:
                      description: The kind of destination being selected. defaults to
                        Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: |-
                        The port on the Destination which receives traffic.
                        All ports on the Destination will be selected if left empty.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                    selector:
                      description: The selector used to match destination objects by their
                        metadata
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If omitted, Gloo selects
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If omitted, Gloo selects
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If omitted, Gloo selects
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If omitted, Gloo selects
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              applyToRoutes:
                description: |-
                  Select the routes where the policy will be applied.
                  If empty (`{}`), the policy applies to all routes in the workspace.
                  If omitted and the policy also does not select any destinations, the policy applies to all routes in the workspace.
                  If omitted and the policy selects a destination, the policy does not apply to any routes.
                items:
                  description: |-
                    RouteSelector is a Selector specifically built for individual Routes inside of RouteTables.
    
                    This selector can be used to select individual routes or entire route tables using the same label selector.
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: Only select routes attached to route tables matching
                            the cluster.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Select routes including all specified labels on
                            the route or route table.
                          type: object
                        namespace:
                          description: Only select routes attached to route tables matching
                            the namespace.
                          type: string
                        workspace:
                          description: Only select routes attached to route tables matching
                            the workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: The kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            The port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination objects
                                being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination objects
                                being targeted.
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                        selector:
                          description: The selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If omitted, Gloo selects
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If omitted, Gloo selects
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If omitted, Gloo selects
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If omitted, Gloo selects
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the JWT policy to apply to the selected routes.
                properties:
                  allowMissingOrFailed:
                    description: |-
                      Deprecated: Set the `validationPolicy` field to `ALLOW_MISSING_OR_FAILED` instead of setting this field to "true".
                      Note that if `validationPolicy` is set to `ALLOW_MISSING_OR_FAILED` or `ALLOW_MISSING`, it takes precedence and this field is ignored.
    
                      Allow requests to succeed even if JWT authentication is missing or fails.
                      For example, you might apply multiple policies to your routes so that requests can authenticate with either a
                      JWT or another method such as external auth. Set this value to "true"
                      to allow a failed JWT auth request to pass through to the other authentication
                      method. By default, this value is "false" so that requests that fail JWT
                      authentication then fail authorization immediately.
                    type: boolean
                  claims:
                    description: |-
                      Optional: A key-value list of claims to require for JWT authorization. The JWT must meet all of the claims to be allowed (logically AND'd together).
                      For each claim, you can specify values that must or must not be present.
                    items:
                      description: |-
                        Optionally configure a list of key-value claims for JWT authorization rules. The JWT must meet all of the claims to be allowed (logically AND'd together).
                        For each claim, you can specify values that must or must not be present. If a claim has multiple supported values, any of these values is allowed (logically OR'd together).
                        You can also use wildcards, such as `"*"` to allow any value, or for example `"*@solo.io"` to allow any `@solo.io` email. Nested claims are not supported at this time.
                      properties:
                        key:
                          description: |-
                            The name of the JWT claim's key.
                            [RFC 7519 spec](https://datatracker.ietf.org/doc/html/rfc7519#section-4.1) reserves seven claims, and the [IANA JSON Web Token Claims](https://www.iana.org/assignments/jwt/jwt.xhtml#claims) outline many more registered claims to encourage interoperability across providers. Further, your OIDC provider might have custom claims, such as described in the [Auth0 docs](https://auth0.com/docs/get-started/apis/scopes/sample-use-cases-scopes-and-claims).
                          type: string
                        nestedClaimDelimiter:
                          description: |-
                            Optional: Specify a delimiter to enable nested claims, which are claims that are children of top-level claims. The delimiter is the character that separates the nested levels within the claims names of the JWT.
                            The delimiter is commonly set to a period ("."), which allows nested claim names of the form parent.child.grandchild. JWTs that match the value you set for the grandchild nested claim are allowed.
                          type: string
                        notValues:
                          description: |-
                            Optional: A list of values that are not allowed for the JWT claim. If a claim contains one of these values, the request is denied.
                            You can also use wildcards, such as `"*"` to deny any value, or for example `"*@solo.io"` to deny any `@solo.io` email.
                            Note: You must set at least one of "values" or "not_values".
                          items:
                            type: string
                          type: array
                        values:
                          description: |-
                            Optional: A list of allowed values for the JWT claim. If a claim has multiple supported values, any of these values is allowed (logically OR'd together).
                            You can also use wildcards, such as `"*"` to allow any value or for example `"*@solo.io"` to allow any `@solo.io` email. Nested claims are not supported at this time.
                            Note: You must set at least one of "values" or "not_values".
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  clearRouteCache:
                    description: |-
                      Optional: Decide whether to clear the route cache after the JWT filter. By clearing the route cache, the gateway recomputes route matching. This way, you can configure traffic rules after JWT auth, such as claim-based routing on cleared routes or direct response on cached routes.
                      Defaults to the `AUTO` option.
                    enum:
                    - AUTO
                    - "FALSE"
                    - "TRUE"
                    type: string
                  phase:
                    description: |-
                      Optional: Set when to apply the JWT filter in the request chain,
                      either before (`preAuthz`) or after (`postAuthz`) authorization to have access to the JWT token.
                      If no phase is specified, defaults to `preAuthz`.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - preAuthz
                        - required:
                          - postAuthz
                    - required:
                      - preAuthz
                    - required:
                      - postAuthz
                    properties:
                      postAuthz:
                        description: Apply this policy after Authorization policies are
                          applied.
                        properties:
                          priority:
                            description: |-
                              The priority at which this policy should be applied relative to other policies defined in the same phase.
                              The lowest priority will be run first and the default priority value is 0.
                              For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#int32-value).
                            maximum: 2147483647
                            minimum: -2147483648
                            nullable: true
                            type: integer
                        type: object
                      preAuthz:
                        description: Apply this policy before Authorization policies are
                          applied.
                        properties:
                          priority:
                            description: |-
                              The priority at which this policy should be applied relative to other policies defined in the same phase.
                              The lowest priority will be run first and the default priority value is 0.
                              For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#int32-value).
                            maximum: 2147483647
                            minimum: -2147483648
                            nullable: true
                            type: integer
                        type: object
                    type: object
                  providers:
                    additionalProperties:
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - local
                          - required:
                            - remote
                      - required:
                        - local
                      - required:
                        - remote
                      properties:
                        audiences:
                          description: |-
                            Optional: A list of intended audiences for this JWT token.
                            If specified, a JWT token containing any of these `aud` field values is accepted.
                            If omitted, the `aud` field in the JWT token is not checked.
                          items:
                            type: string
                          type: array
                        claimsToHeaders:
                          description: |-
                            Optional: Specify the claims from the JWT payload to copy to individual headers before forwarding the request to the upstream destination.
                            To copy the entire payload to a single header instead, use the OutputPayloadToHeader field.
                          items:
                            description: Specify the claims from the JWT payload to copy
                              to individual headers before forwarding the request to the
                              upstream destination.
                            properties:
                              append:
                                description: If the header already exists, append this
                                  copied value to it (true), or overwrite the existing
                                  value (false).
                                type: boolean
                              claim:
                                description: Claim name, such as `"sub"`.
                                type: string
                              header:
                                description: The request header to copy the claim to,
                                  such as `"x-sub"`.
                                type: string
                            type: object
                          type: array
                        clockSkewSeconds:
                          description: |-
                            Optional: Verify time constraints, such as `exp` and `npf`. Default is 60s.
                            For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#u-int32-value).
                          maximum: 4294967295
                          minimum: 0
                          nullable: true
                          type: integer
                        customDelimiter:
                          description: 'Optional: Specify a custom delimiter to append
                            claims. Defaults to a comma (`,`).'
                          type: string
                        issuer:
                          description: |-
                            Optional: The principal that issued the JWT, usually a URL or an email address.
                            If specified, the `iss` field in JWT token of the incoming request must match this field, or else the request is denied.
                            If omitted, the `iss` field in the JWT token is not checked.
                          type: string
                        keepToken:
                          description: 'Optional: Keep the JWT in the request post verification.'
                          type: boolean
                        local:
                          description: |-
                            Get the public keys to validate the JWT from a local source,
                            such as a Kubernetes secret or an inline, raw string JWKS.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - secretRef
                              - required:
                                - inline
                          - required:
                            - secretRef
                          - required:
                            - inline
                          properties:
                            inline:
                              description: Provide an inline PEM-formatted public key
                                in the configuration of this JWT policy.
                              type: string
                            secretRef:
                              description: Refer to a secret that has the PEM-formatted
                                public key.
                              properties:
                                key:
                                  description: Refer to the key of data that has the PEM-formatted
                                    public key within the specified secret.
                                  type: string
                                objectRef:
                                  description: Refer to the secret explicitly by the cluster
                                    and namespace where the secret is located.
                                  properties:
                                    cluster:
                                      description: the cluster of the object. If omitted,
                                        Gloo Mesh will use the same cluster as the parent
                                        object containing this reference.
                                      type: string
                                    name:
                                      description: the name of the object
                                      type: string
                                    namespace:
                                      description: the namespace of the object. If omitted,
                                        Gloo Mesh will use the same namespace as the parent
                                        object containing this reference.
                                      type: string
                                  type: object
                              type: object
                          type: object
                        outputPayloadToHeader:
                          description: |-
                            Optional: Copy the output of the JWT payload to a single header before forwarding the request to the upstream destination. The header is the name that you enter in this field.
                            The payload data is base64-encoded before forwarding.
                            If this field is omitted or empty, the payload is not forwarded with the request.
                            To send select claims in the payload in individual headers, use the ClaimsToHeaders field instead.
                          type: string
                        remote:
                          description: |-
                            Get the public keys from a remote JSON Web Key Set (JWKS) server.
                            This server must be accessible from your cluster.
                          properties:
                            cacheDuration:
                              description: |-
                                Duration after which the cached JWKS expires.
    
                                If omitted, defaults to 5 minutes.
                                For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#duration).
                              type: string
                            destinationRef:
                              description: |-
                                The destination that represents the JWKS server.
                                If the JWKS server runs in your cluster, the destination can be a Kubernetes Service or Gloo VirtualDestination.
                                If the JWKS server is a remote URL, the destination must be a Gloo ExternalService.
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - ref
                                  - required:
                                    - awsLambda
                              - required:
                                - ref
                              - required:
                                - awsLambda
                              properties:
                                awsLambda:
                                  description: Reference an AWS Lambda function.
                                  properties:
                                    cloudProvider:
                                      description: Reference to the AWS Cloud Provider.
                                      properties:
                                        cluster:
                                          description: the cluster of the object. If omitted,
                                            Gloo Mesh will use the same cluster as the
                                            parent object containing this reference.
                                          type: string
                                        name:
                                          description: the name of the object
                                          type: string
                                        namespace:
                                          description: the namespace of the object. If
                                            omitted, Gloo Mesh will use the same namespace
                                            as the parent object containing this reference.
                                          type: string
                                      type: object
                                    function:
                                      description: Name of the function to reference.
                                      type: string
                                    options:
                                      description: |-
                                        Specify how the destinations should be configured, for configuring lambda functions.
                                        If the destination config is required for the destination and not provided by the user, Gloo will invalidate the
                                        destination and its parent resources.
                                      properties:
                                        invocationStyle:
                                          description: |-
                                            Can be either Sync or Async. See [AWS Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html)
                                            for more details.
                                          enum:
                                          - SYNC
                                          - ASYNC
                                          type: string
                                        requestTransformation:
                                          enum:
                                          - REQUEST_DEFAULT
                                          - REQUEST_DISABLE
                                          type: string
                                        responseTransformation:
                                          enum:
                                          - RESPONSE_DEFAULT
                                          - RESPONSE_DISABLE
                                          type: string
                                      type: object
                                    qualifier:
                                      description: Qualifier of the function to reference.
                                        Defaults to $LATEST
                                      type: string
                                  type: object
                                kind:
                                  description: |-
                                    the kind of Kubernetes destination being referenced. defaults to Service.
                                    Only applicable for Kubernetes destinations. For non Kubernetes destinations, this field is ignored.
                                  enum:
                                  - SERVICE
                                  - VIRTUAL_DESTINATION
                                  - EXTERNAL_SERVICE
                                  type: string
                                port:
                                  description: the port on the destination object being
                                    targeted. required if the object provides more than
                                    one port.
                                  oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - number
                                      - required:
                                        - name
                                  - required:
                                    - number
                                  - required:
                                    - name
                                  properties:
                                    name:
                                      description: the name of the port on the destination
                                        objects being targeted.
                                      type: string
                                    number:
                                      description: the number of the port on the destination
                                        objects being targeted.
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                  type: object
                                ref:
                                  description: reference to a Kubernetes destination object
                                    by its metadata
                                  properties:
                                    cluster:
                                      description: the cluster of the object. If omitted,
                                        Gloo Mesh will use the same cluster as the parent
                                        object containing this reference.
                                      type: string
                                    name:
                                      description: the name of the object
                                      type: string
                                    namespace:
                                      description: the namespace of the object. If omitted,
                                        Gloo Mesh will use the same namespace as the parent
                                        object containing this reference.
                                      type: string
                                  type: object
                                subset:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    select a subset of the destination's endpoints for routing based on their labels.
                                    Only applicable for Kubernetes destinations.
                                  type: object
                                weight:
                                  description: |-
                                    Specify the proportion of traffic to be forwarded to this destination.
                                    Weights across all of the `destinations` must sum to 100.
                                    Weight is only relevant when used in the context of a route with multiple destinations.
                                  maximum: 4294967295
                                  minimum: 0
                                  type: integer
                              type: object
                            enableAsyncFetch:
                              description: |-
                                Fetch the JWKS asynchronously in the main thread before activating the listener.
                                Then, the fetched JWKS can be used by all worker threads.
    
                                When set to false (default):
                                The JWKS is fetched on-demand when requests come. The first few requests are paused until the JWKS is fetched.
                                Because the JWKS cache is per worker thread, each worker thread fetches its own JWKS.
                                You might leave async fetching disabled in simple environments with minimal traffic or resources,
                                during testing to simplify debugging issues, or when you want more control over when and how the JWKS is fetched.
    
                                When set to true:
                                The JWKS is fetched in the main thread before activating the listener.
                                Then, the JWKS can be used by all worker threads. Each worker thread doesn't need to fetch its own.
                                This way, the JWKS is ready when requests come.
                                You might enable async fetching to reduce latency, improve responsiveness, and have consistent JWKS across worker threads
                                such as in multi-threaded, concurrent, and large-scale environments.
                              type: boolean
                            timeout:
                              description: |-
                                Set the maximum duration in seconds that a response can take to arrive upon request.
    
                                If omitted, defaults to 5 seconds.
                                For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#duration).
                              type: string
                            url:
                              description: |-
                                The URL to access the remote destination for JWKS server.
                                This value sets the host and path in the request.
                              type: string
                          type: object
                        tokenSource:
                          description: |-
                            Optional: Where to extract the JWT from the HTTP request.
                            If no explicit token source location is specified, the following default locations are tried in order:
    
                            First, the Authorization header using the `Bearer ` prefix, such as: `Authorization: Bearer <token>`.
    
                            Second, the `access_token` query parameter, such as: `https://<url>/path?access_token=<token>`.
    
                            Gloo can verify multiple JWTs for a request.
                            Each JWT is extracted from the location that is specified per provider, or from the default locations previously described.
                            Note that if a single request contains multiple sources,
                            such as both a header and query parameter, then all tokens found in the request must be valid for the request to be accepted.
                            Configured fields are case sensitive and are matched verbatim.
                          properties:
                            headers:
                              description: Try to retrieve the token from these headers.
                              items:
                                description: Describes how to retrieve the JWT from a
                                  header.
                                properties:
                                  name:
                                    description: The name of header, such as `"Authorization"`.
                                    type: string
                                  prefix:
                                    description: The prefix before the token, such as
                                      `"Bearer "` (with a space before the token).
                                    type: string
                                type: object
                              type: array
                            queryParams:
                              description: Try to retrieve the token from these query
                                parameters.
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                    description: |-
                      Set up the provider for the JWT configuration.
                      You can have multiple providers in the same JWT policy, or create separate policies per provider.
    
                      Successfully verified JWT payloads will be written to Envoy Dynamic Metadata in the format `{{ policy generated prefix }}.{{ provider }}`.
                      For more info, see the `payload_in_metadata` field
                      [here](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/http/jwt_authn/v3/config.proto.html).
    
                      Note: You can name the providers to help you map the provider when viewing logs to debug.
                      However, the provider name does not affect the policy's behavior and cannot be used by other resources to select the policy.
                    type: object
                  requiredScopes:
                    description: |-
                      Optional: An unordered list of required JWT scopes. The JWT "scope" claim must have all of the listed scopes to be allowed (logically AND'd together).
                      Scopes typically come from an identity provider and are formatted similar to `"<product>:<permission>"` or `"is:<role>"`.
                      For more information, see the [IETF docs](https://datatracker.ietf.org/doc/html/rfc8693#name-scope-scopes-claim).
    
                      For example, you might use this field to set `email` and `is:developer` as required scopes.
                      Then the scope claim in the JWT must have all of those required scopes, but could also have others.
                      JWTs with scopes such as `"scope":"email is:developer"` or `"scope":"email is:developer phone address"` would be allowed.
                      JWTs with only one of the required scopes, such as `"scope":"email address"` would not be allowed.
    
                      If you want to set scopes that if present in the claim are not allowed (`notValues`),
                      or to allow a request to succeed with just one of many listed scopes (`email OR is:developer`),
                      use the claims field instead.
                      To skip scope validation, omit this value or leave the list empty.
                      Note that nested scopes (a scope with multiple sub scopes) are not supported at this time.
                    items:
                      type: string
                    type: array
                  validationPolicy:
                    description: |-
                      Optional: Configure how JWT validation works, with the flexibility to handle requests with missing or invalid JWTs.
                      By default, after applying JWT policy to a route, only requests that authenticate with a valid JWT succeed.
                    enum:
                    - REQUIRE_VALID
                    - ALLOW_MISSING
                    - ALLOW_MISSING_OR_FAILED
                    type: string
                type: object
            type: object
          status:
            description: The status of the policy after it is applied to your Gloo environment.Status
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedDestinationPorts:
                description: The number of destination ports selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
              numSelectedRoutes:
                description: The number of routes selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/security.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: ed63f64752376e7
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: wafpolicies.security.policy.gloo.solo.io
spec:
  group: security.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: WAFPolicy
    listKind: WAFPolicyList
    plural: wafpolicies
    shortNames:
    - waf
    singular: wafpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              WAFPolicy is used to set safeguard your services with the functionality of Web ApplicationFirewall
              WAFPolicies are applied at the *Route* level.
            properties:
              applyToRoutes:
                description: |-
                  Routes to apply the policy to.
                  If empty, the policy applies to all workloads in the workspace.
                items:
                  description: |-
                    RouteSelector is a Selector specifically built for individual Routes inside of RouteTables.
    
                    This selector can be used to select individual routes or entire route tables using the same label selector.
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: Only select routes attached to route tables matching
                            the cluster.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Select routes including all specified labels on
                            the route or route table.
                          type: object
                        namespace:
                          description: Only select routes attached to route tables matching
                            the namespace.
                          type: string
                        workspace:
                          description: Only select routes attached to route tables matching
                            the workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: The kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            The port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination objects
                                being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination objects
                                being targeted.
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                        selector:
                          description: The selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If omitted, Gloo selects
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If omitted, Gloo selects
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If omitted, Gloo selects
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If omitted, Gloo selects
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the WAF policy to apply to the selected routes.
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - coreRuleSetSettingsString
                    - required:
                      - coreRuleSetSettingsPath
                - required:
                  - coreRuleSetSettingsString
                - required:
                  - coreRuleSetSettingsPath
                properties:
                  auditLogging:
                    description: This instructs the filter what to do with the transaction's
                      audit log.
                    properties:
                      action:
                        enum:
                        - NEVER
                        - RELEVANT_ONLY
                        - ALWAYS
                        type: string
                      location:
                        enum:
                        - FILTER_STATE
                        - DYNAMIC_METADATA
                        type: string
                    type: object
                  coreRuleSetSettingsPath:
                    description: The path to the core rule set settings to use
                    type: string
                  coreRuleSetSettingsString:
                    description: An inline string of the core rule set settings
                    type: string
                  customInterventionMessage:
                    description: Custom message to display when an intervention occurs
                    type: string
                  customRuleSets:
                    description: Overwrite the global rules on this route
                    items:
                      properties:
                        directory:
                          description: |-
                            A directory to include. all *.conf files in this directory will be
                            included. sub directories will NOT be checked.
                          type: string
                        files:
                          description: Array of files to include
                          items:
                            type: string
                          type: array
                        ruleStr:
                          description: String of rules which are added directly
                          type: string
                      type: object
                    type: array
                  disableCoreRuleSet:
                    description: Disable the OWASP core rule set from being applied
                    type: boolean
                  priority:
                    description: |-
                      Optional field that is used to determine the order in which rule sets
                      between policies are applied. Modsec rulesets for each policy
                      is applied from the lowest numerical priority to the highest numerical priority if it is provided.
                      Use this field for all WAF policies applicable to a route or not at all. Defaults to nil if not provided,
                      and WAF policies will be applied in order of ascending creation time.
                      For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#u-int32-value).
                    maximum: 4294967295
                    minimum: 0
                    nullable: true
                    type: integer
                  requestHeadersOnly:
                    description: |-
                      If set, the body will not be buffered and fed to ModSecurity. Only the
                      headers will. This can help improve performance.
                    type: boolean
                  responseHeadersOnly:
                    type: boolean
                type: object
            type: object
          status:
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedRoutes:
                description: The number of routes selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/trafficcontrol.policy.gloo.solo.io_crds.yaml
# Code generated by skv2. DO NOT EDIT.
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 41b661f83577c798
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: httpbufferpolicies.trafficcontrol.policy.gloo.solo.io
spec:
  group: trafficcontrol.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: HTTPBufferPolicy
    listKind: HTTPBufferPolicyList
    plural: httpbufferpolicies
    singular: httpbufferpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              HTTPBufferPolicy is used to enable http buffers for routes
    
              For more details on HTTPBuffer, visit:
              https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/buffer_filter
    
              ```
              apiVersion: trafficcontrol.policy.gloo.solo.io/v2
              kind: HTTPBufferPolicy
              metadata:
                name: buffer
                namespace: bookinfo
              spec:
                config:
                  maxRequestBytes: 16384
                applyToRoutes:
                - route:
                    labels:
                      route: productpage
              ```
            properties:
              applyToRoutes:
                items:
                  description: |-
                    RouteSelector is a Selector specifically built for individual Routes inside of RouteTables.
    
                    This selector can be used to select individual routes or entire route tables using the same label selector.
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: Only select routes attached to route tables matching
                            the cluster.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Select routes including all specified labels on
                            the route or route table.
                          type: object
                        namespace:
                          description: Only select routes attached to route tables matching
                            the namespace.
                          type: string
                        workspace:
                          description: Only select routes attached to route tables matching
                            the workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: The kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            The port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination objects
                                being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination objects
                                being targeted.
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                        selector:
                          description: The selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If omitted, Gloo selects
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If omitted, Gloo selects
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If omitted, Gloo selects
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If omitted, Gloo selects
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                properties:
                  maxRequestBytes:
                    description: |-
                      The maximum request size that the filter will buffer before
                      the connection manager will stop buffering and return a 413
                      response
                    maximum: 4294967295
                    minimum: 0
                    nullable: true
                    type: integer
                type: object
            type: object
          status:
            description: The status of the policy after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedRoutes:
                description: The number of routes selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/trafficcontrol.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: d4cbb3bd943103f5
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: headermanipulationpolicies.trafficcontrol.policy.gloo.solo.io
spec:
  group: trafficcontrol.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: HeaderManipulationPolicy
    listKind: HeaderManipulationPolicyList
    plural: headermanipulationpolicies
    shortNames:
    - hmp
    singular: headermanipulationpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              HeaderManipulationPolicy is used to transform HTTP requests and responses matching selected routes.
              TransformationPolicies are applied at the *Route* level.
              If no selectors are provided, will apply to all routes in the workspace.
            properties:
              applyToRouteDestinations:
                description: |-
                  Select routes' destinations where the policy will be applied.
                  This field is intended for when the config should be applied to a `forwardTo` route only when
                  it is forwarded to a subset of the route's backing destinations.
                items:
                  description: RouteDestinationSelector is a Selector specifically built
                    for individual destinations on individual Routes inside of RouteTables.
                  properties:
                    onDestinations:
                      description: for the selected routes, select destinations on which
                        to apply this policy
                      items:
                        description: |-
                          DestinationSelector is a selector for matching routable destinations for routes.
                          DestinationSelectors can select a variety of object types. The behavior of the route action
                          will vary depending on the type of destination selected. Defaults to the kubernetes `v1/Service`.
                          Currently supported destination types:
                          - v1 Service
                          - networking.gloo.solo.io/v2 VirtualDestination (route traffic to a group of backing destinations)
                          - networking.gloo.solo.io/v2 ExternalService (route traffic to a static set of service endpoints external to the mesh)
                        properties:
                          kind:
                            description: The kind of destination being selected. defaults
                              to Kubernetes Service.
                            enum:
                            - SERVICE
                            - VIRTUAL_DESTINATION
                            - EXTERNAL_SERVICE
                            type: string
                          port:
                            description: |-
                              The port on the Destination which receives traffic.
                              All ports on the Destination will be selected if left empty.
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - number
                                - required:
                                  - name
                            - required:
                              - number
                            - required:
                              - name
                            properties:
                              name:
                                description: the name of the port on the destination objects
                                  being targeted.
                                type: string
                              number:
                                description: the number of the port on the destination
                                  objects being targeted.
                                maximum: 65535
                                minimum: 1
                                type: integer
                            type: object
                          selector:
                            description: The selector used to match destination objects
                              by their metadata
                            properties:
                              cluster:
                                description: |-
                                  Only select objects in the matching cluster. If omitted, Gloo selects
                                  matching objects across all clusters available in the parent object's workspace.
                                type: string
                              labels:
                                additionalProperties:
                                  type: string
                                description: labels matching those of the object
                                type: object
                              name:
                                description: |-
                                  Only select objects with the matching name. If omitted, Gloo selects
                                  matching objects with any name available in the parent object's workspace.
                                type: string
                              namespace:
                                description: |-
                                  Only select objects in the matching namespace. If omitted, Gloo selects
                                  matching objects across all namespaces available in the parent object's workspace.
                                type: string
                              workspace:
                                description: |-
                                  Only select objects in the given workspace. If omitted, Gloo selects
                                  matching objects across all workspaces available in the parent object's workspace.
                                type: string
                            type: object
                        type: object
                      type: array
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                        If empty, configuration will apply to all specified destinations on all routes in the workspace.
                      properties:
                        cluster:
                          description: Only select routes attached to route tables matching
                            the cluster.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Select routes including all specified labels on
                            the route or route table.
                          type: object
                        namespace:
                          description: Only select routes attached to route tables matching
                            the namespace.
                          type: string
                        workspace:
                          description: Only select routes attached to route tables matching
                            the workspace.
                          type: string
                      type: object
                  type: object
                type: array
              applyToRoutes:
                description: select the routes where the policy will be applied
                items:
                  description: |-
                    RouteSelector is a Selector specifically built for individual Routes inside of RouteTables.
    
                    This selector can be used to select individual routes or entire route tables using the same label selector.
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: Only select routes attached to route tables matching
                            the cluster.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Select routes including all specified labels on
                            the route or route table.
                          type: object
                        namespace:
                          description: Only select routes attached to route tables matching
                            the namespace.
                          type: string
                        workspace:
                          description: Only select routes attached to route tables matching
                            the workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: The kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            The port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination objects
                                being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination objects
                                being targeted.
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                        selector:
                          description: The selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If omitted, Gloo selects
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If omitted, Gloo selects
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If omitted, Gloo selects
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If omitted, Gloo selects
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the transformation policy to apply to the
                  selected routes or destinations for a given route.
                properties:
                  appendRequestHeaders:
                    additionalProperties:
                      type: string
                    description: Additional HTTP headers to add before forwarding a request
                      to the destination service.
                    type: object
                  appendResponseHeaders:
                    additionalProperties:
                      type: string
                    description: Additional HTTP headers to add before returning a response
                      to the caller.
                    type: object
                  removeRequestHeaders:
                    description: HTTP headers to remove before forwarding a request to
                      the destination service.
                    items:
                      type: string
                    type: array
                  removeResponseHeaders:
                    description: HTTP headers to remove before returning a response to
                      the caller.
                    items:
                      type: string
                    type: array
                type: object
            type: object
          status:
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedRoutes:
                description: The number of routes selected by this policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/trafficcontrol.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 8b84b007629470e9
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: loadbalancerpolicies.trafficcontrol.policy.gloo.solo.io
spec:
  group: trafficcontrol.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: LoadBalancerPolicy
    listKind: LoadBalancerPolicyList
    plural: loadbalancerpolicies
    shortNames:
    - lbp
    singular: loadbalancerpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: Specifications for the policy.
            properties:
              applyToDestinations:
                description: |-
                  Destinations to apply the policy to.
                  If empty or unset, the policy applies to all destinations in the workspace.
    
                  </br>**Configuration constraints**: Only one load balancer policy can apply to a destination.
                  Subsequent policies (sorted by creation time) are ignored and put into a FAILED state.
                items:
                  description: |-
                    DestinationSelector is a selector for matching routable destinations for routes.
                    DestinationSelectors can select a variety of object types. The behavior of the route action
                    will vary depending on the type of destination selected. Defaults to the kubernetes `v1/Service`.
                    Currently supported destination types:
                    - v1 Service
                    - networking.gloo.solo.io/v2 VirtualDestination (route traffic to a group of backing destinations)
                    - networking.gloo.solo.io/v2 ExternalService (route traffic to a static set of service endpoints external to the mesh)
                  properties:
                    kind:
                      description: The kind of destination being selected. defaults to
                        Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: |-
                        The port on the Destination which receives traffic.
                        All ports on the Destination will be selected if left empty.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                    selector:
                      description: The selector used to match destination objects by their
                        metadata
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If omitted, Gloo selects
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If omitted, Gloo selects
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If omitted, Gloo selects
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If omitted, Gloo selects
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: The configuration for load balancer settings.
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - simple
                    - required:
                      - consistentHash
                - required:
                  - simple
                - required:
                  - consistentHash
                properties:
                  consistentHash:
                    description: |-
                      Set up soft session affinity between a client and an upstream service by
                      using a consistent hashing algorithm based on HTTP headers, cookies, or other
                      properties.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - httpHeaderName
                        - required:
                          - httpCookie
                        - required:
                          - useSourceIp
                        - required:
                          - httpQueryParameterName
                    - required:
                      - httpHeaderName
                    - required:
                      - httpCookie
                    - required:
                      - useSourceIp
                    - required:
                      - httpQueryParameterName
                    properties:
                      httpCookie:
                        description: Hash based on an HTTP cookie.
                        properties:
                          name:
                            description: Name of the cookie.
                            minLength: 1
                            type: string
                          path:
                            description: Path to set for the cookie.
                            type: string
                          ttl:
                            description: |-
                              Lifetime of the cookie.
    
                              </br>**Configuration constraints**:<ul>
                              <li>The value must be an integer or decimal value and a preferred unit, or multiple of these concatenated.
                              Examples: `1m`, `1h`, `1.5h`, `1s500ms`</li>
                              <li>The value cannot have granularity smaller than one nanosecond.</li>
                              <li>For information about the value format,
                              see the [ParseDuration documentation](https://pkg.go.dev/time#ParseDuration).</li></ul>
                            type: string
                            x-kubernetes-validations:
                            - message: The value must be a valid duration.
                              rule: duration(self) >= duration('0s') || duration(self)
                                < duration('0s')
                        required:
                        - name
                        type: object
                      httpHeaderName:
                        description: Hash based on a specific HTTP header.
                        minLength: 1
                        type: string
                      httpQueryParameterName:
                        description: Hash based on a specific HTTP query parameter.
                        minLength: 1
                        type: string
                      useSourceIp:
                        description: |-
                          Hash based on the source IP address.
                          This is applicable for both TCP and HTTP connections.
                        type: boolean
                    type: object
                    x-kubernetes-validations:
                    - message: One of httpHeaderName, httpCookie, useSourceIp, or httpQueryParameterName
                        must be set.
                      rule: has(self.httpHeaderName) || has(self.httpCookie) || has(self.useSourceIp)
                        || has(self.httpQueryParameterName)
                  healthyPanicThreshold:
                    description: |-
                      The threshold at which Envoy disregards the upstream health status and either
                      load balances requests either among all or no hosts.
    
                      </br>**Implementation notes**:<ul>
                      <li>Defaults to 50% (entered as `50`).</li>
                      <li>To disable panic mode, set to 0.</li></ul>
    
                      </br>**Configuration constraints**: The value must be in the range 0 - 100, inclusive.
                    maximum: 100
                    minimum: 0
                    nullable: true
                    type: number
                    x-kubernetes-validations:
                    - message: The value must be >= 0.0001 or equal to zero.
                      rule: self == 0.0 || self >= 0.0001
                  simple:
                    description: |-
                      Set a load balancing algorithm for selecting upstream services to forward incoming
                      requests to.
                    enum:
                    - UNSPECIFIED
                    - RANDOM
                    - PASSTHROUGH
                    - ROUND_ROBIN
                    - LEAST_REQUEST
                    type: string
                  updateMergeWindow:
                    description: |-
                      The duration of time within which the gateway merges all health check, weight, and
                      metadata updates together.
    
                      </br>**Implementation notes**:<ul>
                      <li>Defaults to 1s.</li>
                      <li>To disable this setting, set to 0.</li></ul>
    
                      </br>**Configuration constraints**:<ul>
                      <li>The value must be an integer or decimal value and a preferred unit, or multiple of these concatenated.
                      Examples: `1m`, `1h`, `1.5h`, `1s500ms`</li>
                      <li>The value cannot have granularity smaller than one nanosecond.</li>
                      <li>For information about the value format,
                      see the [ParseDuration documentation](https://pkg.go.dev/time#ParseDuration).</li></ul>
                    type: string
                    x-kubernetes-validations:
                    - message: The value must be a valid duration.
                      rule: duration(self) >= duration('0s') || duration(self) < duration('0s')
                  warmupDurationSecs:
                    description: |-
                      The warm-up duration for a service. If set, the newly created endpoint of the
                      service remains in warm-up mode, starting from its creation time and for the
                      duration of this window. The gateway progressively increases the amount of traffic for that
                      endpoint instead of sending a proportional amount of traffic.
                      This setting is effective in scaling events, such as when new replicas are added to
                      handle increased load. However, if all services start at the same time, this setting
                      might not be as effective as all endpoints receiving the same amount of requests.
    
                      </br>**Implementation notes**: This setting is supported only when `config.simple` is set to ROUND_ROBIN (default) or LEAST_REQUEST.
    
                      </br>**Configuration constraints**:<ul>
                      <li>The value must be an integer or decimal value and a preferred unit, or multiple of these concatenated.
                      Examples: `1m`, `1h`, `1.5h`, `1s500ms`</li>
                      <li>The value cannot have granularity smaller than one nanosecond.</li>
                      <li>For information about the value format,
                      see the [ParseDuration documentation](https://pkg.go.dev/time#ParseDuration).</li></ul>
                    type: string
                    x-kubernetes-validations:
                    - message: The value must be a valid duration.
                      rule: duration(self) >= duration('0s') || duration(self) < duration('0s')
                type: object
                x-kubernetes-validations:
                - message: One of config.simple or config.consistentHash must be set.
                  rule: has(self.simple) || has(self.consistentHash)
            required:
            - config
            type: object
          status:
            description: The status of the policy after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedDestinationPorts:
                description: The number of destination ports selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/trafficcontrol.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 65c8233672c77d9c
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: mirrorpolicies.trafficcontrol.policy.gloo.solo.io
spec:
  group: trafficcontrol.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: MirrorPolicy
    listKind: MirrorPolicyList
    plural: mirrorpolicies
    shortNames:
    - mp
    singular: mirrorpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              MirrorPolicy is used to mirror/shadow traffic to a another destination (traffic will be sent to its original destination in addition to the mirrored destinations).
              MirrorPolicies are applied at the *Route* level.
            properties:
              applyToRoutes:
                description: |-
                  Routes to apply the policy to.
                  If empty, the policy applies to all workloads in the workspace.
                items:
                  description: |-
                    RouteSelector is a Selector specifically built for individual Routes inside of RouteTables.
    
                    This selector can be used to select individual routes or entire route tables using the same label selector.
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: Only select routes attached to route tables matching
                            the cluster.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Select routes including all specified labels on
                            the route or route table.
                          type: object
                        namespace:
                          description: Only select routes attached to route tables matching
                            the namespace.
                          type: string
                        workspace:
                          description: Only select routes attached to route tables matching
                            the workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: The kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            The port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination objects
                                being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination objects
                                being targeted.
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                        selector:
                          description: The selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If omitted, Gloo selects
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If omitted, Gloo selects
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If omitted, Gloo selects
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If omitted, Gloo selects
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the Mirror policy to apply to the selected
                  routes
                properties:
                  destination:
                    description: The destination to which to send mirrored traffic
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - ref
                        - required:
                          - awsLambda
                    - required:
                      - ref
                    - required:
                      - awsLambda
                    properties:
                      awsLambda:
                        description: Reference an AWS Lambda function.
                        properties:
                          cloudProvider:
                            description: Reference to the AWS Cloud Provider.
                            properties:
                              cluster:
                                description: the cluster of the object. If omitted, Gloo
                                  Mesh will use the same cluster as the parent object
                                  containing this reference.
                                type: string
                              name:
                                description: the name of the object
                                type: string
                              namespace:
                                description: the namespace of the object. If omitted,
                                  Gloo Mesh will use the same namespace as the parent
                                  object containing this reference.
                                type: string
                            type: object
                          function:
                            description: Name of the function to reference.
                            type: string
                          options:
                            description: |-
                              Specify how the destinations should be configured, for configuring lambda functions.
                              If the destination config is required for the destination and not provided by the user, Gloo will invalidate the
                              destination and its parent resources.
                            properties:
                              invocationStyle:
                                description: |-
                                  Can be either Sync or Async. See [AWS Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html)
                                  for more details.
                                enum:
                                - SYNC
                                - ASYNC
                                type: string
                              requestTransformation:
                                enum:
                                - REQUEST_DEFAULT
                                - REQUEST_DISABLE
                                type: string
                              responseTransformation:
                                enum:
                                - RESPONSE_DEFAULT
                                - RESPONSE_DISABLE
                                type: string
                            type: object
                          qualifier:
                            description: Qualifier of the function to reference. Defaults
                              to $LATEST
                            type: string
                        type: object
                      kind:
                        description: |-
                          the kind of Kubernetes destination being referenced. defaults to Service.
                          Only applicable for Kubernetes destinations. For non Kubernetes destinations, this field is ignored.
                        enum:
                        - SERVICE
                        - VIRTUAL_DESTINATION
                        - EXTERNAL_SERVICE
                        type: string
                      port:
                        description: the port on the destination object being targeted.
                          required if the object provides more than one port.
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - number
                            - required:
                              - name
                        - required:
                          - number
                        - required:
                          - name
                        properties:
                          name:
                            description: the name of the port on the destination objects
                              being targeted.
                            type: string
                          number:
                            description: the number of the port on the destination objects
                              being targeted.
                            maximum: 65535
                            minimum: 1
                            type: integer
                        type: object
                      ref:
                        description: reference to a Kubernetes destination object by its
                          metadata
                        properties:
                          cluster:
                            description: the cluster of the object. If omitted, Gloo Mesh
                              will use the same cluster as the parent object containing
                              this reference.
                            type: string
                          name:
                            description: the name of the object
                            type: string
                          namespace:
                            description: the namespace of the object. If omitted, Gloo
                              Mesh will use the same namespace as the parent object containing
                              this reference.
                            type: string
                        type: object
                      subset:
                        additionalProperties:
                          type: string
                        description: |-
                          select a subset of the destination's endpoints for routing based on their labels.
                          Only applicable for Kubernetes destinations.
                        type: object
                      weight:
                        description: |-
                          Specify the proportion of traffic to be forwarded to this destination.
                          Weights across all of the `destinations` must sum to 100.
                          Weight is only relevant when used in the context of a route with multiple destinations.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                    type: object
                  percentage:
                    description: |-
                      Percentage of traffic to mirror. If omitted all traffic will be mirrored. Values must be between 0 and 100.
                      For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#double-value).
                    nullable: true
                    type: number
                type: object
            type: object
          status:
            description: The status of the policy after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedRoutes:
                description: The number of routes selected by this policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/trafficcontrol.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: e21598431be2cb40
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: proxyprotocolpolicies.trafficcontrol.policy.gloo.solo.io
spec:
  group: trafficcontrol.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ProxyProtocolPolicy
    listKind: ProxyProtocolPolicyList
    plural: proxyprotocolpolicies
    singular: proxyprotocolpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              ProxyProtocolPolicy is used to enable proxy protocol for gateway listener(s).
    
              For more details on ProxyProtocol, visit:
              https://www.haproxy.org/download/1.8/doc/proxy-protocol.txt.
    
              ```
              apiVersion: trafficcontrol.policy.gloo.solo.io/v2
              kind: ProxyProtocolPolicy
              metadata:
                name: my-policy
                namespace: bookinfo
              spec:
                config:
                  enabledProxyProtocol: true
                applyToListeners:
                - virtualGateway:
                    name: virtual-gateway
                    namespace: bookinfo
                    cluster: my-cluster
                  port:
                    number: 443
              ```
            properties:
              applyToListeners:
                description: 'Required: The VirtualGateway(s) and Port(s) to which this
                  policy applies.'
                items:
                  description: ListenerSelector is a selector for a listener on a VirtualGateway.
                  properties:
                    port:
                      description: The port to select on the selected listener.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                    virtualGateway:
                      description: The virtual gateway on which to select a listener.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If omitted, Gloo selects
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If omitted, Gloo selects
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If omitted, Gloo selects
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If omitted, Gloo selects
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: 'Required: The configuration to apply to the listener.'
                properties:
                  enableProxyProtocol:
                    type: boolean
                type: object
            type: object
          status:
            description: The status of the policy after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedListeners:
                description: The number of virtual gateway listeners selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/trafficcontrol.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: d1cb60b69cd980b
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: ratelimitclientconfigs.trafficcontrol.policy.gloo.solo.io
spec:
  group: trafficcontrol.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: RateLimitClientConfig
    listKind: RateLimitClientConfigList
    plural: ratelimitclientconfigs
    shortNames:
    - rlcc
    singular: ratelimitclientconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              RateLimitClientConfig is used to configure the ratelimit rules on routes/destinations.
              All RateLimitPolicy resources in a workspace require an RateLimitClientConfig to in order to function.
              If no RateLimitClientConfig is provided, no ratelimit rules will be enforced.
            oneOf:
            - not:
                anyOf:
                - required:
                  - raw
            - required:
              - raw
            properties:
              raw:
                description: Define a policy using the raw configuration format used by
                  the client (Envoy).
                properties:
                  rateLimits:
                    description: |-
                      Actions specify how the client (Envoy) will compose the descriptors that
                      will be sent to the server to make a rate limiting decision.
                    items:
                      description: |-
                        Each action and setAction in the lists maps part of the request (or its context) to a descriptor. The tuple or set of descriptors
                        generated by the provided actions is sent to the rate limit server and matched against rate limit rules.
                        Order matters on provided actions but not on setActions, e.g. the following actions:
                        - actions:
                          - requestHeaders:
                             descriptorKey: account_id
                             headerName: x-account-id
                          - requestHeaders:
                             descriptorKey: plan
                             headerName: x-plan
                        define an ordered descriptor tuple like so: ('account_id', '<x-account-id value>'), ('plan', '<x-plan value>')
    
                        While the current form matches, the same tuple in reverse order would not match the following descriptor:
    
                        descriptors:
                        - key: account_id
                          descriptors:
                          - key: plan
                            value: BASIC
                            rateLimit:
                              requestsPerUnit: 1
                              unit: MINUTE
                         - key: plan
                           value: PLUS
                           rateLimit:
                             requestsPerUnit: 20
                             unit: MINUTE
    
                        Similarly, the following setActions:
                        - setActions:
                          - requestHeaders:
                             descriptorKey: account_id
                             headerName: x-account-id
                          - requestHeaders:
                             descriptorKey: plan
                             headerName: x-plan
                        define an unordered descriptor set like so: {('account_id', '<x-account-id value>'), ('plan', '<x-plan value>')}
    
                        This set would match the following setDescriptor:
    
                        setDescriptors:
                        - simpleDescriptors:
                          - key: plan
                            value: BASIC
                          - key: account_id
                         rateLimit:
                           requestsPerUnit: 20
                           unit: MINUTE
    
                        It would also match the following setDescriptor which includes only a subset of the setActions enumerated:
    
                        setDescriptors:
                        - simpleDescriptors:
                          - key: account_id
                         rateLimit:
                           requestsPerUnit: 20
                           unit: MINUTE
    
                        It would even match the following setDescriptor.
                        Any setActions list would match this setDescriptor which has simpleDescriptors omitted entirely:
    
                        setDescriptors:
                        - rateLimit:
                           requestsPerUnit: 20
                           unit: MINUTE
                      properties:
                        actions:
                          items:
                            description: |-
                              Copied directly from envoy
                              https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route_components.proto#envoy-v3-api-msg-config-route-v3-ratelimit-action
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - sourceCluster
                                - required:
                                  - destinationCluster
                                - required:
                                  - requestHeaders
                                - required:
                                  - remoteAddress
                                - required:
                                  - genericKey
                                - required:
                                  - headerValueMatch
                                - required:
                                  - metadata
                            - required:
                              - sourceCluster
                            - required:
                              - destinationCluster
                            - required:
                              - requestHeaders
                            - required:
                              - remoteAddress
                            - required:
                              - genericKey
                            - required:
                              - headerValueMatch
                            - required:
                              - metadata
                            properties:
                              destinationCluster:
                                description: Rate limit on destination cluster.
                                type: object
                              genericKey:
                                description: Rate limit on a generic key.
                                properties:
                                  descriptorValue:
                                    description: The value to use in the descriptor entry.
                                    type: string
                                type: object
                              headerValueMatch:
                                description: Rate limit on the existence of request headers.
                                properties:
                                  descriptorValue:
                                    description: The value to use in the descriptor entry.
                                    type: string
                                  expectMatch:
                                    description: |-
                                      If set to true, the action will append a descriptor entry when the
                                      request matches the headers. If set to false, the action will append a
                                      descriptor entry when the request does not match the headers. The
                                      default value is true.
                                    nullable: true
                                    type: boolean
                                  headers:
                                    description: |-
                                      Specifies a set of headers that the rate limit action should match
                                      on. The action will check the request’s headers against all the
                                      specified headers in the config. A match will happen if all the
                                      headers in the config are present in the request with the same values
                                      (or based on presence if the value field is not in the config).
                                    items:
                                      oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - exactMatch
                                          - required:
                                            - regexMatch
                                          - required:
                                            - rangeMatch
                                          - required:
                                            - presentMatch
                                          - required:
                                            - prefixMatch
                                          - required:
                                            - suffixMatch
                                      - required:
                                        - exactMatch
                                      - required:
                                        - regexMatch
                                      - required:
                                        - rangeMatch
                                      - required:
                                        - presentMatch
                                      - required:
                                        - prefixMatch
                                      - required:
                                        - suffixMatch
                                      properties:
                                        exactMatch:
                                          description: If specified, header match will
                                            be performed based on the value of the header.
                                          type: string
                                        invertMatch:
                                          description: |-
                                            If specified, the match result will be inverted before checking. Defaults to false.
    
                                            Examples:
    
                                            * The regex *\d{3}* does not match the value *1234*, so it will match when inverted.
                                            * The range [-10,0) will match the value -1, so it will not match when inverted.
                                          type: boolean
                                        name:
                                          description: Specifies the name of the header
                                            in the request.
                                          type: string
                                        prefixMatch:
                                          description: |-
                                            If specified, header match will be performed based on the prefix of the header value.
                                            Note: empty prefix is not allowed, please use present_match instead.
    
                                            Examples:
    
                                            * The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*.
                                          type: string
                                        presentMatch:
                                          description: |-
                                            If specified, header match will be performed based on whether the header is in the
                                            request.
                                          type: boolean
                                        rangeMatch:
                                          description: |-
                                            If specified, header match will be performed based on range.
                                            The rule will match if the request header value is within this range.
                                            The entire request header value must represent an integer in base 10 notation: consisting of
                                            an optional plus or minus sign followed by a sequence of digits. The rule will not match if
                                            the header value does not represent an integer. Match will fail for empty values, floating
                                            point numbers or if only a subsequence of the header value is an integer.
    
                                            Examples:
    
                                            * For range [-10,0), route will match for header value -1, but not for 0, "somestring", 10.9,
                                              "-1somestring"
                                          properties:
                                            end:
                                              description: end of the range (exclusive)
                                              format: int64
                                              type: integer
                                            start:
                                              description: start of the range (inclusive)
                                              format: int64
                                              type: integer
                                          type: object
                                        regexMatch:
                                          description: |-
                                            If specified, this regex string is a regular expression rule which implies the entire request
                                            header value must match the regex. The rule will not match if only a subsequence of the
                                            request header value matches the regex. The regex grammar used in the value field is defined
                                            `(here)[https://en.cppreference.com/w/cpp/regex/ecmascript]`.
    
                                            Examples:
    
                                            * The regex *\d{3}* matches the value *123*
                                            * The regex *\d{3}* does not match the value *1234*
                                            * The regex *\d{3}* does not match the value *123.456*
                                          type: string
                                        suffixMatch:
                                          description: |-
                                            If specified, header match will be performed based on the suffix of the header value.
                                            Note: empty suffix is not allowed, please use present_match instead.
    
                                            Examples:
    
                                            * The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*.
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              metadata:
                                description: Rate limit on metadata.
                                properties:
                                  defaultValue:
                                    description: |-
                                      An optional value to use if *metadata_key* is empty. If not set and
                                      no value is present under the metadata_key then no descriptor is generated.
                                    type: string
                                  descriptorKey:
                                    description: Required. The key to use in the descriptor
                                      entry.
                                    type: string
                                  metadataKey:
                                    description: |-
                                      Required. Metadata struct that defines the key and path to retrieve the string value. A match will
                                      only happen if the value in the metadata is of type string.
                                    properties:
                                      key:
                                        description: |-
                                          Required. The key name of Metadata to retrieve the Struct from the metadata.
                                          Typically, it represents a builtin subsystem or custom extension.
                                        type: string
                                      path:
                                        description: |-
                                          Must have at least one element. The path to retrieve the Value from the Struct. It can be a prefix or a full path,
                                          e.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a string in the example,
                                          which depends on the particular scenario.
    
                                          Note: Due to that only the key type segment is supported, the path can not specify a list
                                          unless the list is the last segment.
                                        items:
                                          description: |-
                                            Specifies the segment in a path to retrieve value from Metadata.
                                            Currently it is only supported to specify the key, i.e. field name, as one segment of a path.
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - key
                                          - required:
                                            - key
                                          properties:
                                            key:
                                              description: Required. If specified, use
                                                the key to retrieve the value in a Struct.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  source:
                                    description: Source of metadata
                                    enum:
                                    - DYNAMIC
                                    - ROUTE_ENTRY
                                    type: string
                                type: object
                              remoteAddress:
                                description: Rate limit on remote address.
                                type: object
                              requestHeaders:
                                description: Rate limit on request headers.
                                properties:
                                  descriptorKey:
                                    description: The key to use in the descriptor entry.
                                    type: string
                                  headerName:
                                    description: |-
                                      The header name to be queried from the request headers. The header’s
                                      value is used to populate the value of the descriptor entry for the
                                      descriptor_key.
                                    type: string
                                type: object
                              sourceCluster:
                                description: Rate limit on source cluster.
                                type: object
                            type: object
                          type: array
                        limit:
                          description: An optional limit override to be appended to the
                            descriptor produced by this rate limit configuration. If the
                            override value is invalid or cannot be resolved from metadata,
                            no override is provided.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - dynamicMetadata
                          - required:
                            - dynamicMetadata
                          properties:
                            dynamicMetadata:
                              description: Limit override from dynamic metadata.
                              properties:
                                metadataKey:
                                  description: |-
                                    Metadata struct that defines the key and path to retrieve the struct value.
                                    The value must be a struct containing an integer "requests_per_unit" property
                                    and a "unit" property with a value parseable to :ref:`RateLimitUnit
                                    enum <envoy_v3_api_enum_type.v3.RateLimitUnit>`
                                  properties:
                                    key:
                                      description: |-
                                        Required. The key name of Metadata to retrieve the Struct from the metadata.
                                        Typically, it represents a builtin subsystem or custom extension.
                                      type: string
                                    path:
                                      description: |-
                                        Must have at least one element. The path to retrieve the Value from the Struct. It can be a prefix or a full path,
                                        e.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a string in the example,
                                        which depends on the particular scenario.
    
                                        Note: Due to that only the key type segment is supported, the path can not specify a list
                                        unless the list is the last segment.
                                      items:
                                        description: |-
                                          Specifies the segment in a path to retrieve value from Metadata.
                                          Currently it is only supported to specify the key, i.e. field name, as one segment of a path.
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - key
                                        - required:
                                          - key
                                        properties:
                                          key:
                                            description: Required. If specified, use the
                                              key to retrieve the value in a Struct.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                          type: object
                        setActions:
                          items:
                            description: |-
                              Copied directly from envoy
                              https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route_components.proto#envoy-v3-api-msg-config-route-v3-ratelimit-action
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - sourceCluster
                                - required:
                                  - destinationCluster
                                - required:
                                  - requestHeaders
                                - required:
                                  - remoteAddress
                                - required:
                                  - genericKey
                                - required:
                                  - headerValueMatch
                                - required:
                                  - metadata
                            - required:
                              - sourceCluster
                            - required:
                              - destinationCluster
                            - required:
                              - requestHeaders
                            - required:
                              - remoteAddress
                            - required:
                              - genericKey
                            - required:
                              - headerValueMatch
                            - required:
                              - metadata
                            properties:
                              destinationCluster:
                                description: Rate limit on destination cluster.
                                type: object
                              genericKey:
                                description: Rate limit on a generic key.
                                properties:
                                  descriptorValue:
                                    description: The value to use in the descriptor entry.
                                    type: string
                                type: object
                              headerValueMatch:
                                description: Rate limit on the existence of request headers.
                                properties:
                                  descriptorValue:
                                    description: The value to use in the descriptor entry.
                                    type: string
                                  expectMatch:
                                    description: |-
                                      If set to true, the action will append a descriptor entry when the
                                      request matches the headers. If set to false, the action will append a
                                      descriptor entry when the request does not match the headers. The
                                      default value is true.
                                    nullable: true
                                    type: boolean
                                  headers:
                                    description: |-
                                      Specifies a set of headers that the rate limit action should match
                                      on. The action will check the request’s headers against all the
                                      specified headers in the config. A match will happen if all the
                                      headers in the config are present in the request with the same values
                                      (or based on presence if the value field is not in the config).
                                    items:
                                      oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - exactMatch
                                          - required:
                                            - regexMatch
                                          - required:
                                            - rangeMatch
                                          - required:
                                            - presentMatch
                                          - required:
                                            - prefixMatch
                                          - required:
                                            - suffixMatch
                                      - required:
                                        - exactMatch
                                      - required:
                                        - regexMatch
                                      - required:
                                        - rangeMatch
                                      - required:
                                        - presentMatch
                                      - required:
                                        - prefixMatch
                                      - required:
                                        - suffixMatch
                                      properties:
                                        exactMatch:
                                          description: If specified, header match will
                                            be performed based on the value of the header.
                                          type: string
                                        invertMatch:
                                          description: |-
                                            If specified, the match result will be inverted before checking. Defaults to false.
    
                                            Examples:
    
                                            * The regex *\d{3}* does not match the value *1234*, so it will match when inverted.
                                            * The range [-10,0) will match the value -1, so it will not match when inverted.
                                          type: boolean
                                        name:
                                          description: Specifies the name of the header
                                            in the request.
                                          type: string
                                        prefixMatch:
                                          description: |-
                                            If specified, header match will be performed based on the prefix of the header value.
                                            Note: empty prefix is not allowed, please use present_match instead.
    
                                            Examples:
    
                                            * The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*.
                                          type: string
                                        presentMatch:
                                          description: |-
                                            If specified, header match will be performed based on whether the header is in the
                                            request.
                                          type: boolean
                                        rangeMatch:
                                          description: |-
                                            If specified, header match will be performed based on range.
                                            The rule will match if the request header value is within this range.
                                            The entire request header value must represent an integer in base 10 notation: consisting of
                                            an optional plus or minus sign followed by a sequence of digits. The rule will not match if
                                            the header value does not represent an integer. Match will fail for empty values, floating
                                            point numbers or if only a subsequence of the header value is an integer.
    
                                            Examples:
    
                                            * For range [-10,0), route will match for header value -1, but not for 0, "somestring", 10.9,
                                              "-1somestring"
                                          properties:
                                            end:
                                              description: end of the range (exclusive)
                                              format: int64
                                              type: integer
                                            start:
                                              description: start of the range (inclusive)
                                              format: int64
                                              type: integer
                                          type: object
                                        regexMatch:
                                          description: |-
                                            If specified, this regex string is a regular expression rule which implies the entire request
                                            header value must match the regex. The rule will not match if only a subsequence of the
                                            request header value matches the regex. The regex grammar used in the value field is defined
                                            `(here)[https://en.cppreference.com/w/cpp/regex/ecmascript]`.
    
                                            Examples:
    
                                            * The regex *\d{3}* matches the value *123*
                                            * The regex *\d{3}* does not match the value *1234*
                                            * The regex *\d{3}* does not match the value *123.456*
                                          type: string
                                        suffixMatch:
                                          description: |-
                                            If specified, header match will be performed based on the suffix of the header value.
                                            Note: empty suffix is not allowed, please use present_match instead.
    
                                            Examples:
    
                                            * The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*.
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              metadata:
                                description: Rate limit on metadata.
                                properties:
                                  defaultValue:
                                    description: |-
                                      An optional value to use if *metadata_key* is empty. If not set and
                                      no value is present under the metadata_key then no descriptor is generated.
                                    type: string
                                  descriptorKey:
                                    description: Required. The key to use in the descriptor
                                      entry.
                                    type: string
                                  metadataKey:
                                    description: |-
                                      Required. Metadata struct that defines the key and path to retrieve the string value. A match will
                                      only happen if the value in the metadata is of type string.
                                    properties:
                                      key:
                                        description: |-
                                          Required. The key name of Metadata to retrieve the Struct from the metadata.
                                          Typically, it represents a builtin subsystem or custom extension.
                                        type: string
                                      path:
                                        description: |-
                                          Must have at least one element. The path to retrieve the Value from the Struct. It can be a prefix or a full path,
                                          e.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a string in the example,
                                          which depends on the particular scenario.
    
                                          Note: Due to that only the key type segment is supported, the path can not specify a list
                                          unless the list is the last segment.
                                        items:
                                          description: |-
                                            Specifies the segment in a path to retrieve value from Metadata.
                                            Currently it is only supported to specify the key, i.e. field name, as one segment of a path.
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - key
                                          - required:
                                            - key
                                          properties:
                                            key:
                                              description: Required. If specified, use
                                                the key to retrieve the value in a Struct.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  source:
                                    description: Source of metadata
                                    enum:
                                    - DYNAMIC
                                    - ROUTE_ENTRY
                                    type: string
                                type: object
                              remoteAddress:
                                description: Rate limit on remote address.
                                type: object
                              requestHeaders:
                                description: Rate limit on request headers.
                                properties:
                                  descriptorKey:
                                    description: The key to use in the descriptor entry.
                                    type: string
                                  headerName:
                                    description: |-
                                      The header name to be queried from the request headers. The header’s
                                      value is used to populate the value of the descriptor entry for the
                                      descriptor_key.
                                    type: string
                                type: object
                              sourceCluster:
                                description: Rate limit on source cluster.
                                type: object
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
            type: object
          status:
            description: The current status of the `RateLimitClientConfig`.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/trafficcontrol.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 164d2273dcd23559
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: ratelimitpolicies.trafficcontrol.policy.gloo.solo.io
spec:
  group: trafficcontrol.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: RateLimitPolicy
    listKind: RateLimitPolicyList
    plural: ratelimitpolicies
    shortNames:
    - rlp
    singular: ratelimitpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              RateLimitPolicy is used to assign ratelimit configuration to specific routes or destinations.
              Traffic is forwarded to a rate-limited destinations specified in the RatelimitServerSettings.
              The RatelimitServerSettings is also used to configure connecting settings.
              If this is not provided, the default connection settings and default gloo mesh ratelimiter server destination will be used.
              RateLimitPolicies are applied at the *Route* level and *Destination* levels.
              Default is to apply policy to all destinations.
            properties:
              applyToDestinations:
                description: |-
                  Select the destinations where the policy will be applied.
                  {{< reuse "conrefs/snippets/field-desc/dest-no-vdest.md" >}}
                  If empty, the rate limit policy applies to all destinations in the workspace.
                  If the destination selector is empty but the route selector is set, no rate limits are applied on destinations, only on routes.
                items:
                  description: |-
                    DestinationSelector is a selector for matching routable destinations for routes.
                    DestinationSelectors can select a variety of object types. The behavior of the route action
                    will vary depending on the type of destination selected. Defaults to the kubernetes `v1/Service`.
                    Currently supported destination types:
                    - v1 Service
                    - networking.gloo.solo.io/v2 VirtualDestination (route traffic to a group of backing destinations)
                    - networking.gloo.solo.io/v2 ExternalService (route traffic to a static set of service endpoints external to the mesh)
                  properties:
                    kind:
                      description: The kind of destination being selected. defaults to
                        Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: |-
                        The port on the Destination which receives traffic.
                        All ports on the Destination will be selected if left empty.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 65535
                          minimum: 1
                          type: integer
                      type: object
                    selector:
                      description: The selector used to match destination objects by their
                        metadata
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If omitted, Gloo selects
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If omitted, Gloo selects
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If omitted, Gloo selects
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If omitted, Gloo selects
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              applyToRoutes:
                description: |-
                  Select the routes to apply the policy to.
                  If empty, no rate limits are applied on routes in the workspace.
                items:
                  description: |-
                    RouteSelector is a Selector specifically built for individual Routes inside of RouteTables.
    
                    This selector can be used to select individual routes or entire route tables using the same label selector.
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: Only select routes attached to route tables matching
                            the cluster.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Select routes including all specified labels on
                            the route or route table.
                          type: object
                        namespace:
                          description: Only select routes attached to route tables matching
                            the namespace.
                          type: string
                        workspace:
                          description: Only select routes attached to route tables matching
                            the workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: The kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            The port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination objects
                                being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination objects
                                being targeted.
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                        selector:
                          description: The selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If omitted, Gloo selects
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If omitted, Gloo selects
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If omitted, Gloo selects
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If omitted, Gloo selects
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The configuration details of the rate limit policy to apply
                  to the selected routes
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - raw
                    - required:
                      - ratelimitClientConfig
                - required:
                  - raw
                - required:
                  - ratelimitClientConfig
                properties:
                  phase:
                    description: |-
                      Specify the phase to indicate where this policy should be applied relative to other policies.
                      If no phase is specified, the default will be post AuthZ.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - preAuthz
                        - required:
                          - postAuthz
                    - required:
                      - preAuthz
                    - required:
                      - postAuthz
                    properties:
                      postAuthz:
                        description: Apply this policy after Authorization policies are
                          applied.
                        properties:
                          priority:
                            description: |-
                              The priority at which this policy should be applied relative to other policies defined in the same phase.
                              The lowest priority will be run first and the default priority value is 0.
                              For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#int32-value).
                            maximum: 2147483647
                            minimum: -2147483648
                            nullable: true
                            type: integer
                        type: object
                      preAuthz:
                        description: Apply this policy before Authorization policies are
                          applied.
                        properties:
                          priority:
                            description: |-
                              The priority at which this policy should be applied relative to other policies defined in the same phase.
                              The lowest priority will be run first and the default priority value is 0.
                              For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#int32-value).
                            maximum: 2147483647
                            minimum: -2147483648
                            nullable: true
                            type: integer
                        type: object
                    type: object
                  ratelimitClientConfig:
                    description: Select a RatelimitClientConfig policy to apply.
                    properties:
                      cluster:
                        description: the cluster of the object. If omitted, Gloo Mesh
                          will use the same cluster as the parent object containing this
                          reference.
                        type: string
                      name:
                        description: the name of the object
                        type: string
                      namespace:
                        description: the namespace of the object. If omitted, Gloo Mesh
                          will use the same namespace as the parent object containing
                          this reference.
                        type: string
                    type: object
                  ratelimitServerConfig:
                    description: |-
                      Reference to the RatelimitServerConfig to use for this policy.
                      If none is provided, no ratelimit will be enforced
                    properties:
                      cluster:
                        description: the cluster of the object. If omitted, Gloo Mesh
                          will use the same cluster as the parent object containing this
                          reference.
                        type: string
                      name:
                        description: the name of the object
                        type: string
                      namespace:
                        description: the namespace of the object. If omitted, Gloo Mesh
                          will use the same namespace as the parent object containing
                          this reference.
                        type: string
                    type: object
                  raw:
                    description: Inline a policy using the raw configuration format used
                      by the ratelimit server.
                    properties:
                      rateLimits:
                        description: |-
                          Actions specify how the client (Envoy) will compose the descriptors that
                          will be sent to the server to make a rate limiting decision.
                        items:
                          description: |-
                            Each action and setAction in the lists maps part of the request (or its context) to a descriptor. The tuple or set of descriptors
                            generated by the provided actions is sent to the rate limit server and matched against rate limit rules.
                            Order matters on provided actions but not on setActions, e.g. the following actions:
                            - actions:
                              - requestHeaders:
                                 descriptorKey: account_id
                                 headerName: x-account-id
                              - requestHeaders:
                                 descriptorKey: plan
                                 headerName: x-plan
                            define an ordered descriptor tuple like so: ('account_id', '<x-account-id value>'), ('plan', '<x-plan value>')
    
                            While the current form matches, the same tuple in reverse order would not match the following descriptor:
    
                            descriptors:
                            - key: account_id
                              descriptors:
                              - key: plan
                                value: BASIC
                                rateLimit:
                                  requestsPerUnit: 1
                                  unit: MINUTE
                             - key: plan
                               value: PLUS
                               rateLimit:
                                 requestsPerUnit: 20
                                 unit: MINUTE
    
                            Similarly, the following setActions:
                            - setActions:
                              - requestHeaders:
                                 descriptorKey: account_id
                                 headerName: x-account-id
                              - requestHeaders:
                                 descriptorKey: plan
                                 headerName: x-plan
                            define an unordered descriptor set like so: {('account_id', '<x-account-id value>'), ('plan', '<x-plan value>')}
    
                            This set would match the following setDescriptor:
    
                            setDescriptors:
                            - simpleDescriptors:
                              - key: plan
                                value: BASIC
                              - key: account_id
                             rateLimit:
                               requestsPerUnit: 20
                               unit: MINUTE
    
                            It would also match the following setDescriptor which includes only a subset of the setActions enumerated:
    
                            setDescriptors:
                            - simpleDescriptors:
                              - key: account_id
                             rateLimit:
                               requestsPerUnit: 20
                               unit: MINUTE
    
                            It would even match the following setDescriptor.
                            Any setActions list would match this setDescriptor which has simpleDescriptors omitted entirely:
    
                            setDescriptors:
                            - rateLimit:
                               requestsPerUnit: 20
                               unit: MINUTE
                          properties:
                            actions:
                              items:
                                description: |-
                                  Copied directly from envoy
                                  https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route_components.proto#envoy-v3-api-msg-config-route-v3-ratelimit-action
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - sourceCluster
                                    - required:
                                      - destinationCluster
                                    - required:
                                      - requestHeaders
                                    - required:
                                      - remoteAddress
                                    - required:
                                      - genericKey
                                    - required:
                                      - headerValueMatch
                                    - required:
                                      - metadata
                                - required:
                                  - sourceCluster
                                - required:
                                  - destinationCluster
                                - required:
                                  - requestHeaders
                                - required:
                                  - remoteAddress
                                - required:
                                  - genericKey
                                - required:
                                  - headerValueMatch
                                - required:
                                  - metadata
                                properties:
                                  destinationCluster:
                                    description: Rate limit on destination cluster.
                                    type: object
                                  genericKey:
                                    description: Rate limit on a generic key.
                                    properties:
                                      descriptorValue:
                                        description: The value to use in the descriptor
                                          entry.
                                        type: string
                                    type: object
                                  headerValueMatch:
                                    description: Rate limit on the existence of request
                                      headers.
                                    properties:
                                      descriptorValue:
                                        description: The value to use in the descriptor
                                          entry.
                                        type: string
                                      expectMatch:
                                        description: |-
                                          If set to true, the action will append a descriptor entry when the
                                          request matches the headers. If set to false, the action will append a
                                          descriptor entry when the request does not match the headers. The
                                          default value is true.
                                        nullable: true
                                        type: boolean
                                      headers:
                                        description: |-
                                          Specifies a set of headers that the rate limit action should match
                                          on. The action will check the request’s headers against all the
                                          specified headers in the config. A match will happen if all the
                                          headers in the config are present in the request with the same values
                                          (or based on presence if the value field is not in the config).
                                        items:
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - exactMatch
                                              - required:
                                                - regexMatch
                                              - required:
                                                - rangeMatch
                                              - required:
                                                - presentMatch
                                              - required:
                                                - prefixMatch
                                              - required:
                                                - suffixMatch
                                          - required:
                                            - exactMatch
                                          - required:
                                            - regexMatch
                                          - required:
                                            - rangeMatch
                                          - required:
                                            - presentMatch
                                          - required:
                                            - prefixMatch
                                          - required:
                                            - suffixMatch
                                          properties:
                                            exactMatch:
                                              description: If specified, header match
                                                will be performed based on the value of
                                                the header.
                                              type: string
                                            invertMatch:
                                              description: |-
                                                If specified, the match result will be inverted before checking. Defaults to false.
    
                                                Examples:
    
                                                * The regex *\d{3}* does not match the value *1234*, so it will match when inverted.
                                                * The range [-10,0) will match the value -1, so it will not match when inverted.
                                              type: boolean
                                            name:
                                              description: Specifies the name of the header
                                                in the request.
                                              type: string
                                            prefixMatch:
                                              description: |-
                                                If specified, header match will be performed based on the prefix of the header value.
                                                Note: empty prefix is not allowed, please use present_match instead.
    
                                                Examples:
    
                                                * The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*.
                                              type: string
                                            presentMatch:
                                              description: |-
                                                If specified, header match will be performed based on whether the header is in the
                                                request.
                                              type: boolean
                                            rangeMatch:
                                              description: |-
                                                If specified, header match will be performed based on range.
                                                The rule will match if the request header value is within this range.
                                                The entire request header value must represent an integer in base 10 notation: consisting of
                                                an optional plus or minus sign followed by a sequence of digits. The rule will not match if
                                                the header value does not represent an integer. Match will fail for empty values, floating
                                                point numbers or if only a subsequence of the header value is an integer.
    
                                                Examples:
    
                                                * For range [-10,0), route will match for header value -1, but not for 0, "somestring", 10.9,
                                                  "-1somestring"
                                              properties:
                                                end:
                                                  description: end of the range (exclusive)
                                                  format: int64
                                                  type: integer
                                                start:
                                                  description: start of the range (inclusive)
                                                  format: int64
                                                  type: integer
                                              type: object
                                            regexMatch:
                                              description: |-
                                                If specified, this regex string is a regular expression rule which implies the entire request
                                                header value must match the regex. The rule will not match if only a subsequence of the
                                                request header value matches the regex. The regex grammar used in the value field is defined
                                                `(here)[https://en.cppreference.com/w/cpp/regex/ecmascript]`.
    
                                                Examples:
    
                                                * The regex *\d{3}* matches the value *123*
                                                * The regex *\d{3}* does not match the value *1234*
                                                * The regex *\d{3}* does not match the value *123.456*
                                              type: string
                                            suffixMatch:
                                              description: |-
                                                If specified, header match will be performed based on the suffix of the header value.
                                                Note: empty suffix is not allowed, please use present_match instead.
    
                                                Examples:
    
                                                * The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  metadata:
                                    description: Rate limit on metadata.
                                    properties:
                                      defaultValue:
                                        description: |-
                                          An optional value to use if *metadata_key* is empty. If not set and
                                          no value is present under the metadata_key then no descriptor is generated.
                                        type: string
                                      descriptorKey:
                                        description: Required. The key to use in the descriptor
                                          entry.
                                        type: string
                                      metadataKey:
                                        description: |-
                                          Required. Metadata struct that defines the key and path to retrieve the string value. A match will
                                          only happen if the value in the metadata is of type string.
                                        properties:
                                          key:
                                            description: |-
                                              Required. The key name of Metadata to retrieve the Struct from the metadata.
                                              Typically, it represents a builtin subsystem or custom extension.
                                            type: string
                                          path:
                                            description: |-
                                              Must have at least one element. The path to retrieve the Value from the Struct. It can be a prefix or a full path,
                                              e.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a string in the example,
                                              which depends on the particular scenario.
    
                                              Note: Due to that only the key type segment is supported, the path can not specify a list
                                              unless the list is the last segment.
                                            items:
                                              description: |-
                                                Specifies the segment in a path to retrieve value from Metadata.
                                                Currently it is only supported to specify the key, i.e. field name, as one segment of a path.
                                              oneOf:
                                              - not:
                                                  anyOf:
                                                  - required:
                                                    - key
                                              - required:
                                                - key
                                              properties:
                                                key:
                                                  description: Required. If specified,
                                                    use the key to retrieve the value
                                                    in a Struct.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      source:
                                        description: Source of metadata
                                        enum:
                                        - DYNAMIC
                                        - ROUTE_ENTRY
                                        type: string
                                    type: object
                                  remoteAddress:
                                    description: Rate limit on remote address.
                                    type: object
                                  requestHeaders:
                                    description: Rate limit on request headers.
                                    properties:
                                      descriptorKey:
                                        description: The key to use in the descriptor
                                          entry.
                                        type: string
                                      headerName:
                                        description: |-
                                          The header name to be queried from the request headers. The header’s
                                          value is used to populate the value of the descriptor entry for the
                                          descriptor_key.
                                        type: string
                                    type: object
                                  sourceCluster:
                                    description: Rate limit on source cluster.
                                    type: object
                                type: object
                              type: array
                            limit:
                              description: An optional limit override to be appended to
                                the descriptor produced by this rate limit configuration.
                                If the override value is invalid or cannot be resolved
                                from metadata, no override is provided.
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - dynamicMetadata
                              - required:
                                - dynamicMetadata
                              properties:
                                dynamicMetadata:
                                  description: Limit override from dynamic metadata.
                                  properties:
                                    metadataKey:
                                      description: |-
                                        Metadata struct that defines the key and path to retrieve the struct value.
                                        The value must be a struct containing an integer "requests_per_unit" property
                                        and a "unit" property with a value parseable to :ref:`RateLimitUnit
                                        enum <envoy_v3_api_enum_type.v3.RateLimitUnit>`
                                      properties:
                                        key:
                                          description: |-
                                            Required. The key name of Metadata to retrieve the Struct from the metadata.
                                            Typically, it represents a builtin subsystem or custom extension.
                                          type: string
                                        path:
                                          description: |-
                                            Must have at least one element. The path to retrieve the Value from the Struct. It can be a prefix or a full path,
                                            e.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a string in the example,
                                            which depends on the particular scenario.
    
                                            Note: Due to that only the key type segment is supported, the path can not specify a list
                                            unless the list is the last segment.
                                          items:
                                            description: |-
                                              Specifies the segment in a path to retrieve value from Metadata.
                                              Currently it is only supported to specify the key, i.e. field name, as one segment of a path.
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - key
                                            - required:
                                              - key
                                            properties:
                                              key:
                                                description: Required. If specified, use
                                                  the key to retrieve the value in a Struct.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                              type: object
                            setActions:
                              items:
                                description: |-
                                  Copied directly from envoy
                                  https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route_components.proto#envoy-v3-api-msg-config-route-v3-ratelimit-action
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - sourceCluster
                                    - required:
                                      - destinationCluster
                                    - required:
                                      - requestHeaders
                                    - required:
                                      - remoteAddress
                                    - required:
                                      - genericKey
                                    - required:
                                      - headerValueMatch
                                    - required:
                                      - metadata
                                - required:
                                  - sourceCluster
                                - required:
                                  - destinationCluster
                                - required:
                                  - requestHeaders
                                - required:
                                  - remoteAddress
                                - required:
                                  - genericKey
                                - required:
                                  - headerValueMatch
                                - required:
                                  - metadata
                                properties:
                                  destinationCluster:
                                    description: Rate limit on destination cluster.
                                    type: object
                                  genericKey:
                                    description: Rate limit on a generic key.
                                    properties:
                                      descriptorValue:
                                        description: The value to use in the descriptor
                                          entry.
                                        type: string
                                    type: object
                                  headerValueMatch:
                                    description: Rate limit on the existence of request
                                      headers.
                                    properties:
                                      descriptorValue:
                                        description: The value to use in the descriptor
                                          entry.
                                        type: string
                                      expectMatch:
                                        description: |-
                                          If set to true, the action will append a descriptor entry when the
                                          request matches the headers. If set to false, the action will append a
                                          descriptor entry when the request does not match the headers. The
                                          default value is true.
                                        nullable: true
                                        type: boolean
                                      headers:
                                        description: |-
                                          Specifies a set of headers that the rate limit action should match
                                          on. The action will check the request’s headers against all the
                                          specified headers in the config. A match will happen if all the
                                          headers in the config are present in the request with the same values
                                          (or based on presence if the value field is not in the config).
                                        items:
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - exactMatch
                                              - required:
                                                - regexMatch
                                              - required:
                                                - rangeMatch
                                              - required:
                                                - presentMatch
                                              - required:
                                                - prefixMatch
                                              - required:
                                                - suffixMatch
                                          - required:
                                            - exactMatch
                                          - required:
                                            - regexMatch
                                          - required:
                                            - rangeMatch
                                          - required:
                                            - presentMatch
                                          - required:
                                            - prefixMatch
                                          - required:
                                            - suffixMatch
                                          properties:
                                            exactMatch:
                                              description: If specified, header match
                                                will be performed based on the value of
                                                the header.
                                              type: string
                                            invertMatch:
                                              description: |-
                                                If specified, the match result will be inverted before checking. Defaults to false.
    
                                                Examples:
    
                                                * The regex *\d{3}* does not match the value *1234*, so it will match when inverted.
                                                * The range [-10,0) will match the value -1, so it will not match when inverted.
                                              type: boolean
                                            name:
                                              description: Specifies the name of the header
                                                in the request.
                                              type: string
                                            prefixMatch:
                                              description: |-
                                                If specified, header match will be performed based on the prefix of the header value.
                                                Note: empty prefix is not allowed, please use present_match instead.
    
                                                Examples:
    
                                                * The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*.
                                              type: string
                                            presentMatch:
                                              description: |-
                                                If specified, header match will be performed based on whether the header is in the
                                                request.
                                              type: boolean
                                            rangeMatch:
                                              description: |-
                                                If specified, header match will be performed based on range.
                                                The rule will match if the request header value is within this range.
                                                The entire request header value must represent an integer in base 10 notation: consisting of
                                                an optional plus or minus sign followed by a sequence of digits. The rule will not match if
                                                the header value does not represent an integer. Match will fail for empty values, floating
                                                point numbers or if only a subsequence of the header value is an integer.
    
                                                Examples:
    
                                                * For range [-10,0), route will match for header value -1, but not for 0, "somestring", 10.9,
                                                  "-1somestring"
                                              properties:
                                                end:
                                                  description: end of the range (exclusive)
                                                  format: int64
                                                  type: integer
                                                start:
                                                  description: start of the range (inclusive)
                                                  format: int64
                                                  type: integer
                                              type: object
                                            regexMatch:
                                              description: |-
                                                If specified, this regex string is a regular expression rule which implies the entire request
                                                header value must match the regex. The rule will not match if only a subsequence of the
                                                request header value matches the regex. The regex grammar used in the value field is defined
                                                `(here)[https://en.cppreference.com/w/cpp/regex/ecmascript]`.
    
                                                Examples:
    
                                                * The regex *\d{3}* matches the value *123*
                                                * The regex *\d{3}* does not match the value *1234*
                                                * The regex *\d{3}* does not match the value *123.456*
                                              type: string
                                            suffixMatch:
                                              description: |-
                                                If specified, header match will be performed based on the suffix of the header value.
                                                Note: empty suffix is not allowed, please use present_match instead.
    
                                                Examples:
    
                                                * The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  metadata:
                                    description: Rate limit on metadata.
                                    properties:
                                      defaultValue:
                                        description: |-
                                          An optional value to use if *metadata_key* is empty. If not set and
                                          no value is present under the metadata_key then no descriptor is generated.
                                        type: string
                                      descriptorKey:
                                        description: Required. The key to use in the descriptor
                                          entry.
                                        type: string
                                      metadataKey:
                                        description: |-
                                          Required. Metadata struct that defines the key and path to retrieve the string value. A match will
                                          only happen if the value in the metadata is of type string.
                                        properties:
                                          key:
                                            description: |-
                                              Required. The key name of Metadata to retrieve the Struct from the metadata.
                                              Typically, it represents a builtin subsystem or custom extension.
                                            type: string
                                          path:
                                            description: |-
                                              Must have at least one element. The path to retrieve the Value from the Struct. It can be a prefix or a full path,
                                              e.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a string in the example,
                                              which depends on the particular scenario.
    
                                              Note: Due to that only the key type segment is supported, the path can not specify a list
                                              unless the list is the last segment.
                                            items:
                                              description: |-
                                                Specifies the segment in a path to retrieve value from Metadata.
                                                Currently it is only supported to specify the key, i.e. field name, as one segment of a path.
                                              oneOf:
                                              - not:
                                                  anyOf:
                                                  - required:
                                                    - key
                                              - required:
                                                - key
                                              properties:
                                                key:
                                                  description: Required. If specified,
                                                    use the key to retrieve the value
                                                    in a Struct.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      source:
                                        description: Source of metadata
                                        enum:
                                        - DYNAMIC
                                        - ROUTE_ENTRY
                                        type: string
                                    type: object
                                  remoteAddress:
                                    description: Rate limit on remote address.
                                    type: object
                                  requestHeaders:
                                    description: Rate limit on request headers.
                                    properties:
                                      descriptorKey:
                                        description: The key to use in the descriptor
                                          entry.
                                        type: string
                                      headerName:
                                        description: |-
                                          The header name to be queried from the request headers. The header’s
                                          value is used to populate the value of the descriptor entry for the
                                          descriptor_key.
                                        type: string
                                    type: object
                                  sourceCluster:
                                    description: Rate limit on source cluster.
                                    type: object
                                type: object
                              type: array
                          type: object
                        type: array
                    type: object
                  serverSettings:
                    description: |-
                      Reference to the RatelimitServerSettings to use for this policy.
                      Currently routes on a single VirtualGateway or destination must share a single RatelimitServerSettings.
                      If none is provided, the default Gloo RatelimitServerSettings will be used.
                    properties:
                      cluster:
                        description: the cluster of the object. If omitted, Gloo Mesh
                          will use the same cluster as the parent object containing this
                          reference.
                        type: string
                      name:
                        description: the name of the object
                        type: string
                      namespace:
                        description: the namespace of the object. If omitted, Gloo Mesh
                          will use the same namespace as the parent object containing
                          this reference.
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: The status of the policy after it is applied to your Gloo environment.
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              destinationServer:
                description: The rate limit server specified by the `server_settings`.
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - ref
                    - required:
                      - awsLambda
                - required:
                  - ref
                - required:
                  - awsLambda
                properties:
                  awsLambda:
                    description: Reference an AWS Lambda function.
                    properties:
                      cloudProvider:
                        description: Reference to the AWS Cloud Provider.
                        properties:
                          cluster:
                            description: the cluster of the object. If omitted, Gloo Mesh
                              will use the same cluster as the parent object containing
                              this reference.
                            type: string
                          name:
                            description: the name of the object
                            type: string
                          namespace:
                            description: the namespace of the object. If omitted, Gloo
                              Mesh will use the same namespace as the parent object containing
                              this reference.
                            type: string
                        type: object
                      function:
                        description: Name of the function to reference.
                        type: string
                      options:
                        description: |-
                          Specify how the destinations should be configured, for configuring lambda functions.
                          If the destination config is required for the destination and not provided by the user, Gloo will invalidate the
                          destination and its parent resources.
                        properties:
                          invocationStyle:
                            description: |-
                              Can be either Sync or Async. See [AWS Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html)
                              for more details.
                            enum:
                            - SYNC
                            - ASYNC
                            type: string
                          requestTransformation:
                            enum:
                            - REQUEST_DEFAULT
                            - REQUEST_DISABLE
                            type: string
                          responseTransformation:
                            enum:
                            - RESPONSE_DEFAULT
                            - RESPONSE_DISABLE
                            type: string
                        type: object
                      qualifier:
                        description: Qualifier of the function to reference. Defaults
                          to $LATEST
                        type: string
                    type: object
                  kind:
                    description: |-
                      the kind of Kubernetes destination being referenced. defaults to Service.
                      Only applicable for Kubernetes destinations. For non Kubernetes destinations, this field is ignored.
                    enum:
                    - SERVICE
                    - VIRTUAL_DESTINATION
                    - EXTERNAL_SERVICE
                    type: string
                  port:
                    description: the port on the destination object being targeted. required
                      if the object provides more than one port.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - number
                        - required:
                          - name
                    - required:
                      - number
                    - required:
                      - name
                    properties:
                      name:
                        description: the name of the port on the destination objects being
                          targeted.
                        type: string
                      number:
                        description: the number of the port on the destination objects
                          being targeted.
                        maximum: 65535
                        minimum: 1
                        type: integer
                    type: object
                  ref:
                    description: reference to a Kubernetes destination object by its metadata
                    properties:
                      cluster:
                        description: the cluster of the object. If omitted, Gloo Mesh
                          will use the same cluster as the parent object containing this
                          reference.
                        type: string
                      name:
                        description: the name of the object
                        type: string
                      namespace:
                        description: the namespace of the object. If omitted, Gloo Mesh
                          will use the same namespace as the parent object containing
                          this reference.
                        type: string
                    type: object
                  subset:
                    additionalProperties:
                      type: string
                    description: |-
                      select a subset of the destination's endpoints for routing based on their labels.
                      Only applicable for Kubernetes destinations.
                    type: object
                  weight:
                    description: |-
                      Specify the proportion of traffic to be forwarded to this destination.
                      Weights across all of the `destinations` must sum to 100.
                      Weight is only relevant when used in the context of a route with multiple destinations.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
              numSelectedDestinationPorts:
                description: The number of destination ports selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
              numSelectedRoutes:
                description: The number of routes selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: gloo-platform-crds/templates/trafficcontrol.policy.gloo.solo.io_crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: ee71a20cce87de97
    crd.solo.io/version: 2.7.2
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: transformationpolicies.trafficcontrol.policy.gloo.solo.io
spec:
  group: trafficcontrol.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: TransformationPolicy
    listKind: TransformationPolicyList
    plural: transformationpolicies
    shortNames:
    - tp
    singular: transformationpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.common.State.approval
      name: Status
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              TransformationPolicy is used to transform HTTP requests and responses matching selected routes.
              TransformationPolicies are applied at the *Route* level.
            properties:
              applyToRoutes:
                description: |-
                  Routes to apply the policy to.
                  If empty, the policy applies to all workloads in the workspace.
                items:
                  description: |-
                    RouteSelector is a Selector specifically built for individual Routes inside of RouteTables.
    
                    This selector can be used to select individual routes or entire route tables using the same label selector.
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: Only select routes attached to route tables matching
                            the cluster.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Select routes including all specified labels on
                            the route or route table.
                          type: object
                        namespace:
                          description: Only select routes attached to route tables matching
                            the namespace.
                          type: string
                        workspace:
                          description: Only select routes attached to route tables matching
                            the workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used to apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: The kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            The port on the Destination which receives traffic.
                            All ports on the Destination will be selected if left empty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination objects
                                being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination objects
                                being targeted.
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                        selector:
                          description: The selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If omitted, Gloo selects
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If omitted, Gloo selects
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If omitted, Gloo selects
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If omitted, Gloo selects
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the transformation policy to apply to the
                  selected routes.
                properties:
                  phase:
                    description: |-
                      Specify the phase to indicate where this policy should be applied relative to other policies.
                      If no phase is specified, the default will be post AuthZ.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - preAuthz
                        - required:
                          - postAuthz
                    - required:
                      - preAuthz
                    - required:
                      - postAuthz
                    properties:
                      postAuthz:
                        description: Apply this policy after Authorization policies are
                          applied.
                        properties:
                          priority:
                            description: |-
                              The priority at which this policy should be applied relative to other policies defined in the same phase.
                              The lowest priority will be run first and the default priority value is 0.
                              For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#int32-value).
                            maximum: 2147483647
                            minimum: -2147483648
                            nullable: true
                            type: integer
                        type: object
                      preAuthz:
                        description: Apply this policy before Authorization policies are
                          applied.
                        properties:
                          priority:
                            description: |-
                              The priority at which this policy should be applied relative to other policies defined in the same phase.
                              The lowest priority will be run first and the default priority value is 0.
                              For information about the value format, see the [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#int32-value).
                            maximum: 2147483647
                            minimum: -2147483648
                            nullable: true
                            type: integer
                        type: object
                    type: object
                  request:
                    description: Transformation to be applied before the request is sent
                      to the upstream service.
                    properties:
                      injaTemplate:
                        description: |-
                          Transform HTTP body and headers using Inja templates.
                          Note that the dynamicMetadataValues.jsonToProto subfield is only supported by Istio versions 1.22 and later.
                          For more information, see the [Envoy `transformation_filter.proto`](https://github.com/solo-io/envoy-gloo/blob/master/api/envoy/config/filter/http/transformation/v2/transformation_filter.proto#L155).
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - body
                            - required:
                              - passthrough
                            - required:
                              - mergeExtractorsToBody
                        - required:
                          - body
                        - required:
                          - passthrough
                        - required:
                          - mergeExtractorsToBody
                        properties:
                          advancedTemplates:
                            description: |-
                              If set to true, use JSON pointer notation (e.g. "time/start") instead of
                              dot notation (e.g. "time.start") to access JSON elements. Defaults to
                              false.
    
                              Please note that, if set to 'true', you will need to use the `extraction`
                              function to access extractors in the template (e.g. '{{
                              extraction("my_extractor") }}'); if the default value of 'false' is used,
                              extractors will simply be available by their name (e.g. '{{ my_extractor
                              }}').
                            type: boolean
                          body:
                            description: Apply a template to the body
                            properties:
                              text:
                                type: string
                            type: object
                          dynamicMetadataValues:
                            description: Use this field to set Dynamic Metadata.
                            items:
                              description: |-
                                Defines an [Envoy Dynamic
                                Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata)
                                entry.
                              properties:
                                jsonToProto:
                                  description: Unused to be implemented in 1.30
                                  type: boolean
                                key:
                                  description: The metadata key.
                                  type: string
                                metadataNamespace:
                                  description: The metadata namespace. Defaults to the
                                    filter namespace.
                                  type: string
                                value:
                                  description: A template that determines the metadata
                                    value.
                                  properties:
                                    text:
                                      type: string
                                  type: object
                              type: object
                            type: array
                          escapeCharacters:
                            description: |-
                              Use to escape the output of a body transformation. This will cause
                              rendered string values to be escaped in order to make valid JSON/YAML strings
                            type: boolean
                          extractors:
                            additionalProperties:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - header
                                  - required:
                                    - body
                              - required:
                                - header
                              - required:
                                - body
                              properties:
                                body:
                                  description: Extract information from the request/response
                                    body
                                  maxProperties: 0
                                  type: object
                                header:
                                  description: Extract information from headers
                                  type: string
                                mode:
                                  description: |-
                                    The mode of operation for the extraction.
                                    Defaults to EXTRACT.
                                  enum:
                                  - EXTRACT
                                  - SINGLE_REPLACE
                                  - REPLACE_ALL
                                  type: string
                                regex:
                                  description: |-
                                    The regex field specifies the regular expression used for matching against the source content. This field is required.
                                    - In EXTRACT mode, the entire source must match the regex. The subgroup-th capturing group,
                                      if specified, determines which part of the match is extracted. if the regex does not match the source
                                      the result of the extraction will be an empty value.
                                    - In SINGLE_REPLACE mode, the regex also needs to match the entire source. The subgroup-th capturing group
                                      is targeted for replacement with the replacement_text. if the regex does not match the source
                                      the result of the extraction will be the source itself.
                                    - In REPLACE_ALL mode, the regex is applied repeatedly to find all occurrences within the source that match.
                                      Each matching occurrence is replaced with the replacement_text, and the subgroup field is not used. if the
                                      regex does not match the source the result of the extraction will be the source itself.
                                  type: string
                                replacementText:
                                  description: |-
                                    Used in SINGLE_REPLACE and REPLACE_ALL modes.
                                    `replacement_text` is used to format the substitution for matched sequences in the input string
                                    - In SINGLE_REPLACE mode, the content in the subgroup-th capturing group is replaced with the `replacement_text`.
                                    - In REPLACE_ALL mode, each sequence matching the specified regex in the in the input is replaced with the `replacement_text`.
                                        The replacement_text may contain special syntax, such as $1, $2, etc., to refer to captured groups within the regular expression.
                                        The value contained within `replacement_text` is treated as a string, and is passed to std::regex_replace as the replacement string.
                                        see https://en.cppreference.com/w/cpp/regex/regex_replace for more details.
                                  nullable: true
                                  type: string
                                subgroup:
                                  description: |-
                                    If your regex contains capturing groups, use this field to determine which
                                    group should be selected.
                                    For EXTRACT and SINGLE_REPLACE, refers to the portion of the text
                                    to extract/replace.
                                    Config will be rejected if this is specified in REPLACE_ALL mode.
                                  maximum: 4294967295
                                  minimum: 0
                                  type: integer
                              type: object
                            description: |-
                              Use this attribute to extract information from the request. It consists of
                              a map of strings to extractors. The extractor will defines which
                              information will be extracted, while the string key will provide the
                              extractor with a name. You can reference extractors by their name in
                              templates, e.g. "{{ my-extractor }}" will render to the value of the
                              "my-extractor" extractor.
                            type: object
                          headers:
                            additionalProperties:
                              properties:
                                text:
                                  type: string
                              type: object
                            description: |-
                              Use this attribute to transform request/response headers. It consists of a
                              map of strings to templates. The string key determines the name of the
                              resulting header, the rendered template will determine the value. Any existing
                              headers with the same header name will be replaced by the transformed header.
                              If a header name is included in `headers` and `headers_to_append`, it will first
                              be replaced the template in `headers`, then additional header values will be appended
                              by the templates defined in `headers_to_append`.
                            type: object
                          headersToAppend:
                            description: |-
                              Use this attribute to transform request/response headers. It consists of
                              an array of string/template objects. Use this attribute to define multiple
                              templates for a single header. Header template(s) defined here will be appended to any
                              existing headers with the same header name, not replace existing ones.
                            items:
                              description: Defines a header-template pair to be used in
                                `headers_to_append`
                              properties:
                                key:
                                  description: Header name
                                  type: string
                                value:
                                  description: Apply a template to the header value
                                  properties:
                                    text:
                                      type: string
                                  type: object
                              type: object
                            type: array
                          headersToRemove:
                            items:
                              type: string
                            type: array
                          ignoreErrorOnParse:
                            description: |-
                              If set to true, Envoy will not throw an exception in case the body parsing
                              fails.
                            type: boolean
                          mergeExtractorsToBody:
                            description: |-
                              Merge all defined extractors to the request/response body.
                              If you want to nest elements inside the body, use dot separator in the
                              extractor name.
                            type: object
                          parseBodyBehavior:
                            enum:
                            - ParseAsJson
                            - DontParse
                            type: string
                          passthrough:
                            description: |-
                              This will cause the transformation filter not to buffer the body.
                              Use this setting if the response body is large and you don't need to
                              transform nor extract information from it.
                            type: object
                        type: object
                      recalculateRoutingDestination:
                        description: |-
                          If set to **true**, recalculate the routing destination and select a new route for transformed requests.
                          For example, if you have a request that is transformed to match a new route, the new route is selected
                          when calculating the routing destination. The default value is **false**.
                        type: boolean
                    type: object
                  response:
                    description: Transform the response received from the upstream service
                      before returning it to the client.
                    properties:
                      injaTemplate:
                        description: |-
                          Transform response body and headers using Inja templates.
                          Note that the dynamicMetadataValues.jsonToProto subfield is only supported by Istio versions 1.22 and later.
                          For more information, see the [Envoy `transformation_filter.proto`](https://github.com/solo-io/envoy-gloo/blob/master/api/envoy/config/filter/http/transformation/v2/transformation_filter.proto#L155).
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - body
                            - required:
                              - passthrough
                            - required:
                              - mergeExtractorsToBody
                        - required:
                          - body
                        - required:
                          - passthrough
                        - required:
                          - mergeExtractorsToBody
                        properties:
                          advancedTemplates:
                            description: |-
                              If set to true, use JSON pointer notation (e.g. "time/start") instead of
                              dot notation (e.g. "time.start") to access JSON elements. Defaults to
                              false.
    
                              Please note that, if set to 'true', you will need to use the `extraction`
                              function to access extractors in the template (e.g. '{{
                              extraction("my_extractor") }}'); if the default value of 'false' is used,
                              extractors will simply be available by their name (e.g. '{{ my_extractor
                              }}').
                            type: boolean
                          body:
                            description: Apply a template to the body
                            properties:
                              text:
                                type: string
                            type: object
                          dynamicMetadataValues:
                            description: Use this field to set Dynamic Metadata.
                            items:
                              description: |-
                                Defines an [Envoy Dynamic
                                Metadata](https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata)
                                entry.
                              properties:
                                jsonToProto:
                                  description: Unused to be implemented in 1.30
                                  type: boolean
                                key:
                                  description: The metadata key.
                                  type: string
                                metadataNamespace:
                                  description: The metadata namespace. Defaults to the
                                    filter namespace.
                                  type: string
                                value:
                                  description: A template that determines the metadata
                                    value.
                                  properties:
                                    text:
                                      type: string
                                  type: object
                              type: object
                            type: array
                          escapeCharacters:
                            description: |-
                              Use to escape the output of a body transformation. This will cause
                              rendered string values to be escaped in order to make valid JSON/YAML strings
                            type: boolean
                          extractors:
                            additionalProperties:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - header
                                  - required:
                                    - body
                              - required:
                                - header
                              - required:
                                - body
                              properties:
                                body:
                                  description: Extract information from the request/response
                                    body
                                  maxProperties: 0
                                  type: object
                                header:
                                  description: Extract information from headers
                                  type: string
                                mode:
                                  description: |-
                                    The mode of operation for the extraction.
                                    Defaults to EXTRACT.
                                  enum:
                                  - EXTRACT
                                  - SINGLE_REPLACE
                                  - REPLACE_ALL
                                  type: string
                                regex:
                                  description: |-
                                    The regex field specifies the regular expression used for matching against the source content. This field is required.
                                    - In EXTRACT mode, the entire source must match the regex. The subgroup-th capturing group,
                                      if specified, determines which part of the match is extracted. if the regex does not match the source
                                      the result of the extraction will be an empty value.
                                    - In SINGLE_REPLACE mode, the regex also needs to match the entire source. The subgroup-th capturing group
                                      is targeted for replacement with the replacement_text. if the regex does not match the source
                                      the result of the extraction will be the source itself.
                                    - In REPLACE_ALL mode, the regex is applied repeatedly to find all occurrences within the source that match.
                                      Each matching occurrence is replaced with the replacement_text, and the subgroup field is not used. if the
                                      regex does not match the source the result of the extraction will be the source itself.
                                  type: string
                                replacementText:
                                  description: |-
                                    Used in SINGLE_REPLACE and REPLACE_ALL modes.
                                    `replacement_text` is used to format the substitution for matched sequences in the input string
                                    - In SINGLE_REPLACE mode, the content in the subgroup-th capturing group is replaced with the `replacement_text`.
                                    - In REPLACE_ALL mode, each sequence matching the specified regex in the in the input is replaced with the `replacement_text`.
                                        The replacement_text may contain special syntax, such as $1, $2, etc., to refer to captured groups within the regular expression.
                                        The value contained within `replacement_text` is treated as a string, and is passed to std::regex_replace as the replacement string.
                                        see https://en.cppreference.com/w/cpp/regex/regex_replace for more details.
                                  nullable: true
                                  type: string
                                subgroup:
                                  description: |-
                                    If your regex contains capturing groups, use this field to determine which
                                    group should be selected.
                                    For EXTRACT and SINGLE_REPLACE, refers to the portion of the text
                                    to extract/replace.
                                    Config will be rejected if this is specified in REPLACE_ALL mode.
                                  maximum: 4294967295
                                  minimum: 0
                                  type: integer
                              type: object
                            description: |-
                              Use this attribute to extract information from the request. It consists of
                              a map of strings to extractors. The extractor will defines which
                              information will be extracted, while the string key will provide the
                              extractor with a name. You can reference extractors by their name in
                              templates, e.g. "{{ my-extractor }}" will render to the value of the
                              "my-extractor" extractor.
                            type: object
                          headers:
                            additionalProperties:
                              properties:
                                text:
                                  type: string
                              type: object
                            description: |-
                              Use this attribute to transform request/response headers. It consists of a
                              map of strings to templates. The string key determines the name of the
                              resulting header, the rendered template will determine the value. Any existing
                              headers with the same header name will be replaced by the transformed header.
                              If a header name is included in `headers` and `headers_to_append`, it will first
                              be replaced the template in `headers`, then additional header values will be appended
                              by the templates defined in `headers_to_append`.
                            type: object
                          headersToAppend:
                            description: |-
                              Use this attribute to transform request/response headers. It consists of
                              an array of string/template objects. Use this attribute to define multiple
                              templates for a single header. Header template(s) defined here will be appended to any
                              existing headers with the same header name, not replace existing ones.
                            items:
                              description: Defines a header-template pair to be used in
                                `headers_to_append`
                              properties:
                                key:
                                  description: Header name
                                  type: string
                                value:
                                  description: Apply a template to the header value
                                  properties:
                                    text:
                                      type: string
                                  type: object
                              type: object
                            type: array
                          headersToRemove:
                            items:
                              type: string
                            type: array
                          ignoreErrorOnParse:
                            description: |-
                              If set to true, Envoy will not throw an exception in case the body parsing
                              fails.
                            type: boolean
                          mergeExtractorsToBody:
                            description: |-
                              Merge all defined extractors to the request/response body.
                              If you want to nest elements inside the body, use dot separator in the
                              extractor name.
                            type: object
                          parseBodyBehavior:
                            enum:
                            - ParseAsJson
                            - DontParse
                            type: string
                          passthrough:
                            description: |-
                              This will cause the transformation filter not to buffer the body.
                              Use this setting if the response body is large and you don't need to
                              transform nor extract information from it.
                            type: object
                        type: object
                    type: object
                type: object
            type: object
          status:
            properties:
              common:
                description: The state and workspace conditions of the applied resource.
                properties:
                  State:
                    properties:
                      approval:
                        description: |-
                          Whether the resource has been accepted as valid and processed in the Gloo
                          Mesh config translation.
                        enum:
                        - PENDING
                        - ACCEPTED
                        - INVALID
                        - WARNING
                        - FAILED
                        - UNLICENSED
                        type: string
                      message:
                        description: Additional information about the current state of
                          the resource.
                        type: string
                      observedGeneration:
                        description: |-
                          The most recent generation observed in the object's metadata.
                          If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                          has not processed the most recent version of this object.
                        format: int64
                        type: integer
                    type: object
                  workspaceConditions:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    description: |-
                      A map of ApprovalState to the number of workspaces in this condition, e.g.,
                      "Accepted" -> 2
                      "Pending" -> 1
                    type: object
                type: object
              numSelectedRoutes:
                description: The number of routes selected by the policy.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

